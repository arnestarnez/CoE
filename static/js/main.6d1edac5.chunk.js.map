{"version":3,"sources":["../node_modules/typescript/lib sync","serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/ModalComponent/ModalComponent.js","kumpulanUrl.js","components/LapPeriode/LapPeriode.jsx","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/AppMenuItem.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/components/ImportScript/ImportScript.js","layouts/Main/Main.js","layouts/Minimal/Minimal.js","views/Home/Home.js","layouts/MinimalUser/MinimalUser.js","views/Dashboard/Dashboard.js","components/usePagination.js","components/Pagination.js","views/MiaCluster/MiaCluster.js","views/MiaSubmittion/MiaSubmittion.js","views/MiaReviewing/MiaReviewing.js","views/MiaJudging/MiaJudging.js","views/MiaAward/MiaAward.js","views/MiaDashboard/MiaDashboard.js","views/NotFound/NotFound.js","views/SignIn/SignIn.js","views/Signout/Signout.js","views/SignUp/SignUp.js","views/Profile/components/ProfileAddModi/ProfileAddModi.js","views/Profile/Profile.jsx","views/Dashboard/components/VisitorUser/VisitorUser.js","views/ProvinsiList/components/ProvinsisTable/ProvinsisTable.jsx","views/ProvinsiList/components/ProvinsiAddModi/ProvinsiAddModi.js","views/ProvinsiList/components/ProvinsisToolbar/ProvinsisToolbar.js","components/LeafletComponent/context.js","components/LeafletComponent/MapControl.js","components/LeafletComponent/AttributionControl.js","components/LeafletComponent/MapEvented.js","components/LeafletComponent/MapComponent.js","components/LeafletComponent/MapLayer.js","components/LeafletComponent/Path.js","components/LeafletComponent/utils/pick.js","components/LeafletComponent/utils/updateClassName.js","components/LeafletComponent/Circle.js","components/LeafletComponent/CircleMarker.js","components/LeafletComponent/DivOverlay.js","components/LeafletComponent/GridLayer.js","components/LeafletComponent/FeatureGroup.js","components/LeafletComponent/GeoJSON.js","components/LeafletComponent/LayersControl.js","components/LeafletComponent/ImageOverlay.js","components/LeafletComponent/LayerGroup.js","components/LeafletComponent/utils/omit.js","components/LeafletComponent/Marker.js","components/LeafletComponent/Map.js","components/LeafletComponent/Pane.js","components/LeafletComponent/Popup.js","components/LeafletComponent/Polygon.js","components/LeafletComponent/Polyline.js","components/LeafletComponent/Rectangle.js","components/LeafletComponent/ScaleControl.js","components/LeafletComponent/SVGOverlay.js","components/LeafletComponent/TileLayer.js","components/LeafletComponent/Tooltip.js","components/LeafletComponent/VideoOverlay.js","components/LeafletComponent/WMSTileLayer.js","components/LeafletComponent/ZoomControl.js","views/ProvinsiList/dataPropinsi.js","views/ProvinsiList/components/ViewMap/ViewMap.js","views/ProvinsiList/dataSettingprovinsi.js","views/ProvinsiList/ProvinsiList.js","views/KelurahanList/components/KelurahansTable/KelurahansTable.jsx","views/KelurahanList/components/KelurahanAddModi/KelurahanAddModi.js","views/KelurahanList/dataSettingkelurahan.js","views/KelurahanList/KelurahanList.js","views/LaporanKabupaten/components/LaporanKabupatenTable/LaporanKabupatenTable.jsx","views/LaporanKabupaten/components/KabupatenSearchModi/KabupatenSearchModi.jsx","views/LaporanKabupaten/LaporanKabupaten.jsx","views/LaporanPerKabupaten/components/LaporanPerKabupatenTable/LaporanPerKabupatenTable.jsx","views/LaporanPerKabupaten/components/PerKabupatenSearchModi/PerKabupatenSearchModi.jsx","views/LaporanPerKabupaten/LaporanPerKabupaten.jsx","views/LaporanPerKecamatan/components/LaporanPerKecamatanTable/LaporanPerKecamatanTable.jsx","views/LaporanPerKecamatan/components/PerKecamatanSearchModi/PerKecamatanSearchModi.jsx","views/LaporanPerKecamatan/LaporanPerKecamatan.jsx","views/LaporanKecamatan/components/LaporanKecamatanTable/LaporanKecamatanTable.jsx","views/LaporanKecamatan/components/KecamatanSearchModi/KecamatanSearchModi.jsx","views/LaporanKecamatan/LaporanKecamatan.jsx","views/LaporanKelurahan/components/LaporanKelurahanTable/LaporanKelurahanTable.jsx","views/LaporanKelurahan/components/KelurahanSearchModi/KelurahanSearchModi.jsx","views/LaporanKelurahan/LaporanKelurahan.jsx","views/LaporanPerKelurahan/components/PerKelurahanTable/PerKelurahanTable.jsx","views/LaporanPerKelurahan/components/PerKelurahanSearchModi/PerKelurahanSearchModi.jsx","views/LaporanPerKelurahan/LaporanPerKelurahan.jsx","views/LaporanSensusPerKelurahan/components/SensusKelurahanTable/SensusKelurahanTable.jsx","views/LaporanSensusPerKelurahan/components/SensusPerKelurahanSearchModi/SensusPerKelurahanSearchModi.jsx","views/LaporanSensusPerKelurahan/LaporanSensusPerKelurahan.jsx","views/LaporanSensusPerKecamatan/components/SensusKecamatanTable/SensusKecamatanTable.jsx","views/LaporanSensusPerKecamatan/components/SensusPerKecamatanSearchModi/SensusPerKecamatanSearchModi.jsx","views/LaporanSensusPerKecamatan/LaporanSensusPerKecamatan.jsx","views/KecamatanList/components/KecamatanTable/KecamatanTable.jsx","views/KecamatanList/components/KecamatanAddModi/KecamatanAddModi.jsx","views/KecamatanList/KecamatanList.jsx","views/KabupatenList/components/KabupatenTable/KabupatenTable.jsx","views/KabupatenList/components/KabupatenAddModi/KabupatenAddModi.jsx","views/KabupatenList/KabupatenList.jsx","views/LaporanProvID/components/ProvinsiIDTable/ProvinsiIDTable.jsx","views/LaporanProvID/LaporanProvID.jsx","views/LaporanPerProv/components/LaporanPerProvTable/LaporanPerProvtable.jsx","views/LaporanPerProv/components/ComboProv/ComboProv.jsx","views/LaporanPerProv/LaporanPerProvList.jsx","views/RtList/components/RtTable/RtTable.jsx","views/RtList/components/RtAddModi/RtAddModi.jsx","views/RtList/RtList.jsx","views/RwList/components/RwTable/RwTable.jsx","views/RwList/components/RwAddModi/RwAddModi.jsx","views/RwList/RwList.jsx","views/VuserList/components/VuserTable/VuserTable.jsx","views/VuserList/components/VuserAddModi/VuserAddModi.jsx","views/VuserList/VuserList.jsx","views/SettingList/components/SettingTable/SettingTable.jsx","views/SettingList/components/SettingAddModi/SettingAddModi.jsx","views/SettingList/SettingList.jsx","views/KelompokDataList/components/KelompokDataTable/KelompokDataTable.jsx","views/KelompokDataList/components/KelompokDataAddModi/KelompokDataAddModi.jsx","views/KelompokDataList/KelompokDataList.jsx","views/LaporanSensusID/components/LaporanSensusIDTable/LaporanSensusIDTable.jsx","views/LaporanSensusID/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusID/LaporanSensusID.jsx","views/TargetKkList/components/TargetKkTable/TargetKkTable.jsx","views/TargetKkList/components/TargetKkAddModi/TargetKkAddModi.jsx","views/TargetKkList/TargetKkList.jsx","views/LaporanSensusPerKab/components/LaporanSensusPerKabTable/LaporanSensusPerKab.jsx","views/LaporanSensusPerKab/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusPerKab/LaporanSensusPerKab.jsx","views/LaporanSensusPerProv/components/LaporanSensusPerProvTable/LaporanSensusPerProvTable.jsx","views/LaporanSensusPerProv/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusPerProv/LaporanSensusPerProv.jsx","views/UserAccessSurveyList/components/UserAccessSurveyTable/UserAccessSurveyTable.jsx","views/UserAccessSurveyList/components/UserAccessSurveyModi/UserAccessSurveyModi.jsx","views/UserAccessSurveyList/UserAccessSurveyList.jsx","views/LaporanTargetRealisasiID/components/LaporanTargetTable/LaporanTargetTable.jsx","views/LaporanTargetRealisasiID/LaporanTargetRealisasiID.jsx","views/LaporanTargetRealisasiPerprov/components/LaporanTargetSearch/LaporanTargetSearch.jsx","views/LaporanTargetRealisasiPerprov/components/LaporanTargetPerprovTable/LaporanTargetPerprovTable.jsx","views/LaporanTargetRealisasiPerprov/LaporanTargetRealisasiPerprov.jsx","views/LaporanTargetRealisasiPerkab/components/LaporanTargetSearch/LaporanTargetSearch.jsx","views/LaporanTargetRealisasiPerkab/components/LaporanTargetPerkabTable/LaporanTargetPerkabTable.jsx","views/LaporanTargetRealisasiPerkab/LaporanTargetRealisasiPerkab.jsx","views/LaporanKbId/components/LaporanKbIdTable/LaporanKbIdTable.jsx","views/LaporanKbId/LaporanKbId.jsx","views/LaporanKbPerProv/components/LaporanKbSearch/LaporanKbSearch.jsx","views/LaporanKbPerProv/components/LaporanKbPerprovTable/LaporanKbPerprovTable.jsx","views/LaporanKbPerProv/LaporanKbPerProv.jsx","views/LaporanKbPerkab/components/LaporanKbSearch/LaporanKbSearch.jsx","views/LaporanKbPerkab/components/LaporanKbPerkabTable/LaporanKbPerkabTable.jsx","views/LaporanKbPerkab/LaporanKbPerkab.jsx","Routes.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","green","red","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","info","warning","orange","error","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","paddingBottom","paddingTop","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","textfind","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","modal","justifyContent","overflow","border","shadows","ModalComponent","datas","handleChange","getProv","getDataBackend","setData2","setData","setRowSelect","users","groups","roles","open","setOpen","title","rowSelect","ComponenAddModi","handleClose","ViewMap","AnggotaKK","setAnggotaKK","auditTrailsfind","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","urlport","urlAddVuser","urlEditVuser","urlGetVuser","urlAddSetting","urlEditSetting","urlGetSetting","urlDeleteSetting","urlAddKelompokData","urlEditKelompokData","urlGetKelompokData","urlDeleteKelompokData","urlShowTargetKkPerProv","urlAddTargetKk","urlEditTargetKk","urlGetTargetKk","urlProv","urlAddProv","urlEditProv","urlDeleteProv","urlLaporanProv","urlLaporanPerProv","urlKec","urlAddKec","urlEditKec","urlShowKec","urlShowKecs","urlLaporanKec","urlShowPerKec","urlKel","urlAddKel","urlEditKel","urlShowKel","urlDeleteKel","urlLaporanKel","urlLaporanPerKel","urlShowKab","urlShowsKab","urlKab","urlAddKab","urlEditKab","urlLaporanPerKab","urlShowRw","urlRw","urlAddRw","urlEditRw","urlShowRt","urlRt","urlAddRt","urlEditRt","urlShowLaporanSensusID","urlShowLaporanSensusPerProv","urlShowLaporanSensusPerKab","urlShowLaporanSensusPerKec","urlShowLaporanSensusPerKel","urlGetUserAccessSurvey","urlshowKKPerprov","urlshowRealisasiID","urlRealisasiPerprov","urlRealisasiPerkab","urlRealisasiKBID","urlRealisasiKBPerProv","urlRealisasiKBPerKab","buttonSuccess","marginTop","buttonCancel","LapPeriode","schema","useState","isValid","values","touched","errors","formState","setFormState","useEffect","validate","console","log","TextField","fullWidth","label","margin","name","select","variant","Periode_Sensus","tmp","periode_sensus","localStorage","getItem","option","push","map","handling","flexDirection","minHeight","avatar","PropTypes","string","isRequired","array","createStyles","menuItem","menuItemIcon","AppMenuItem","cls","href","items","level","key","isExpandable","length","React","MenuItemChildren","role","item","MenuItemRoot","data-toggle","class","fontWeightMedium","active","SidebarNav","pages","page","media","textAlign","content","actions","breakpoints","up","backgroundImage","backgroundRepeat","backgroundSize","resizeMode","nav","Sidebar","onClose","signOutButton","marginLeft","ImportScript","resourceUrl","script","document","createElement","src","async","body","appendChild","removeChild","shiftContent","paddingLeft","Main","children","useTheme","useMediaQuery","defaultMatches","float","type","data-target","alt","Minimal","animationIn","animationOut","isVisible","Home","transparent","history","DOTS","range","start","end","Array","from","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","ceil","leftSiblingIndex","max","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","disabled","onClick","pageNumber","MiaCluster","setChecked","togger","target","cb_empId","handleInputChange","state","resultSearch","alert","handleImpactValue","event","persist","handleChangeSearch","setState","isRoi","isHse","isCost","handleSave","today","Date","loopsave","getFullYear","getMonth","getDate","step","cadData","setItem","JSON","stringify","Swal","fire","position","showConfirmButton","timer","prevState","errorsVar","valuesSearch","alamat","isfaValid","valuesEdit","dataMia","dataClustering","loading","checkedValue","user_name","presence","allowEmpty","maximum","password","handleSearch","bind","dataSearch","cekNull","undefined","impactValue","roi","typeNovelty","cost","hse","hsl","filter","data","valuesSearchhsl","isArray","loopCluster","cluster","parse","slice","pageVar","selected","hidden","for","el","empId","fullname","tittle","setCurrentPage","MiaSubmittion","valueFrom","pesan","handleSubmit","date","submissiondate","orgData","onSubmit","placeholder","simpleUpload","uploadUrl","toolbar","editor","ClassicEditor","getData","fontStyle","fonStyle","MiaReviewing","handleSignIn","preventDefault","find","user","team","criteria","tru","cluste","score","dataUser","MiaDashboard","image","maxWidth","NotFound","Grid","container","justify","xs","Typography","SignIn","newDept","settings","dots","infinite","speed","slidesToShow","slidesToScroll","users4","username","job","dept","grid","quoteContainer","down","quote","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","clear","firstName","lastName","email","policy","policyCheckbox","signUpButton","hasError","field","person","IconButton","goBack","helperText","Checkbox","policyText","Link","RouterLink","to","underline","FormHelperText","Button","KodeDepdagri","nama_provinsi","IsActive","ProfileAddModi","getMockData","Card","autoComplete","noValidate","CardHeader","subheader","Divider","CardContent","Alamat","defaultValue","NamaLengkap","Password","confirmPassword","CardActions","userName","varJson","LastModifiedBy","requestOptions","method","mode","headers","fetch","then","tester","json","reload","catch","Profile","DialogContent","trigger","difference","differenceIcon","differenceValue","inner","minWidth","nameContainer","importButton","ProvinsisTable","handleOpenViewMap","handleDelete","filteredItems","provinsifind","order","orderBy","SettingProvinsi","provinsisExport","handleOpen","ExportPDF","selectedProvinsis","setSelectedProvinsis","Export","downloadCSV","convertArrayOfObjectsToCSV","filterText","resetPaginationToggle","columns","selector","sortable","cell","row","subHeaderComponentMemo","searchInput","customStyles","header","borderTopStyle","borderTopWidth","borderTopsColor","rows","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","headRow","borderBott0mColor","headCells","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","cells","keyField","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","selectableRows","persistTableHead","dense","spacer","exportButton","ProvinsiAddModi","id_provinsi","url","CreatedBy","leafletContext","createContext","LeafletConsumer","Consumer","LeafletProvider","Provider","withLeaflet","WrappedComponent","WithLeafletComponent","ref","leaflet","displayName","LeafletComponent","forwardRef","hoistNonReactStatics","MapControl","leafletElement","createLeafletElement","_props","fromProps","toProps","setPosition","addTo","prevProps","updateLeafletElement","remove","Control","Attribution","EVENTS_RE","MapEvented","_leafletEvents","extractLeafletEvents","bindLeafletEvents","_prevProps","Object","forEach","ev","off","reduce","res","prop","test","replace","p","toLowerCase","next","prev","on","diff","MapComponent","pane","MapLayer","layerContainer","_fromProps","_toProps","addLayer","attribution","attributionControl","removeAttribution","addAttribution","removeLayer","contextValue","OPTIONS","Path","popupContainer","setStyleIfChanged","object","obj","setStyle","nextStyle","getPathOptions","isEqual","splitClassName","center","LeafletCircle","getOptions","setLatLng","setRadius","LeafletCircleMarker","split","addClassName","DomUtil","addClass","removeClassName","removeClass","prevClassName","nextClassName","DivOverlay","onOpen","forceUpdate","updateClassName","_container","isOpen","update","onRender","_contentNode","createPortal","GridLayer","LeafletFeatureGroup","LeafletGeoJSON","LeafletGridLayer","opacity","setOpacity","setZIndex","maxZoom","minZoom","ControlledLayer","LeafletImageOverlay","bounds","setUrl","setBounds","latLngBounds","LeafletLayerGroup","layer","removeLayerControl","BaseLayer","addBaseLayer","Overlay","addOverlay","LayersControlExport","controlProps","Layers","collapsed","collapse","expand","setTimeout","Children","child","cloneElement","omit","keysToOmit","acc","LeafletMarker","setIcon","zIndexOffset","setZIndexOffset","draggable","dragging","enable","disable","idCounter","LEAFLET_PANES","PANE_RE","paneStyles","Popup","context","getPane","createPane","removePane","isDefault","isLeafletPane","getParentPane","_panes","_paneRenderers","LeafletPolygon","positions","setLatLngs","LeafletPolyline","onPopupOpen","popup","onPopupClose","autoPan","_map","_panAnim","_adjustPan","LeafletPopup","popupopen","popupclose","bindPopup","openOn","LeafletRectangle","Scale","setAttribute","removeAttribute","createElementNS","preserveAspectRatio","viewBox","LeafletSVGOverlay","LeafletTileLayer","Tooltip","onTooltipOpen","tooltip","onTooltipClose","LeafletTooltip","tooltipopen","tooltipclose","bindTooltip","unbindTooltip","VideoOverlay","LeafletVideoOverlay","play","getElement","pause","WMSTileLayer","params","TileLayer","WMS","prevUrl","prevParams","setParams","superOptions","ZoomControl","Zoom","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","iconSize","TitleModule","HeaderData","flagDisplay","mockData","mock","yogi","ProvinsiList","a","setFilteredItems","provinsis","resJson","setProvinsis","deleteProv","deleteProvinsi","selectedProvinsis_string","join","provinsis3","entry","toUpperCase","setProvinsifind","result","ctr","rowProvinsisSelect","setRowProvinsisSelect","setTitle","mockDataSettingProvinsi","componenPopup","field1","value1","field2","value2","nmProvinsi","kdProvinsi","status","keyId","MessageButton","provinsis4","rowProvinsi","onExport","csv","encodeURI","click","doc","jsPDF","setFontSize","startY","head","elt","Keterangan","Created","LastModified","autoTable","save","KelurahansTable","SettingKelurahan","selectedKelurahans","setSelectedKelurahans","nama_kelurahan","KelurahanAddModi","kabupaten","setKabupaten","kecamatan","setKecamatan","provinsi","setProvinsi","showKab","showKecamatan","id_kabupaten","id_kelurahan","nama_kabupaten","id_kecamatan","nama_kecamatan","KelurahanList","getKel","kelurahans","setKelurahans","deleteKel","rowKelurahansSelect","setRowKelurahanSelect","kelurahansExport","setKelurahanfind","mockDataSettingKelurahan","nmKelurahan","kdKelurahan","kelurahans4","rowKelurahan","fontFamily","LaporanKabupatenTable","kab","setKab","kabupatenfind","selectedkabupaten","setselectedkabupaten","onChangeFind","setProv","font","KecamatanAddModi","setkabupaten","prov","nama","pencarian","paramProv","id_prov","LaporanKabupaten","rowkabupatenSelect","setRowkabupatenSelect","setSelectedkabupaten","kabupatenExport","setkabupatenfind","KabupatenSearchModi","rowKabupaten","kabupaten4","Nama_Kabupaten","Jumlah_Kecamatan","Jumlah_Kelurahan","Jumlah_RW","Jumlah_RT","LaporanPerKabupatenTable","kecamatanfind","kecamatanExport","selectedkecamatan","setselectedkecamatan","PerKabupatenSearchModi","paramKab","id_kab","LaporanPerKabupaten","getPerKab","perKabupaten","setPerKabupaten","rowPerKabupatenSelect","setRowPerKabupatenSelect","setSelectedPerKabupaten","kecamatan4","LaporanPerKecamatanTable","PerKecamatanSearchModi","setKec","paramKec","id_kec","showKec","LaporanPerKecamatan","getPerKec","perKecamatan","setPerKecamatan","rowPerKecamatanSelect","kec","setRowPerKecamatanSelect","selectedPerKecamatan","LaporanKecamatanTable","KecamatanSearchModi","LaporanKecamatan","getKec","setkecamatan","rowkecamatanSelect","setRowkecamatanSelect","setSelectedkecamatan","Nama_Kecamatan","LaporanKelurahanTable","kelurahanfind","kelurahanExport","selectedkelurahan","setselectedkelurahan","KelurahanSearchModi","LaporanKelurahan","kelurahan","setkelurahan","rowkelurahanSelect","setRowkelurahanSelect","setSelectedkelurahan","kelurahan4","Nama_Kelurahan","PerKelurahanTable","Perkelurahanfind","PerkelurahanExport","selectedPerkelurahan","setselectedPerkelurahan","setKel","kel","PerKelurahanSearchModi","id_kel","showKel","LaporanPerKelurahan","Perkelurahan","setPerkelurahan","rowPerkelurahanSelect","urlgetKel","setRowPerkelurahanSelect","setSelectedPerkelurahan","Perkelurahan4","SensusKelurahanTable","SensusPerKelurahanSearchModi","showTargetKkPerProv","LaporanSensusPerKelurahan","KK","jumRW","jumRT","SensusKecamatanTable","SensusPerKecamatanSearchModi","LaporanSensusPerKecamatan","KecamatanTable","KecamatanList","deleteKec","KabupatenTable","KabupatenAddModi","KabupatenList","getKab","deleteKab","ProvinsiIDTable","laporanProvID","Nama_Provinsi","Jumlah_Kabupaten_Kota","LaporanPerProvTable","dataProv","ComboProv","LaporanPerProvList","RtTable","rtfind","selectedrt","setselectedrt","KodeRT","nama_rt","RtAddModi","rw","setRw","showRw","id_rt","id_rw","nama_rw","swal","RtList","getRt","rt","setrt","deleteRt","rowrtSelect","setRowrtSelect","setSelectedrt","rtExport","setrtfind","rt4","RwTable","rwfind","selectedrw","setselectedrw","RwAddModi","setKelurahan","RwList","getRw","setrw","deleteRw","rowrwSelect","setRowrwSelect","setSelectedrw","rwExport","setrwfind","nmRw","kdRw","rw4","RwExport","rowRw","VuserTable","Vuserfind","SettingVuser","VuserExport","selectedVuser","setSelectedVuser","UserName","Jabatan","VuserAddModi","NIK","Email","VuserList","getVuser","Vuser","setVuser","deleteUser","deleteVuser","selectedVuser_string","Vuser3","setVuserfind","rowVuserSelect","setRowVuserSelect","nmVuser","kdVuser","Vuser4","rowVuser","CreatedDate","SettingTable","SettingAddModi","kelompokData","setKelompokData","getKelData","value_setting","Id_kelompok_data","nama_kelompok_data","id_setting","getSetting","deleteSetting","KelompokDataTable","KelompokDataAddModi","KelompokDataList","getKelompokData","deleteKelompokData","LaporanSensusID","sensusID","setSensusID","PencarianLaporan","showTargetKK","rowsensusIDSelect","setRowsensusIDSelect","selectedsensusID","setSelectedsensusID","sensusIDExport","sensusIDfind","setSensusIDfind","LaporanSensusIDTable","sensusID4","Nama_sensusID","rowsensusID","jumKab","jumKec","jumKel","TargetKkTable","parseInt","Target_KK","TargetKkAddModi","setRt","showRt","id_rt_old","Periode_Sensus_old","getTargetKk","deleteTargetKk","RowVuserSelect","LaporanSensusPerKab","sensus","setSensus","showLaporanSensusPerKab","rowsensusSelect","setRowsensusSelect","selectedsensus","setSelectedsensus","sensusExport","sensusfind","setSensusfind","sensus4","Nama_sensus","rowsensus","LaporanSensusPerProvTable","LaporanSensusPerProv","UserAccessSurveyTable","id_user","UserAccessSurveyModi","getUser","setUser","getProvinsi","UserAccessSurveyList","getUAS","uas","setUAS","deleteUAS","rowuasSelect","setRowuasSelect","selecteduas","setSelecteduas","uasExport","uasfind","setUASfind","uas4","nama_uas","rowuas","LaporanTargetTable","Periode","LaporanTargetRealisasiID","showRealisasiID","Jumlah_KK","Jumlah_Realisasi","LaporanTargetSearch","LaporanTargetPerProvTable","LaporanTargetRealisasiPerprov","LaporanTargetPerprovTable","LaporanTargetRealisasiPerkab","LaporanTargetPerkabTable","LaporanKbIdTable","alatKB","alat_kb","LaporanKbId","Jumlah_Pemakai","LaporanKbSearch","LaporanKbPerProvTable","LaporanKbPerProv","LaporanKbPerprovTable","LaporanKbPerKab","LaporanKbPerkabTable","Routes","exact","SettingListView","MainLayout","path","MiaClusterView","MiaSubmittionView","MiaReviewingView","MiaDashboardView","MiaJudgingView","MiaAwardView","ProfileView","SignInView","MinimalLayout","KelompokDataListView","HomeView","TargetKkListView","VuserListView","ProvinsiListView","KabupatenListView","KecamatanListView","KelurahanListView","RtListView","RwListView","UserAccessSurveyListView","LaporanProvIDView","LaporanPerProvView","LaporanKabupatenView","LaporanPerKabupatenView","LaporanPerKecamatanView","LaporanKecamatanView","LaporanKelurahanView","LaporanPerKelurahanView","LaporanSensusIDView","LaporanSensusPerKabVIew","LaporanSensusPerProvView","LaporanSensusPerKelurahanView","LaporanSensusPerKecamatanView","LaporanTargetRealisasiIDView","LaporanTargetRealisasiPerprovView","LaporanTargetRealisasiPerkabView","LaporanKbIdView","LaporanKbProvView","LaporanKbKabView","SignoutView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","globalState","storeRedux","createStore","action","newValue","ReactDOM","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d1edac5.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 491;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white='#FFFFFF';\r\nconst black='#000000';\r\nconst green='#4caf50';\r\nconst red='#f44336';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  green,\r\n  red,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.green[900],//'#000000',\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    // fontFamily:'Poppins',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    // fontFamily:'Poppins',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`,\r\n    paddingBottom: '4px',\r\n    paddingTop: '4px',\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'must be checked';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput=props => {\r\n  const { className, textfind, onChange, style, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n\r\n      <SearchIcon className={classes.icon} />\r\n\r\n      <Input\r\n\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n        value={textfind}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet=props => {\r\n  const { className, size, color, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes={\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps={\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout=props => {\r\n  const { layout: Layout, component: Component, ...rest }=props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout className=\"font-poppins\">\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes={\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    left: '10%',\r\n    justifyContent: \"center\",\r\n    overflow: 'scroll',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"80%\",\r\n    height: \"90%\",\r\n    overflow: 'scroll'\r\n  }\r\n}));\r\n\r\n\r\nconst ModalComponent=props => {\r\n  const { datas,\r\n    handleChange, getProv, getDataBackend, setData2, setData,\r\n    setRowSelect, users, groups, roles, className, style, open, setOpen, title, rowSelect,\r\n    ComponenAddModi, ViewMap, handleClose, AnggotaKK, setAnggotaKK,\r\n    auditTrailsfind, ...rest }=props;\r\n  const classes=useStyles();\r\n  //alert(\"open=\"+open);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      //onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        {/* */}\r\n\r\n        <div className={classes.paper}>\r\n          <h2 id=\"transition-modal-title\">&nbsp;</h2>\r\n          <ComponenAddModi getProv={getProv} getDataBackend={getDataBackend}\r\n            setData2={setData2}\r\n            handleChange={handleChange} setData={setData}\r\n            setOpen={setOpen} setAnggotaKK={setAnggotaKK} \r\n            AnggotaKK={AnggotaKK}\r\n            setRowSelect={setRowSelect} datas={datas} users={users} groups={groups}\r\n            roles={roles} rowSelect={rowSelect} title={title} handleClose={handleClose}\r\n            auditTrailsfind={auditTrailsfind}\r\n          ></ComponenAddModi>\r\n\r\n          {/*}          <UserAddModi rowUsersSelect={rowUsersSelect} title={title} handleClose={handleClose}></UserAddModi>\r\n\r\n{*/}        </div>\r\n\r\n        {/**/}\r\n\r\n\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\nModalComponent.propTypes={\r\n  className: PropTypes.string,\r\n  handleClose: PropTypes.func,\r\n  open: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default ModalComponent;\r\n","let urlport=\"https://bkkbn-api.herokuapp.com/https://projectbkkbn.herokuapp.com/api/\";\r\nlet urlportrefresh=\"https://projectbkkbn.herokuapp.com/api/\";\r\n\r\n\r\n // Vuser\r\nexport const urlPostLogin=urlport+'vuser/showUser'\r\nexport const urlAddVuser=urlport+'vuser/storeUser'\r\nexport const urlEditVuser=urlport+'vuser/updateUser'\r\nexport const urlUbahPassword=urlport+'vuser/ubahPassword'\r\nexport const urlGetVuser=urlport+'vuser/getUser'\r\nexport const urlDeleteUser=urlport+'vuser/deleteUser'\r\n\r\n// setting\r\nexport const urlShowSetting=urlport+'setting/showSetting'\r\nexport const urlAddSetting=urlport+'setting/storeSetting'\r\nexport const urlEditSetting=urlport+'setting/updateSetting'\r\nexport const urlGetSetting=urlport+'setting/getSetting'\r\nexport const urlDeleteSetting=urlport+'setting/deleteSetting'\r\n\r\n// kel data\r\nexport const urlShowKelompokData=urlport+'kelompok-data/showKelompokData'\r\nexport const urlAddKelompokData=urlport+'kelompok-data/storeKelompokData'\r\nexport const urlEditKelompokData=urlport+'kelompok-data/updateKelompokData'\r\nexport const urlGetKelompokData=urlport+'kelompok-data/getKelompokData'\r\nexport const urlDeleteKelompokData=urlport+'kelompok-data/deleteKelompokData'\r\n\r\n// targetKK\r\nexport const urlShowTargetKk=urlport+'target-kk/showTargetKk'\r\nexport const urlShowTargetKkPerProv=urlport+'target-kk/showTargetKkPerProv'\r\nexport const urlAddTargetKk=urlport+'target-kk/storeTargetKk'\r\nexport const urlEditTargetKk=urlport+'target-kk/updateTargetKk'\r\nexport const urlGetTargetKk=urlport+'target-kk/getTargetKk'\r\nexport const urlDeleteTargetkk=urlport+'target-kk/deleteTargetKk'\r\n\r\n //provinsi\r\nexport const urlProv=urlport+'provinsi/getProvinsi'\r\nexport const urlAddProv=urlport+'provinsi/storeProv'\r\nexport const urlEditProv=urlport+'provinsi/updateProv'\r\nexport const urlDeleteProv= urlport+ 'provinsi/deleteProv'\r\nexport const urlLaporanProv=urlport+'provinsi/laporanProv'\r\nexport const urlLaporanPerProv=urlport+'provinsi/laporanPerProv'\r\n\r\n //Kecamatan\r\n export const urlKec=urlport+'kecamatan/getKecamatan'\r\n export const urlAddKec=urlport+'kecamatan/storeKec'\r\n export const urlEditKec=urlport+'kecamatan/updateKec'\r\n export const urlShowKec=urlport+'kecamatan/showKecamatan'\r\n export const urlShowKecs=urlport+'kecamatan/showKecamatans'\r\n export const urlDeleteKec=urlport+'kecamatan/deleteKec'\r\n export const urlLaporanKec=urlport+'kecamatan/laporanKec'\r\n export const urlShowPerKec=urlport+'kecamatan/show-per-kec'\r\n\r\n// Kelurahan\r\nexport const urlKel = urlport+'kelurahan/getKelurahan'\r\nexport const urlAddKel = urlport+'kelurahan/storeKel'\r\nexport const urlEditKel = urlport+'kelurahan/updateKel'\r\nexport const urlShowKel = urlport + 'kelurahan/showKel'\r\nexport const urlDeleteKel = urlport+'kelurahan/deleteKel'\r\nexport const urlLaporanKel=urlport+'kelurahan/laporanKel'\r\nexport const urlLaporanPerKel=urlport+'kelurahan/laporanPerKel'\r\n\r\n//Kabupaten\r\nexport const urlShowKab=urlport+'kabupaten/showKabupaten'\r\nexport const urlShowsKab=urlport+'kabupaten/showsKabupaten'\r\n export const urlKab=urlport+'kabupaten/getKabupaten'\r\n export const urlDeleteKab=urlport+'kabupaten/deleteKab'\r\n export const urlAddKab=urlport+'kabupaten/storeKab'\r\n export const urlEditKab=urlport+'kabupaten/updateKab'\r\n export const urlLaporanKab=urlport+'kabupaten/laporanKab'\r\n export const urlLaporanPerKab=urlport+'kabupaten/show-per-kab'\r\n\r\n //RW\r\nexport const urlShowRw=urlport+'rw/showRw'\r\nexport const urlRw=urlport+'rw/getRw'\r\nexport const urlAddRw=urlport+'rw/storeRw'\r\nexport const urlEditRw=urlport+'rw/updateRw'\r\nexport const urlDeleteRw=urlport +'rw/deleteRw'\r\n\r\n//RT\r\nexport const urlShowRt=urlport+'rt/showRt'\r\nexport const urlRt=urlport+'rt/getRt'\r\nexport const urlAddRt=urlport+'rt/storeRt'\r\nexport const urlEditRt=urlport+'rt/updateRt'\r\nexport const urlDeleteRt=urlport +'rt/deleteRt'\r\n\r\n//LaporanSensus\r\nexport const urlShowLaporanSensusID=urlport +'laporan-sensus/indonesia'\r\nexport const urlShowLaporanSensusPerProv=urlport +'laporan-sensus/perprov'\r\nexport const urlShowLaporanSensusPerKab=urlport +'laporan-sensus/perkab'\r\nexport const urlShowLaporanSensusPerKec=urlport +'laporan-sensus/perkec'\r\nexport const urlShowLaporanSensusPerKel=urlport +'laporan-sensus/perkel'\r\n\r\n//User Access Survey\r\nexport const urlGetUserAccessSurvey = urlport + 'user-access-survey/get'\r\nexport const urlPostLoginUser = urlport + 'user-access-survey/showUAS'\r\nexport const urlAddUserAccessSurvey = urlport + 'user-access-survey/store'\r\nexport const urlEditUserAccessSurvey = urlport + 'user-access-survey/update'\r\nexport const urlDeleteUserAccessSurvey = urlport + 'user-access-survey/delete'\r\n\r\n//Form KK\r\nexport const urlGetFormKK = urlport + 'form-kk/getFormKK'\r\nexport const urlAddFormKK = urlport + 'form-kk/storeFormKK'\r\nexport const urlEditFormKK = urlport + 'form-kk/updateFormKK'\r\nexport const urlDeleteFormKK = urlport + 'form-kk/deleteFormKK'\r\nexport const urlAccForm = urlport +'form-kk/acceptFormKK'\r\nexport const urlGetIdKK = urlport + 'form-kk/getIdKK'\r\nexport const urlAccKK = urlport + 'form-kk/acceptFormKK'\r\nexport const urlshowKKPerprov = urlport + 'form-kk/showKKPerprov'\r\n\r\n//Anggota KK\r\nexport const urlGetAnggotaKK = urlport + 'anggota-kk/getAnggotaKK'\r\nexport const urlShowAnggotaKK=urlport+'anggota-kk/showAnggotaKK'\r\nexport const urlAddAnggotaKK=urlport+'anggota-kk/storeAnggotaKK'\r\nexport const urlEditAnggotaKK=urlport+'anggota-kk/updateAnggotaKK'\r\nexport const urlGetNIKAnggota=urlport+'anggota-kk/getNIKAnggota'\r\n\r\n//KB\r\nexport const urlGetKB = urlport + 'data-kb/getKB'\r\nexport const urlUpdateKB = urlport + 'data-kb/updateKB'\r\nexport const urlEditKB = urlport + 'data-kb/editKB'\r\nexport const urlShowNama = urlport + 'data-kb/showNama'\r\nexport const urlAddKB = urlport + 'data-kb/addKB'\r\nexport const urlDeleteKB = urlport + 'data-kb/deleteKB'\r\n\r\n// Realisasi\r\nexport const urlshowRealisasiID = urlport + 'realisasi/id'\r\nexport const urlRealisasiPerprov = urlport + 'realisasi/perprov'\r\nexport const urlRealisasiPerkab = urlport + 'realisasi/perkab'\r\nexport const urlRealisasiKBID = urlport + 'realisasi/kbId'\r\nexport const urlRealisasiKBPerProv = urlport + 'realisasi/alatKbPerProv'\r\nexport const urlRealisasiKBPerKab = urlport + 'realisasi/alatKbPerKab'\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowTargetKk } from '../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LapPeriode=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    // Periode_Sensus: {\r\n    //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n    // },\r\n  };\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // rowSelect.Periode_Sensus = localStorage.getItem(\"Periode Sensus\")\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n//   const handleChange=event => {\r\n    \r\n//     const errors=validate(rowSelect, schema);\r\n\r\n//     setFormState(formState => ({\r\n//       ...rowSelect,\r\n//       isValid: errors? false:true,\r\n//       errors: errors||{}\r\n//     }));\r\n    \r\n//     setRowSelect({\r\n//       ...rowSelect,\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   }\r\n\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--)\r\n       {tmp.push({\"option\" : option});}\r\n      console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n  return (\r\n\r\n               <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={onChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n     \r\n  );\r\n};\r\n\r\nLapPeriode.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LapPeriode;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    backgroundColor: '#fff',\r\n\r\n  }\r\n}));\r\n\r\nconst Footer=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' 2021. Transparansi APBN - BackOffice       '}\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography, Hidden } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst Profile=props => {\r\n  const { className, ...rest }=props;\r\n  const { history }=props;\r\n  const classes=useStyles();\r\n\r\n  /*\r\n    const [user, setUser]=\r\n      useState(\r\n        localStorage.getItem('userInLocalStorage')||null\r\n      );\r\n    )\r\n  if (user) alert(\"userInLocalStorage\"); else alert(\"Error\")\r\n  console.log(\r\n    localStorage.getItem('userInLocalStorage')\r\n  \r\n  );\r\n  */\r\n  //  if (!localStorage.getItem('user_id')) alert(\"dsdsd\")\r\n  //alert(!localStorage.getItem('user_id'))\r\n  if (!localStorage.getItem('user_id')) return <Redirect to='/login' />;\r\n  if (!localStorage.getItem('accessId')) return <Redirect to='/login' />;\r\n\r\n  var user={\r\n    name: localStorage.getItem('firstName'),\r\n    //avatar: localStorage.getItem('avatar')\r\n    //bio: 'Brain Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n\r\n\r\n      {/*}\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n        \r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n  <Typography variant=\"body2\">{/*user.bio*/}{/*}</Typography>\r\n    {*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes={\r\n  className: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n//import ListItemLink from '@material-ui/core/ListItemLink'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\n// React runtime PropTypes\r\n//{ title, href, items=[], key, level }\r\nexport const AppMenuItemPropTypes={\r\n    title: PropTypes.string.isRequired,\r\n    href: PropTypes.string,\r\n    items: PropTypes.array,\r\n    key: PropTypes.string,\r\n}\r\n\r\n// TypeScript compile-time props type, infered from propTypes\r\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\r\ntype appMenuItemPropTypes=PropTypes.InferProps<typeof AppMenuItemPropTypes>\r\ntype appMenuItemPropsWithoutItems=Omit<appMenuItemPropTypes, 'items'>\r\n\r\n// Improve child items declaration\r\nexport type AppMenuItemProps=appMenuItemPropsWithoutItems&{\r\n    items?: AppMenuItemProps[]\r\n}\r\n\r\nconst AppMenuItem: React.FC<AppMenuItemProps>=props => {\r\n    const { cls,title, href, items=[], key, level }=props\r\n    const classes=useStyles()\r\n    const isExpandable=items&&items.length>0\r\n    const [open, setOpen]=React.useState(false)\r\n    console.log(items)\r\n    const marginLeftVar=level*22;\r\n    const MenuItemChildren=isExpandable? (\r\n        <ul className=\"dropdown-menu\" role=\"menu\">\r\n\r\n            {\r\n                items.map((item, index) => (\r\n                    <AppMenuItem {...item} key={index} level={level+1} />\r\n                ))\r\n            }\r\n        </ul>\r\n\r\n    ):null\r\n\r\n    const MenuItemRoot=isExpandable?\r\n        (\r\n            <li className=\"dropdown\" ><a className=\"dropdown-toggle\" href=\"\" data-toggle=\"dropdown\">\r\n                {title}<span className=\"caret\"></span></a>\r\n                {\r\n                    MenuItemChildren\r\n                }\r\n            </li>\r\n        ):\r\n\r\n        (\r\n            <li><a href={href}>\r\n                <i class={cls}></i>{title}</a>\r\n                \r\n            </li>\r\n\r\n\r\n        )\r\n\r\n\r\n    return (\r\n        <>\r\n            {MenuItemRoot}\r\n            {//MenuItemChildren\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nAppMenuItem.propTypes=AppMenuItemPropTypes\r\n\r\nconst useStyles=makeStyles(theme =>\r\n    createStyles({\r\n        menuItem: { color: '#fff', },\r\n        menuItemIcon: {\r\n            color: '#fff',\r\n        },\r\n    }),\r\n)\r\n\r\nexport default AppMenuItem\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, colors } from '@material-ui/core';\r\nimport AppMenuItem from './AppMenuItem'\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink=forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav=props => {\r\n  const { pages, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"nav navbar-nav\">\r\n        {pages.map((page, index) => (\r\n\r\n          <AppMenuItem {...page} key={index} level={0} />\r\n\r\n        ))}\r\n      </ul>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes={\r\n  className: PropTypes.string,\r\n  //pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Drawer, Hidden } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks';\r\nimport Archive from '@material-ui/icons/Search';\r\nimport IconAccessibility from '@material-ui/icons/Accessibility';\r\nimport IconRoom from '@material-ui/icons/Room';\r\n//\r\n\r\n\r\n//import IconLibraryBooks from '@material-ui/icons/LibraryBooks'\r\n\r\nimport { Profile, SidebarNav, UpgradePlan } from './components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  drawer: {\r\n    width: 260,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    //    backgroundColor: theme.palette.primary.main,\r\n    backgroundImage: \"url(/img/header.jpeg)\",\r\n    backgroundRepeat: 'no-repeat',\r\n    //backgroundPosition:\" top left\",\r\n    backgroundSize: \"cover\",\r\n    resizeMode: \"cover\",\r\n    top: \"left\",\r\n    color: theme.palette.primary.contrastText,\r\n    display: 'fix',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: 0,\r\n  },\r\n  divider: {\r\n    resizeMode: \"cover\",\r\n\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Sidebar=props => {\r\n  const { /*open, variant,*/ onClose, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n\r\n\r\n  const pages=[ \r\n    {\r\n      title: 'HOME',\r\n      href: '/',\r\n      cls:'active'\r\n    },\r\n\r\n    {\r\n\r\n      title: 'M I A',\r\n      href: '/#',\r\n\r\n      items: [\r\n\r\n        {\r\n          title: 'Submission',\r\n          href: '/mia/submission',\r\n          cls:'fa fa-share'\r\n        },\r\n        {\r\n          title: 'Clustering',\r\n          href: '/mia/clustering',\r\n          cls:'fa fa-spinner'\r\n        },\r\n        {\r\n          title: 'Reviewing',\r\n          href: '/mia/reviewing',\r\n          cls:'fa fa-eye'\r\n        },\r\n        \r\n        {\r\n          title: 'Judging',\r\n          href: '/mia/judging',\r\n          cls:'fa fa-hourglass-half'\r\n\r\n        },\r\n        {\r\n          title: 'Award',\r\n          href: '/mia/award',\r\n          cls:'fa fa-spinner'\r\n        },\r\n        {\r\n          title: 'Dashboard',\r\n          href: '/mia/dashboard',\r\n          cls:'fa fa-pie-chart'\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'TECHNOLOGY SELECTION',\r\n      href:'/#',\r\n      items : [\r\n        {\r\n          title: 'Prework',\r\n          href: '/prework',\r\n          cls:'fa fa-map-o'\r\n        },\r\n        {\r\n          title: 'Registration',\r\n          href: '/registration',\r\n          cls:'fa fa-registered'\r\n        },\r\n        {\r\n          title:'Qualification',\r\n          href:'/qualification',\r\n          cls:'fa fa-object-group'\r\n        \r\n        },\r\n        {\r\n          title:'Execution',\r\n          href:'/execution',\r\n          cls:'fa fa-thumbs-o-up'\r\n        },\r\n        {\r\n          title:'Tracking & Monitoring',\r\n          href:'/tracking',\r\n          cls:'fa fa-pie-chart'\r\n        },        \r\n        {\r\n          title:'Dashboard',\r\n          href:'/dashboardTechnology',\r\n          cls:'fa fa-pie-chart'\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'COLLABORATION CENTER',\r\n      href:'/collaborationCenter',\r\n      cls:''\r\n      \r\n    },\r\n    {\r\n      title: 'KNOWLEDGE CENTER',\r\n      href: '/knownlefgeCenter',\r\n      cls:''\r\n\r\n    }\r\n    ,\r\n/*    {\r\n      title: 'Setting Aplikasi',\r\n      href: '/setting'\r\n\r\n    },\r\n    {\r\n      title: 'Kelompok Data',\r\n      href: '/kelompok-data'\r\n\r\n    },\r\n    {\r\n      title: 'Target KK',\r\n      href: '/target-kk'\r\n\r\n    },*/\r\n  ];\r\n  return (\r\n\r\n    /*<!-- ======= Header======= -->*/\r\n    \r\n    <SidebarNav\r\n      className={classes.nav}\r\n      pages={pages}\r\n    />\r\n    \r\n    \r\n\r\n\r\n    /*<!-- End Header -->*/\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nSidebar.propTypes={\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  //open: PropTypes.bool.isRequired,\r\n  //variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(0),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst isClient=typeof window==='object';\r\n\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n\r\n}\r\nconst Topbar=props => {\r\n  const { className, onSidebarOpen, ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n\r\n  const classes=useStyles();\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  const [notifications]=useState([]);\r\n  window.addEventListener('resize', handleResize);\r\n  const history=useHistory();\r\n  const handleExit=(event) => {\r\n\r\n    //alert(\"sasasa\")\r\n    history.push(\"/logout\");\r\n    //return <Redirect to='/logout' />\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <section id=\"topbar\" className=\"d-none d-lg-block\">\r\n      <div className=\"container clearfix\">\r\n\r\n        <div className=\"logo float-left\">\r\n          <h1 className=\"text-light\"><a href=\"index.html\"><span>Mamba1</span></a></h1>\r\n          {/*}<!-- Uncomment below if you prefer to use an image logo -->\r\n        <!-- <a href=\"index.html\"><img src=\"assets/img/logo.png\" alt=\"\" className=\"img-fluid\"></a>-->{*/}\r\n        </div>\r\n\r\n        <div className=\"social-links float-right\">\r\n          <a href=\"#\" className=\"twitter\"><i className=\"icofont-twitter\"></i></a>\r\n          <a href=\"#\" className=\"facebook\"><i className=\"icofont-facebook\"></i></a>\r\n          <a href=\"#\" className=\"instagram\"><i className=\"icofont-instagram\"></i></a>\r\n          <a href=\"#\" className=\"skype\"><i className=\"icofont-skype\"></i></a>\r\n          <a href=\"#\" className=\"linkedin\"><i className=\"icofont-linkedin\"></i></a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n\r\n  );\r\n};\r\n\r\nTopbar.propTypes={\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import { useEffect } from 'react';\r\nconst ImportScript=resourceUrl => {\r\n    useEffect(() => {\r\n        const script=document.createElement('script');\r\n        script.src=resourceUrl;\r\n        script.async=false;\r\n        document.body.appendChild(script);\r\n        //      alert(\"dsds\")\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        }\r\n    }, [resourceUrl]);\r\n};\r\nexport default ImportScript;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Avatar, useMediaQuery } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { urlProv,urlKab,urlKec,urlKel,urlRw,urlRt,urlGetVuser } from 'kumpulanUrl';\r\nimport { Sidebar, Topbar, Footer, ImportScript } from './components';\r\n/*\r\nimport '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/dist/css/skins/_all-skins.min.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\nimport { select } from 'underscore';\r\n*/import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n/**/\r\nconst useStyles=makeStyles(theme => ({\r\n\r\n\r\n  root: {\r\n    //paddingTop: 100,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      //paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  }/*,\r\n  content: {\r\n    height: '100%'\r\n  }*/\r\n}));\r\n\r\nconst Main=props => {\r\n  const { children,rowSelect }=props;\r\n\r\n  const classes=useStyles();\r\n  const theme=useTheme();\r\n  const isDesktop=useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n\r\n  const [openSidebar, setOpenSidebar]=useState(false);\r\n\r\n  const handleSidebarOpen=() => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarcClose=() => {\r\n    setOpenSidebar(false);\r\n  };\r\n  /**/\r\n  const shouldOpenSidebar=isDesktop? true:openSidebar;\r\n  return (\r\n    <>\r\n<div className=\"wrapper\" >\r\n\r\n<header className=\"main-header\" style={{marginTop:0}}>\r\n        <nav className=\"navbar navbar-static-top\">\r\n          <div className=\"container\">\r\n\r\n          <div className=\"navbar-header\">\r\n              <a href=\"#\" className=\"navbar-brand\"><img src=\"/assets/img/logo-5-sm.png\" style={{width:'32px', float: 'left', 'padding-right': '5px'}} className=\"img-responsive\"/> \r\n              <span style={{color:'#2280c1'}}><b>Medco</b> Center of Excellence</span></a>\r\n              <button type=\"button\" className=\"navbar-toggle collapsed\" \r\n              data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\r\n                <i class=\"fa fa-bars\"></i>\r\n              </button>\r\n            </div>\r\n\r\n\r\n\r\n             {\r\n              /*\r\n              <!-- Collect the nav links, forms, and other content for toggling -->\r\n               */\r\n             } \r\n            \r\n            <div className=\"row\">\r\n\t\t\t\t        <div class=\"collapse navbar-collapse pull-left\" id=\"navbar-collapse\">\r\n                <Sidebar />\r\n            </div>\r\n          </div> \r\n            {/*\r\n            <!-- /.navbar-collapse -->\r\n            <!-- Navbar Right Menu -->\r\n            */\r\n            }\r\n            \r\n              <div className=\"navbar-custom-menu\">\r\n                <ul className=\"nav navbar-nav\">\r\n                  {/*\r\n                    <!-- Messages: style can be found in dropdown.less-->\r\n                  \r\n\r\n                    <!-- Notifications Menu -->  \r\n                  */\r\n                  }\r\n                  \r\n                  \r\n                  \r\n                  <li class=\"dropdown user user-menu\">\r\n                    {/*<!-- Menu Toggle Button --> */}\r\n                    \r\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                      {/*<!-- The user image in the navbar--> */}\r\n                      <img src=\"assets/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\"/>\r\n                      {\r\n                        /*\r\n                        <!-- hidden-xs hides the username on small devices so only the image appears. -->\r\n                        */  \r\n                      }\r\n                      \r\n                      <span class=\"hidden-xs\">Bayu</span>\r\n                    </a>\r\n                    <ul class=\"dropdown-menu\">\r\n                      {\r\n                        /*\r\n                       {\r\n                      \r\n                        <!-- The user image in the menu -->\r\n                      \r\n                      \r\n                      <!-- Menu Footer-->>\r\n                          \r\n                      \r\n                        */  \r\n                      }\r\n                      \r\n                      <li class=\"user-footer\">\r\n                        <div class=\"pull-left\">\r\n                          <a href=\"#\" class=\"btn btn-default btn-flat\">Profile</a>\r\n                        </div>\r\n                        <div class=\"pull-right\">\r\n                          <a href=\"index.html\" class=\"btn btn-default btn-flat\">Sign out</a>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              {/*<!-- /.navbar-custom-menu -->*/}\r\n          </div>\r\n          {/*<!-- /.container-fluid --> */}\r\n        </nav>\r\n      </header>\r\n      <div class=\"content-wrapper\">\r\n        <div class=\"container\">\r\n          <main id=\"main\">\r\n           {children}\r\n\r\n          </main>\r\n        </div>\r\n        </div>              \r\n        <footer class=\"main-footer\">\r\n        <div class=\"container\">\r\n          \r\n          Copyright &copy; 2022 Medco.\r\n        </div>{/*<!-- /.container -->*/}\r\n      </footer>\r\n\r\n</div>{/*<!-- ./wrapper -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* <!-- ======= Hero Section ======= -->*/}\r\n      {/*\r\n      <Sidebar />\r\n      <main id=\"main\">\r\n        {children}\r\n\r\n      </main>\r\n      */}\r\n      {/*<!-- End #main -->\r\n\r\n    <!--======= Footer======= -->*/}\r\n      {/*<!-- End Footer -->*/}\r\n      {/*ImportScript(\"/assets/plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n\r\n      {ImportScript(\"/assets/plugins/slimScroll/jquery.slimscroll.min.js\")}\r\n      {ImportScript(\"/assets/plugins/fastclick/fastclick.min.js\")}\r\n      {ImportScript(\"/assets/jquery-sticky/jquery.sticky.js\")}\r\n      {ImportScript(\"/assets/dist/js/app.min.js\")}\r\n      {ImportScript(\"/assets/dist/js/demo.js\")}\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMain.js\")*/\r\n      }\r\n      {\r\n        ImportScript(\"/assets/js/changebodyMain.js\")\r\n      }\r\n\r\n      {/*<!-- Vendor JS Files -->*/}\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nMain.propTypes={\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\n/*import '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\n*/// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport '../../../src/plugins/iCheck/square/blue.css';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from \"react-slick\";\r\nimport { MinimalUser } from 'layouts';\r\n//import { bg_login } from 'assets/img_master_backup';\r\n// import \"animate.css\"\r\nimport {Animated} from \"react-animated-css\";\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n  return (\r\n    <Animated    animationIn=\"fadeInUp\" animationOut=\"fadeOut\" isVisible={true}>\r\n\r\n<div className=\"login-box\"   >\r\n      <div className=\"login-logo\"\r\n      >\r\n        <img src=\"/assets/img/logo-5.png\" style={{marginLeft:'40%'}}/>\r\n        \r\n               <a href=\"index.html\"><b>Medco</b> Center of Excellence</a>\r\n      </div>\r\n      \r\n      {/* <!-- /.login-logo -->*/}\r\n\r\n      <main >\r\n          {children}\r\n        </main>\r\n\r\n      { ImportScript(\"/assets/js/changebodyMin.js\")\r\n      }\r\n\r\n      {ImportScript(\"/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/js/inputChecked.js\")\r\n      }\r\n      \r\n    </div>\r\n\r\n    </Animated>\r\n\r\n\r\n  );\r\n};\r\n\r\nMinimal.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    //padding: theme.spacing(4),\r\n    //        backgroundColor: '#ffF8ffF8',\r\n    transparent: true,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    //height: '600px'\r\n  }\r\n}));\r\n\r\nconst Home=props => {\r\n  const { history }=props;\r\n/** */\r\n  if (!localStorage.getItem(\"username\")) {\r\n    history.push('/logout');\r\n\r\n  }/**/\r\n\r\n  return (\r\n    <>\r\n    {/*<!-- Content Header (Page header) -->*/ }\r\n    \r\n    <section className=\"content-header\">\r\n      <h1>&nbsp;\r\n      </h1>\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"active\"><i class=\"fa fa-home\"></i>  Home</li>\r\n      </ol>\r\n    </section>\r\n    {/* <!-- Main content --> */}\r\n    \r\n    <section class=\"content\">\r\n      \r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header with-border\">\r\n          <h3 class=\"box-title\">About Center of Excellence</h3>\r\n        </div>\r\n        <div class=\"box-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <p>The printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\r\n              <p> It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n            </div>\r\n            <div class=\"col-md-6\"><img src=\"assets/img/medco-logo.png\" class=\"img-responsive\"/></div>\r\n          </div>\r\n          \r\n        </div>{/*<!-- /.box-body -->*/}\r\n      </div>{/*<!-- /.box -->*/}\r\n    </section>{/*<!-- /.content -->*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\n///import '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\n//import '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\n//import '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\n//import '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\n//import '../../../src/assets/vendor/dist/css/custom.css';\r\n///import { bg_login } from 'assets/img_master_backup';\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst MinimalUser=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"login-box\">\r\n      <div className=\"login-logo\"> \r\n        <img src=\"/assets/dist/img/bkkbn-logo-sm.png\" width=\"253\" height=\"62\" />\r\n        <h3>System Informasi Sensus</h3>\r\n        <h3>Ruang Petugas Sensus</h3>\r\n      </div>\r\n      {/*<!-- /.login-logo -->*/}\r\n      <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Silahkan Login terlebih dahulu</p>\r\n        <main className={classes.content}>{children}</main>\r\n        {/*  */}\r\n\r\n\r\n      </div>{/*<!-- /.login-box-body -->*/}\r\n\r\n      {/*<!-- jQuery 2.1.4 --> */}\r\n      {ImportScript(\"/assets//plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {/*<!-- Bootstrap 3.3.4 -->*/}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n      {       /*    <!-- iCheck -->*/}\r\n      {ImportScript(\"/assets/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMinimal.js\")\r\n      }\r\n      \r\n    </div>\r\n    \r\n\r\n\r\n  );\r\n};\r\n\r\nMinimalUser.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MinimalUser;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    //padding: theme.spacing(4),\r\n    //        backgroundColor: '#ffF8ffF8',\r\n    transparent: true,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    //height: '600px'\r\n  }\r\n}));\r\n\r\nconst Dashboard=props => {\r\n  const { history }=props;\r\n/*\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/logout');\r\n\r\n  }*/\r\n\r\n  return (\r\n    <>\r\n      {/*}<!-- End Contact Us Section -->{*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not want to show dots if there is only one position left \r\n      after/before the left/right page count as that would lead to a change if our Pagination\r\n      component size which we do not want\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { usePagination, DOTS } from './usePagination';\r\nimport './pagination.scss';\r\nconst Pagination = props => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className\r\n  } = props;\r\n    \r\n  const paginationRange = usePagination({\r\n    \r\n    totalCount,\r\n    pageSize,\r\n    siblingCount,\r\n    currentPage\r\n  });\r\n/* */\r\n  if (!paginationRange||currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n/**/\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul\r\n      className={classnames('pagination-container', { [className]: className })}\r\n    >\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === 1\r\n        })}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className=\"arrow left\" />\r\n      </li>\r\n      {paginationRange.map(pageNumber => {\r\n        if (pageNumber === DOTS) {\r\n          return <li className=\"pagination-item dots\">&#8230;</li>;\r\n        }\r\n\r\n        return (\r\n          <li\r\n            className={classnames('pagination-item',()=> {\r\n              selected: pageNumber === currentPage\r\n            })}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n      <li\r\n        className={classnames('pagination-item', {\r\n          disabled: currentPage === lastPage\r\n        })}\r\n        onClick={onNext}\r\n      >\r\n        <div className=\"arrow right\" />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\nimport { connect} from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\nimport { slidesOnRight } from 'react-slick/lib/utils/innerSliderUtils';\r\nimport data from '@iconify/icons-mdi/counter';\r\n\r\nclass MiaCluster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isfaValid: false,\r\n        values: {},\r\n        valuesSearch: {},\r\n        valuesEdit :[],\r\n        \r\n        touched: {},\r\n        errors: {}\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n      datas:[],\r\n      dataMia:dataClustering,\r\n\r\n      resultSearch:[],\r\n      cadData:[],\r\n      loading:0,\r\n      isCost:false,\r\n      isRoi:false,\r\n      //cluster:'A',\r\n      checkedValue:false,\r\n      \r\n      isHse:false,\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    this.handleSearch=this.handleSearch.bind(this)  \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange=this.handleInputChange.bind(this)\r\n  }\r\n  setChecked=(e)=>\r\n  {\r\n    //alert(this.state.datas.length);\r\n    let togger=e.target.checked\r\n    cb_empId[0].checked=togger\r\n  \r\n    /*\r\n    for (let loopDatas  = 0; loopDatas < this.state.datas.length; loopDatas++) {\r\n      //console.log(cb_empId);\r\n      \r\n      if(this.state.pageSize!==loopDatas)\r\n      {\r\n        alert(loopDatas)\r\n\r\n        cb_empId[loopDatas].checked=togger\r\n  \r\n      }\r\n      // more statements\r\n    }*/\r\n    \r\n       \r\n    //this.state.checkedValue=true//e.target.checked\r\n  }\r\n  handleInputChange = (e, index) => {\r\n    //setDisable(false);\r\n    const { name, value } = e.target;\r\n    this.state.resultSearch = [...this.state.datas];\r\n    //alert(e.target.checked)//=true\r\n    alert(\":sasasa\")\r\n    if(name!==\"cb_empId\")\r\n    {\r\n      alert(cb_empId[index].checked)\r\n      if(cb_empId[index].checked===false)\r\n      {\r\n        e.target.value=''\r\n      }else\r\n      {\r\n        this.state.resultSearch[index][name] = value;\r\n  \r\n      }\r\n        \r\n    }\r\n    \r\n    //alert(value);\r\n    //alert(list[index][name])\r\n    //if(this.state.datas[0]['cb_empId'])alert(this.state.datas[0]['cb_empId'] )\r\n    //setRows(list);\r\n    /* */\r\n    //console.log(\"this.state.datas1\",this.state.datas);\r\n    //console.log(\"list\",list);\r\n    /*this.setState\r\n    (prevState => ({\r\n      datas:list\r\n      \r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      console.log(\"this.state.datas2\",this.state.datas);\r\n\r\n    }\r\n    /*,()=>{\r\n      console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n      const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });*/\r\n\r\n  };\r\n  //onClick={handleSave}\r\n  handleSearch(event)\r\n  {\r\n    \r\n    //alert(this.state.formState.valuesSearch.impactValue)\r\n      //this.handleChangeSearch typeNovelt isRoi Cost ,hse level impactValue\r\n      let dataSearch=[]\r\n      //alert(\"SSASASA\")\r\n      //alert(impactValue)\r\n\r\n/*\r\n      typeNovelty\r\n      impactValue\r\n      roi\r\n      cost\r\n      hse\r\n      appBoundry\r\n\r\n*/\r\nlet cekNull=true;\r\n\r\n//let impactValue=this.state.formState.valuesSearch.impactValue\r\n//e   \r\n  if(this.state.formState.valuesSearch.impactValue === undefined || \r\n  this.state.formState.valuesSearch.impactValue === null)\r\n    {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'error',\r\n        title: 'Pilih Filter Pencarian  ',\r\n        showConfirmButton: false,\r\n        timer: 1200\r\n      })\r\n    }else{\r\n      cekNull=false;\r\n    }\r\n//alert(cekNull)\r\n     \r\n//let cekNull=(impactValue?true:false )\r\n      let impactValue=this.state.formState.valuesSearch.impactValue\r\n      let roi=this.state.formState.valuesSearch.roi\r\n      let typeNovelty=this.state.formState.valuesSearch.typeNovelty\r\n      let cost =this.state.formState.valuesSearch.cost;\r\n      let hse=this.state.formState.valuesSearch.hse\r\n      let hsl=this.state.formState.valuesSearch.hsl\r\n      let level=this.state.formState.valuesSearch.level\r\n      //alert(cekNull)\r\n      if(cekNull===false && impactValue===\"ROI\")\r\n      {\r\n  //      alert(hsl)\r\n        cekNull=typeNovelty && roi && hsl && level ?false : true;\r\n           \r\n      }else if(cekNull===false && impactValue===\"Cost Saving\")\r\n      {\r\n        cekNull=typeNovelty && cost && hsl && level ?false: true\r\n      }else if(cekNull===false && impactValue===\"HSE\")\r\n      {\r\n        cekNull=typeNovelty && hse && hsl && level ?false: true\r\n      } \r\n      impactValue=this.state.formState.valuesSearch.impactValue\r\n      if(cekNull===true) \r\n       {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'error',\r\n          title: 'Pilih Filter Pencarian  ',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n       }else{\r\n        if(this.state.formState.valuesSearch.impactValue===\"ROI\")\r\n        { \r\n          //console.log(\"this.state.cadData\",this.state.cadData)\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === \r\n            this.state.formState.valuesSearch.typeNovelty\r\n            && data.roi===this.state.formState.valuesSearch.roi \r\n            && data.level===this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearch.hsl));\r\n            \r\n        }else if(impactValue===\"Cost Saving\")\r\n        {\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === this.state.formState.valuesSearch.typeNovelty\r\n            && data.cost===this.state.formState.valuesSearch.cost \r\n            && data.level==this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearchhsl));\r\n        }else if(impactValue===\"HSE\")\r\n        {\r\n          dataSearch=this.state.cadData.filter((data => data.typeNovelty === this.state.formState.valuesSearch.typeNovelty\r\n            && data.hse===this.state.formState.valuesSearch.hse\r\n            && data.level===this.state.formState.valuesSearch.level\r\n            && data.hsl===this.state.formState.valuesSearch.hsl))\r\n        }\r\n        console.log(dataSearch,\"dataSearch33333\")\r\n        dataSearch=!Array.isArray(dataSearch)?(dataSearch?[dataSearch]:dataSearch):dataSearch;\r\n        //this.state.cluster='B'\r\n        if(Array.isArray(dataSearch))\r\n        {\r\n          for(let loopCluster=0;loopCluster<=dataSearch.length-1;loopCluster++)\r\n          {\r\n            dataSearch[loopCluster]['cluster']=this.state.formState.valuesSearch.cluster;\r\n          }\r\n        }\r\n        //this.state.datas=dataSearch;\r\n        //alert(\"DSDS\")\r\n        console.log(dataSearch,\"dataSearch33333\")\r\n        //this.state.cadData=[... dataSearch]\r\n        /* */\r\n        this.setState({datas: dataSearch})\r\n        /**/\r\n       /* this.setState\r\n    (prevState => ({\r\n      datas:\r\n      {\r\n        ...prevState.datas, \r\n        datas:dataSearch\r\n        \r\n  \r\n     }\r\n     */\r\n    \r\n    //console.log(\"dataSearch baru\",dataSearch)\r\n     \r\n       \r\n        }/**/\r\n        //localStorage.setItem(\"data\",JSON.stringify(dataSearch))\r\n        //alert(this.state.formState.valuesSearch.impactValue)\r\n  \r\n       }//\r\n       \r\n\r\n/*\r\n      (this.state.formState.valuesSearch.impactValue &&  \r\n      this.state.formState.valuesSearch.impactValue===\"ROI\"\r\n      ?this.state.formState.valuesSearch.roi && $this.state.formState.valuesSearch.level)\r\n*/\r\n       //}\r\n  \r\n  componentWillMount() {\r\n\r\n     //const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n    /*if(!this.state.datas)\r\n    {*/\r\n      if(localStorage.getItem('data'))\r\n      {\r\n        //alert(\"dsds\")\r\n        //alert(localStorage.getItem('data'))\r\n        \r\n        this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n        console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n  \r\n      }else{\r\n        localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n      }\r\n      this.state.datas=this.state.dataMia.filter((data => data.step == \r\n        \"Submission\"))\r\n      this.state.cadData=[... this.state.datas]\r\n\r\n\r\n  }\r\n  setData()  {\r\n    //alert(\"data=\"+this.state.datas.length)\r\n    const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n    const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n    \r\n   //console.log(\"this.state.datas hasil search=\",this.state.datas)\r\n    if(this.state.datas.length!==undefined) \r\n    {\r\n      \r\n      //alert(\"DDDD\")\r\n      return this.state.datas.slice(firstPageIndex, lastPageIndex);\r\n    }else \r\n    {console.log(\"this.state.datas\",this.state.datas)\r\n      return this.state.datas\r\n    }\r\n  }\r\n  setCurrentPage(pageVar)\r\n  {\r\n    this.setState({currentPage: pageVar});\r\n  }\r\n  handleImpactValue= event => {\r\n    event.persist();\r\n    let name=event.target.name;\r\n    let value=event.target.value;\r\n    this.handleChangeSearch(event);\r\n    if(value===\"ROI\")\r\n    {\r\n      this.setState({isRoi: true});\r\n      this.setState({isHse: false});\r\n      this.setState({isCost: false});\r\n   \r\n    \r\n    }else if(value===\"Cost Saving\")\r\n    {\r\n    this.setState({isRoi: false});\r\n    this.setState({isHse: false});\r\n    this.setState({isCost: true});\r\n \r\n    }else if(value===\"HSE\")\r\n    {\r\n    this.setState({isRoi: false});\r\n    this.setState({isHse: true});\r\n    this.setState({isCost: false});\r\n \r\n    }\r\n  }\r\n  handleSave = () => {\r\n//    setEdit(!isEdit);\r\n    //setRows(rows);\r\n    let today = new Date();\r\n  let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n  for (let loopsave=0;loopsave<=this.state.resultSearch.length-1;loopsave++)\r\n  {\r\n    this.state.resultSearch[loopsave].step=\"Clustering\";\r\n\r\n    //this.state.resultSearch[loopsave].submissiondate=date\r\n  }\r\n  \r\n  //this.state.resultSearch.step=\"Cluster\";\r\n  \r\n    this.setState({datas: this.state.resultSearch});\r\n    this.setState({cadData:this.state.datas});\r\n    localStorage.setItem('data', JSON.stringify(this.state.cadData)); \r\n\r\n    const { history }=this.props;\r\n    //alert(\"dds\") \r\n      history.push(\"/mia/reviewing\");\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'Success',\r\n        title: 'Data have been Clustering proceess   ',\r\n        showConfirmButton: false,\r\n        timer: 1000\r\n      })\r\n\r\n    \r\n    //this.state.resultSearch\r\n    //console.log(\"saved : \", rows);\r\n    //setDisable(true);\r\n    //setOpen(true);\r\n};\r\n/*\r\n  handleInputChange = (e, index) => {\r\n    setDisable(false);\r\n    const { name, value } = e.target;\r\n    const list = [...rows];\r\n    list[index][name] = value;\r\n    setRows(list);\r\n};\r\n*/\r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n //       alert(name+\" \"+value)\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n\r\n\r\n  handleChangeSearch = event => {\r\n    //alert(\"DSDSDS\")\r\n    //event.persist();\r\n\r\n\r\n        //alert(name+\" \"+value)valuesEdit\r\n\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n        //alert(name)\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        valuesSearch:\r\n        {\r\n          ...prevState.formState.valuesSearch,\r\n          [name]: value \r\n        }/*,\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },*/\r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    })\r\n    /*,()=>{\r\n      console.log(this.state.formState.valuesSearch,\"this.state.formState.valuesSearch\")\r\n      const errorsVar = validate(this.state.formState.valuesSearch, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    }*/);\r\n\r\n    \r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n \r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n            \r\n        <section class=\"content-header\">\r\n          <h1>&nbsp; </h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Clustering</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n       \r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-spinner\"></i> CLUSTERING</h3>\r\n            </div>\r\n            \r\n            <form  >\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\" style={{padding: '2px 0', backgroundColor: '#f0f0f0'}}>\r\n                <div class=\"col-md-1\">Filter:</div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <select name=\"typeNovelty\"  class=\"form-control\" \r\n                    style={{height:'24px', padding:0}}\r\n                    onChange={this.handleChangeSearch}>\r\n                      <option selected>Novelty</option>\r\n                      <option>New</option>\r\n                      <option>Improve Existing</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n\r\n                <div class=\"col-md-2\"><span class=\"form-group\">\r\n                    <select name=\"impactValue\" \r\n                    onChange={this.handleImpactValue}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Impact Value</option>\r\n                      <option>ROI</option>\r\n                      <option>Cost Saving</option>\r\n                      <option>HSE</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isRoi}><span class=\"form-group\" >\r\n                    <select name=\"roi\" onChange={this.handleChangeSearch } class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>ROI</option>\r\n                      <option value=\"Very High\">Very High | >20% </option>\r\n                      <option value=\"High\">High | 20% </option>\r\n                      <option value=\"Medium\">Medium | 10-15%</option>\r\n                      <option value=\"Moderate\">Moderate | 10</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                </div>\r\n \r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isCost}><span class=\"form-group\" >\r\n                    <select name=\"cost\" \r\n                    onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Cost Saving</option>\r\n                      <option value=\"Extremely High Impact\">Extremely High Impact | > 1MM USD </option>\r\n                      <option value=\"Very High Impact\">Very High Impact | 500 - 1 MM USD </option>\r\n                      <option value=\"Moderate High Impact\">Moderate High Impact | 100 - 500</option>\r\n                      <option value=\"Moderate\">Moderate | 50 K USD</option>\r\n                      <option value=\"Low Impact\">Moderate | lt 50 K USD</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                  \r\n                </div>\r\n                \r\n                <div class=\"col-md-2\" hidden={!this.state.isHse}><span class=\"form-group\">\r\n                    <select name=\"hse\" \r\n                     onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>HSE</option>\r\n                      <option value=\"Remove Hazard\">Remove Hazard </option>\r\n                      <option value=\"Minimize Hazard \"> Minimize Hazard  </option>\r\n                      <option value=\"Contain Hazard\">Moderate High Impact | 100 - 500</option>\r\n                      <option value=\"Protect Hazard\">Protect Hazard</option>\r\n                     \r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                \r\n\r\n                <div class=\"col-md-3\"><span class=\"form-group\">\r\n                    <select name=\"hsl\" onChange={this.handleChangeSearch} class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Application Boundary</option>\r\n                      <option value=\"Facility\">Facility</option>\r\n                      <option value=\"System\">System</option>\r\n                      <option value=\"Sub System\">Sub System</option>\r\n                      <option value=\"Equipment\">Equipment</option>\r\n                      <option value=\"Sub Equipment\">Sub Equipment</option>\r\n                      <option value=\"Component\">Component</option>\r\n                      <option value=\"Part\">Part</option>\r\n                      <option value=\"Other\">Other</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-2\"><span class=\"form-group\">\r\n                    <select name=\"level\" onChange={this.handleChangeSearch} class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Change Level</option>\r\n                      <option>Low</option>\r\n                      <option>Medium</option>\r\n                      <option>High/Radical</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                \r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <select name=\"cluster\"\r\n                     onChange={this.handleChangeSearch}\r\n                    class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                      <option selected>Cluster</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-xs\" \r\n                    onClick={this.handleSearch}>GO </button></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </form>\r\n            <div class=\"box-body table-responsive no-padding\">\r\n\r\n              <table class=\"table table-striped\">\r\n                <tr>\r\n                  <th width=\"21\" style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox\" onChange= {(e) => this.setChecked(e)}  id=\"checkbox\"/>\r\n                    <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"137\">Full Name</th>\r\n                  <th width=\"446\">Title</th>\r\n                  <th width=\"49\">Cluster</th>\r\n                  <th width=\"80\">Gate 1</th>\r\n                  <th width=\"69\" style={{width: '40px'}}>Assign Reviewer</th>\r\n                  <th width=\"72\" style={{width: '40px'}}>Assign Criteria</th>\r\n                </tr>\r\n                {/*console.log(\"this.state.datas1\",this.state.datas)*/}\r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData().map((el,i) =>\r\n                {\r\n                  return(\r\n\r\n                    <tr>\r\n                    <td><span style={{width: '10px'}}>\r\n                      <input type=\"checkbox\"  name=\"cb_empId\"    \r\n                      onChange={(e) => this.handleInputChange(e, i)}  id=\"cb_empId\"/>\r\n                     \r\n\r\n                    </span></td>\r\n                    <td>{el.empId}</td>\r\n                    <td>{el.fullname}</td>\r\n                    <td>{el.tittle}</td>\r\n                    <td>{el.cluster}&nbsp;</td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"gate1\"  onChange={(e) => this.handleInputChange(e, i)} class=\"form-control\" style={{height:'24px', fontSize: 'small',padding:0}}>\r\n                          <option value='' selected>Gate 1</option>\r\n                          <option value='Passed'>Passed</option>\r\n                          <option value='Retained'>Retained</option>\r\n                        </select>\r\n                      </span></td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"team\" class=\"form-control\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Team</option>\r\n                          <option>Team 1</option>\r\n                          <option>Team 2</option>\r\n                        </select>\r\n                      </span><span class=\"form-group\">\r\n                        <select name=\"head\" class=\"form-control\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Head</option>\r\n                          <option>Didik</option>\r\n                          <option>Alief</option>\r\n                          <option>Gugun</option>\r\n                          <option>Faisal</option>\r\n                        </select>\r\n                      </span><span class=\"form-group\">\r\n                        <select name=\"member\" class=\"form-control\" onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Member</option>\r\n                          <option>Didik</option>\r\n                          <option>Alief</option>\r\n                          <option>Gugun</option>\r\n                          <option>Faisal</option>\r\n                        </select>\r\n                      </span></td>\r\n                    <td><span class=\"form-group\">\r\n                        <select name=\"criteria\" class=\"form-conritrol\"  onChange={(e) => this.handleInputChange(e, i)} style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                          <option selected>Criteria</option>\r\n                          <option>A</option>\r\n                          <option>B</option>\r\n                          <option>C</option>\r\n                        </select>\r\n                      </span></td>\r\n                  </tr>\r\n  \r\n\r\n\r\n\r\n\r\n                    \r\n                  )\r\n\r\n                }):null\r\n                }\r\n                \r\n              </table>\r\n            </div>\r\n            {/*<!-- /.box-body -->*/}\r\n            \r\n           { (this.state.datas!==undefined)?(\r\n            <div class=\"box-footer clearfix\">\r\n              <button onClick={this.handleSave} class=\"btn btn-primary\"><i class=\"fa fa-hourglass-start\"></i> Process</button>\r\n              <Pagination\r\n        className=\"pagination pagination-sm no-margin pull-right\"\r\n        currentPage={this.state.currentPage}\r\n        totalCount={this.state.datas.length}\r\n        pageSize={this.state.pageSize}\r\n        onPageChange={page => this.setCurrentPage(page)}\r\n      />\r\n              \r\n            </div>\r\n            ):null}\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaCluster","\r\nimport React from 'react';\r\n// import { Link as RouterLink, withRouter } from 'react-router-dom';\r\n//import writeFileP from 'write-file-p');\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport {CKEditor} from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { connect} from 'react-redux';\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaSubmittion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n      },\r\n      \r\n      datas:dataClustering,\r\n      pesan:true,\r\n      orgData:[],\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    //this.inputHandlerCKE=this.inputHandlerCKE.bind(this)\r\n    //this.logEvent=this.logEvent.bind(this);\r\n  }\r\n valueFrom=(value,name)=>{\r\n \r\n  this.setState\r\n  (prevState => ({\r\n    formState:\r\n    {\r\n      ...prevState.formState, \r\n      values:\r\n      {\r\n        ...prevState.formState.values,\r\n        [name]: value \r\n      },\r\n      touched:\r\n      {\r\n        ...prevState.formState.touched,\r\n        [name]: true\r\n      },\r\n      \r\n\r\n\r\n   }\r\n\r\n    \r\n   \r\n     \r\n  }),()=>{\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n    console.log(\"formState\",this.state.formState)\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': errorsVar \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid': errorsVar ? false : true, \r\n        }\r\n        \r\n        \r\n      }\r\n    }))\r\n\r\n    //alert(\"hhhh\");\r\n  });\r\n\r\n  \r\n }\r\n handleClose=()=>{\r\n  const { history }=this.props;\r\n \r\n  history.push(\"/mia/clustering\");\r\n \r\n}\r\n  \r\nhandleChange = event => {\r\n    event.persist();\r\n    let name=event.target.name\r\n    \r\n    let value=event.target.value\r\n    if(name===\"typeNovelty\" && value===\"New\") this.state.pesan=!this.state.pesan\r\n \r\n    this.valueFrom(value,name)\r\n    \r\n\r\n  };\r\n  handleSubmit = event => {\r\n  if(localStorage.getItem('data'))\r\n  {\r\n    //alert(\"Dsdsdss\")\r\n    this.state.datas=JSON.parse( localStorage.getItem('data') ) // parse to object if necessary\r\n    \r\n  }else{\r\n    this.state.datas=dataClustering\r\n  }\r\n  let today = new Date();\r\n  let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n  this.state.formState.values.submissiondate=date;\r\n  this.state.formState.values.step=\"Submission\";\r\n  this.state.formState.values.id=dataClustering.length+1//this.state.datas.length+1\r\n  this.state.datas.push(  this.state.formState.values)\r\n  dataClustering.push( this.state.formState.values)\r\n  localStorage.setItem('data', JSON.stringify(this.state.datas) /* JSON.stringify(dataClustering)*/ );\r\n\r\n  \r\n\r\n //  let fileContent = 'I can write';\r\n///  fs.writeFileSync('../../common/datajson/clustering.json', JSON.stringify(this.state.datas));\r\n   \r\n\r\n   //const writeFileP = require(\"write-file-p\");\r\n \r\n   /*\r\n   const saveFile= (saveLocation,data,encoding='utf8')=> {\r\n     let dataString = JSON.stringify(data,null,2)\r\n  }*/\r\n  const { history }=this.props;\r\n//alert(\"dds\") \r\n  history.push(\"/mia/clustering\");\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'Success',\r\n    title: 'Data have been submited  ',\r\n    showConfirmButton: false,\r\n    timer: 1000\r\n  })\r\n\r\n    //Write a text file\r\n   //writeFileP('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err, data) => {\r\n       //console.log(err || data);\r\n   //});\r\n   \r\n\r\n   //writeJsonFile.writeJsonFile('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err) => {\r\n    //if (err) console.log('Error writing file:', err);\r\n\r\n   /*\r\n   this.setState\r\n    (prevState => ({\r\n      datas:\r\n      {\r\n        ...prevState.datas, \r\n        datas:this.state.value\r\n        \r\n      }\r\n    }))\r\n  \r\n    */\r\n\r\n  }\r\n  \r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n            \r\n          <section class=\"content-header\">\r\n          <h1>&nbsp;\r\n\r\n          </h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Submission</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-share\"></i> SUBMISSION</h3>\r\n            </div>\r\n            <div class=\"box-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <form class=\"form-horizontal\" onSubmit={this.handleSubmit}>\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Fill Your Personal Data</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label class=\"col-sm-2 control-label\">Full Name</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" name=\"fullname\" class=\"form-control\" id=\"inputName\" \r\n                          placeholder=\"Full Name\" onChange={this.handleChange}/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label  class=\"col-sm-2 control-label\">Employee ID</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" name=\"empId\" id=\"empId\" placeholder=\"Employee ID\"\r\n                          onChange={this.handleChange}/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label /*for=\"inputFunction\"*/ class=\"col-sm-2 control-label\">Function</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputFunction\" name=\"function\"  onChange={this.handleChange} \r\n                          placeholder=\"Function\"  />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDiscipline\" class=\"col-sm-2 control-label\">Discipline</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputEmployee\" name=\"discipline\"\r\n                          onChange={this.handleChange} placeholder=\"Discipline\"/>\r\n                        </div>\r\n                      </div>\r\n                      {/*} \r\n                      \r\n                      <!-- <div class=\"form-group\">\r\n                          <div class=\"col-sm-offset-2 col-sm-10\">\r\n                            <div class=\"checkbox\">\r\n                              <label>\r\n                                <input type=\"checkbox\"> Remember me\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div> -->      {*/}\r\n\r\n                    </div>{/*<!-- /.box-body -->*/}\r\n\r\n                    <div class=\"box-header with-bordesr\">\r\n                      <h4 class=\"box-title\">Enter Your Abstraction</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n \r\n                        <label for=\"inputTitle\" class=\"col-sm-2 control-label\">Title</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" onChange={this.handleChange} class=\"form-control\" \r\n                          id=\"inputTitle\" \r\n                          placeholder=\"Title\" name=\"tittle\"/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDescription\" class=\"col-sm-2 control-label\">Description</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputDescription\" \r\n                          placeholder=\"Description\" name='desc'\r\n                          onChange={this.handleChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputFunction\" class=\"col-sm-2 control-label\">Abstract</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"pull-right box-tools\">\r\n                            {/*}\r\n                            <!-- <button class=\"btn btn-default btn-sm\" data-widget=\"collapse\" data-toggle=\"tooltip\" title=\"Collapse\"><i class=\"fa fa-minus\"></i></button>\r\n                                <button class=\"btn btn-default btn-sm\" data-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\"><i class=\"fa fa-times\"></i></button> -->\r\n                            {*/}\r\n                          </div>\r\n                          <div class=\"box-body pad\" style={{\r\n                            \r\n                              \"& .ck-editor__main > .ck-editor__editable\": {\r\n                                minHeight: \"100px\"\r\n                              }\r\n                          \r\n                          }}>\r\n                              \r\n                  <CKEditor\r\n                  height=\"100%\"\r\n                  name=\"abstraction\"\r\n                  id=\"abstraction\"\r\n\r\n                  config={{\r\n                    simpleUpload: {\r\n                      uploadUrl: 'https://myserver.herokuapp.com/image-upload'\r\n                    },\r\n                    toolbar: ['heading', '|', 'bold', 'italic', 'blockQuote', 'link', 'numberedList', 'bulletedList', 'imageUpload', 'insertTable',\r\n                      'tableColumn', 'tableRow', 'mergeTableCells', 'mediaEmbed', '|', 'undo', 'redo']\r\n                  }}\r\n                  editor={ClassicEditor}\r\n                  onChange={ ( event, editor ) => {\r\n                    const data = editor.getData();\r\n                    this.valueFrom(data,\"abstraction\")\r\n                  } }\r\n\r\n               \r\n                             />\r\n              \r\n\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputDiscipline\" class=\"col-sm-2 control-label\">&nbsp;</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <input type=\"file\" id=\"exampleInputFile\"/>\r\n                          <p class=\"help-block\">Example block-level help text here.</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>{/*<!-- /.box-body -->*/}\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Novelty</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Type</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"typeNovelty\" \r\n                              id=\"optionsRadios1\" value=\"New\" onChange={this.handleChange} />\r\n                              New <br /> \r\n                              <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>\r\n                                Relative no evidence or never be found anywhere in Medco Organization ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude in Medco Organization</span></label>\r\n                          </div>\r\n                          <input type=\"text\" class=\"form-control\" id=\"inputTitle\" placeholder=\"Reason\" disabled={this.state.pesan}/> <br />\r\n                          <input type=\"file\" id=\"exampleInputFile\" disabled={this.state.pesan}/>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"typeNovelty\" id=\"optionsRadios2\" \r\n                              value=\"Improve Existing\" onChange={this.handleChange}/>\r\n                              Improve Existing <br /> \r\n                              <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>\r\n                                Ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude but there is at least one evidence that it has connection, interference or interface to the existing entity (could be systems, process, etc in Medco Organization\r\n                                </span></label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Impact Value</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">ROI</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi1\" \r\n                              value=\"Very High\" onChange={this.handleChange} />\r\n                              Very High | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>20%</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi2\" value=\"High\"\r\n                              onChange={this.handleChange} />\r\n                              High | <span style={{fontStyle: 'italic', fontSize: 'small', \r\n                              color: 'brown'}}>15-20%</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                            <input type=\"radio\" name=\"roi\" id=\"roi3\" value=\"Medium\"\r\n                              onChange={this.handleChange} />\r\n                              Medium | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>10-15%</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"roi\" id=\"roi4\" value=\"Moderate\"\r\n                              onChange={this.handleChange} />\r\n                              \r\n                              Moderate | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}\r\n                              >&lt10%</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Cost Saving</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cost1\" \r\n                              value=\"Extremely High Impact\"  onChange={this.handleChange} />\r\n                              \r\n                              Extremely High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', fontSize: 'small', \r\n                              color: 'brown'}}>&gt1 MM USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cost2\" \r\n                              value=\"Very High Impact\"  onChange={this.handleChange}/>\r\n                              Very High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>500 - 1 MM USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos3\" value=\"Moderate High Impact\"   onChange={this.handleChange}/>\r\n                              Moderate High Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>100 - 500 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos4\" value=\"Moderate\"  onChange={this.handleChange}/>\r\n                              Moderate Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>50 K - 100 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"cost\" id=\"cos5\" value=\"Low Impact\"  onChange={this.handleChange}/>\r\n                              Low Impact | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>&lt 50 K USD</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">HSE</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE1\" value=\"Remove Hazard\"  onChange={this.handleChange}/>\r\n                              Remove Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"oHSE2\" value=\"Minimize Hazard\"  onChange={this.handleChange}/>\r\n                              Minimize Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE3\" value=\"Contain Hazard\"  onChange={this.handleChange}/>\r\n                              Contain Hazard \r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"HSE\" id=\"HSE4\" value=\"Protect Hazard\"  onChange={this.handleChange}/>\r\n                              Protect Hazard\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Application Boundary</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Asset Hierarchy Level</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            \r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl1\" value=\"Facility\" onChange={this.handleChange}/>\r\n                              Facility | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}\r\n                              >Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hdl\" id=\"hsl2\" value=\"System\" onChange={this.handleChange}/>\r\n                              System | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Compressor Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl3\" value=\"Sub System\" onChange={this.handleChange}/>\r\n                              Sub System | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Compressor</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl4\" value=\"Equipment\" onChange={this.handleChange}/>\r\n                              Equipment | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Turbo Compressor Package Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl5\" value=\"Sub Equipment\" onChange={this.handleChange}/>\r\n                              Sub Equipment | <span style={{fonStyle: 'italic', fontSize: 'small',  color: 'brown'}}>Train A LP Compressor</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl6\" value=\"Component\" onChange={this.handleChange}/>\r\n                              Component | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Flow Glass - From NDE Journal Bearing C-2720 TO Gas Turbinelube Oil Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl\" id=\"hsl7\" value=\"Part\" onChange={this.handleChange}/>\r\n                              Part | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Proximity Probe - NDE Bearing Vibration (X) LP Compressor Train A</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"hsl5\" id=\"hsl58\" value=\"Other\" onChange={this.handleChange}/>\r\n                              Other | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Logistic</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"box-header with-border\">\r\n                      <h4 class=\"box-title\">Change Level</h4>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"inputType\" class=\"col-sm-2 control-label\">Level</label>\r\n                        <div class=\"col-sm-10\">\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level1\" value=\"Low\" onChange={this.handleChange}/>\r\n                              Low | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - less than or at least 2 Steps/Processes</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level2\" value=\"Medium\" onChange={this.handleChange}/>\r\n                              Medium | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - less than or at least 5 Steps/Processes</span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio\">\r\n                            <label>\r\n                              <input type=\"radio\" name=\"level\" id=\"level3\" value=\"High/Radical\" onChange={this.handleChange}/>\r\n                              High/Radical | <span style={{fontStyle: 'italic', fontSize: 'small', color: 'brown'}}>Applied Change to Existing Procewss or Introduce New Change - more than  Steps/Process</span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"box-footer\">\r\n                    <button type=\"submit\" \r\n                  className=\"btn btn-primary btn-block btn-flat\"\r\n                  disabled={!this.state.formState.isValid}\r\n                  ><i class=\"fa fa-share\"></i> Submit</button>     \r\n\t\t\t\t\t\t<a href=\"\" type=\"button\" class=\"btn btn-success btn-sm\" disabled={!this.state.formState.isValid}><button  disabled={!this.state.formState.isValid}><i class=\"fa fa-save\"></i> Save</button></a>\r\n<a href=\"\" type=\"button\" class=\"btn btn-warning btn-sm\"><button type=\"submit\" \r\n                                  disabled={!this.state.formState.isValid}><i class=\"fa fa-edit\"></i> Edit</button></a>\r\n\t\t\t\t\t\t<a href=\"\" type=\"button\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n              <button onClick={this.handleClose}><i class=\"fa fa-close\"></i> Cancel</button></a> \r\n\t\t\t\t\t  \r\n\t\t\t\t\t\t  <a href=\"\" type=\"button\" class=\"btn btn-default btn-sm\"><button type=\"submit\"><i class=\"fa fa-download\"></i> Download</button></a>\r\n                    </div>{/*<!-- /.box-footer -->*/}\r\n                  </form>{/*<!-- /.box-body --><!-- /.box -->*/}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) =>\r\n{\r\n    return{\r\n      dataOrg: state.orgData\r\n    \r\n    }\r\n}\r\nconst mapDispactToProps=(dispatch)=>\r\n{\r\n    return{\r\n        dispatchOrg:(Orgs)=>\r\n        {dispatch({type:'UBAH_DATA',newValue:Orgs})\r\n        }\r\n    }\r\n}\r\n\r\nexport default MiaSubmittion","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\nimport dataClustering from '../../common/datajson/clustering.json';\r\nimport Pagination from '../../../src/components/Pagination';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isfaValid: false,\r\n        values: {},\r\n        valuesSearch: {},\r\n        valuesEdit :[],\r\n        \r\n        touched: {},\r\n        errors: {}\r\n      },\r\n      currentPage:1,\r\n      pageSize:15,\r\n      datas:[],\r\n      dataMia:dataClustering,\r\n\r\n      resultSearch:[],\r\n      cadData:[],\r\n      loading:0,\r\n      isCost:false,\r\n      isRoi:false,\r\n      //cluster:'A',\r\n      checkedValue:false,\r\n      \r\n      isHse:false,\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    this.handleSearch=this.handleSearch.bind(this)  \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  valueFrom=(value,name)=>{\r\n \r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [name]: true\r\n        },\r\n        \r\n  \r\n  \r\n     }\r\n  \r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      console.log(\"formState\",this.state.formState)\r\n  \r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n  \r\n      //alert(\"hhhh\");\r\n    });\r\n  \r\n    \r\n   }\r\n   handleClose=()=>{\r\n    const { history }=this.props;\r\n   \r\n    history.push(\"/mia/clustering\");\r\n   \r\n  }\r\n    \r\n  handleChange = event => {\r\n      event.persist();\r\n      let name=event.target.name\r\n      \r\n      let value=event.target.value\r\n      if(name===\"typeNovelty\" && value===\"New\") this.state.pesan=!this.state.pesan\r\n   \r\n      this.valueFrom(value,name)\r\n      \r\n  \r\n    };\r\n    handleSubmit = event => {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"Dsdsdss\")\r\n      this.state.datas=JSON.parse( localStorage.getItem('data') ) // parse to object if necessary\r\n      \r\n    }else{\r\n      this.state.datas=dataClustering\r\n    }\r\n    let today = new Date();\r\n    let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n    this.state.formState.values.submissiondate=date;\r\n    this.state.formState.values.step=\"Submission\";\r\n    this.state.formState.values.id=dataClustering.length+1//this.state.datas.length+1\r\n    this.state.datas.push(  this.state.formState.values)\r\n    dataClustering.push( this.state.formState.values)\r\n    localStorage.setItem('data', JSON.stringify(this.state.datas) /* JSON.stringify(dataClustering)*/ );\r\n  \r\n    \r\n  \r\n   //  let fileContent = 'I can write';\r\n  ///  fs.writeFileSync('../../common/datajson/clustering.json', JSON.stringify(this.state.datas));\r\n     \r\n  \r\n     //const writeFileP = require(\"write-file-p\");\r\n   \r\n     /*\r\n     const saveFile= (saveLocation,data,encoding='utf8')=> {\r\n       let dataString = JSON.stringify(data,null,2)\r\n    }*/\r\n    const { history }=this.props;\r\n  //alert(\"dds\") \r\n    history.push(\"/mia/clustering\");\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'Success',\r\n      title: 'Data have been submited  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n  \r\n      //Write a text file\r\n     //writeFileP('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err, data) => {\r\n         //console.log(err || data);\r\n     //});\r\n     \r\n  \r\n     //writeJsonFile.writeJsonFile('../../common/datajson/clustering.json', JSON.stringify(this.state.datas), (err) => {\r\n      //if (err) console.log('Error writing file:', err);\r\n  \r\n     /*\r\n     this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:this.state.value\r\n          \r\n        }\r\n      }))\r\n    \r\n      */\r\n  \r\n    }\r\n    handleSearch(event)\r\n    {\r\n      \r\n      //alert(this.state.formState.valuesSearch.impactValue)\r\n        //this.handleChangeSearch typeNovelt isRoi Cost ,hse level impactValue\r\n        let dataSearch=[]\r\n   let cekNull=true;\r\n  \r\n  //let impactValue=this.state.formState.valuesSearch.impactValue\r\n  //e   \r\n\r\n  //alert(cekNull)\r\n       \r\n  //let cekNull=(impactValue?true:false )\r\n  team\r\n  criteria\r\n  cluster\r\n        let team=this.state.formState.valuesSearch.team\r\n        let criteria=this.state.formState.valuesSearch.criteria\r\n        let cluster =this.state.formState.valuesSearch.cluster;\r\n        //alert(cekNull)\r\n        cekNull=team && criteria && cluster ?false: tru\r\n        if(cekNull===true) \r\n         {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: 'Pilih Filter Pencarian  ',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n         }else{\r\n            dataSearch=this.state.cadData.filter((data => data.team === \r\n            this.state.formState.valuesSearch.team\r\n            && data.roi===this.state.formState.valuesSearch.roi \r\n            && data.criteria===this.state.formState.valuesSearch.criteria\r\n            && data.cluste===this.state.formState.valuesSearch.cluste));\r\n\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          dataSearch=!Array.isArray(dataSearch)?(dataSearch?[dataSearch]:dataSearch):dataSearch;\r\n          //this.state.cluster='B'\r\n          if(Array.isArray(dataSearch))\r\n          {\r\n            for(let loopCluster=0;loopCluster<=dataSearch.length-1;loopCluster++)\r\n            {\r\n              dataSearch[loopCluster]['cluster']=this.state.formState.valuesSearch.cluster;\r\n            }\r\n          }\r\n          //this.state.datas=dataSearch;\r\n          //alert(\"DSDS\")\r\n          console.log(dataSearch,\"dataSearch33333\")\r\n          //this.state.cadData=[... dataSearch]\r\n          /* */\r\n          this.setState({datas: dataSearch})\r\n          /**/\r\n         /* this.setState\r\n      (prevState => ({\r\n        datas:\r\n        {\r\n          ...prevState.datas, \r\n          datas:dataSearch\r\n          \r\n    \r\n       }\r\n       */\r\n      \r\n      //console.log(\"dataSearch baru\",dataSearch)\r\n       \r\n         \r\n          }/**/\r\n          //localStorage.setItem(\"data\",JSON.stringify(dataSearch))\r\n          //alert(this.state.formState.valuesSearch.impactValue)\r\n    \r\n         }//\r\n         handleSave = () => {\r\n          //    setEdit(!isEdit);\r\n              //setRows(rows);\r\n              let today = new Date();\r\n            let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n            for (let loopsave=0;loopsave<=this.state.resultSearch.length-1;loopsave++)\r\n            {\r\n              this.state.resultSearch[loopsave].step=\"Reviewing\";\r\n          \r\n              //this.state.resultSearch[loopsave].submissiondate=date\r\n            }\r\n            \r\n            //this.state.resultSearch.step=\"Cluster\";\r\n            \r\n              this.setState({datas: this.state.resultSearch});\r\n              this.setState({cadData:this.state.datas});\r\n              localStorage.setItem('data', JSON.stringify(this.state.cadData)); \r\n          \r\n              const { history }=this.props;\r\n              //alert(\"dds\") \r\n                history.push(\"/mia/judging\");\r\n                Swal.fire({\r\n                  position: 'center',\r\n                  icon: 'Success',\r\n                  title: 'Data have been Reviewig proceess   ',\r\n                  showConfirmButton: false,\r\n                  timer: 1000\r\n                })\r\n          \r\n              \r\n              //this.state.resultSearch\r\n              //console.log(\"saved : \", rows);\r\n              //setDisable(true);\r\n              //setOpen(true);\r\n          };\r\n             \r\n    setData()  {\r\n      //alert(\"data=\"+this.state.datas.length)\r\n      const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\r\n      const lastPageIndex = firstPageIndex + this.state.pageSize;\r\n      \r\n     //console.log(\"this.state.datas hasil search=\",this.state.datas)\r\n      if(this.state.datas.length!==undefined) \r\n      {\r\n        \r\n        //alert(\"DDDD\")\r\n        return this.state.datas.slice(firstPageIndex, lastPageIndex);\r\n      }else \r\n      {console.log(\"this.state.datas\",this.state.datas)\r\n        return this.state.datas\r\n      }\r\n    }\r\n    setCurrentPage(pageVar)\r\n    {\r\n      this.setState({currentPage: pageVar});\r\n    }\r\n    \r\n    \r\n  componentWillMount() {\r\n    if(localStorage.getItem('data'))\r\n    {\r\n      //alert(\"dsds\")\r\n      //alert(localStorage.getItem('data'))\r\n      \r\n      this.state.dataMia= JSON.parse(localStorage.getItem('data')) \r\n      console.log(\"dataMia\",JSON.parse(localStorage.getItem('data')))\r\n\r\n    }else{\r\n      localStorage.setItem('data',  JSON.stringify(this.state.dataMia) );\r\n    }\r\n    this.state.datas=this.state.dataMia.filter((data => data.step == \r\n      \"Clustering\"))\r\n    this.state.cadData=[... this.state.datas]\r\n\r\n  }\r\n \r\n  \r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n{/*<!-- Content Header (Page header) -->*/}\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Reviewing</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-eye\"></i> REVIEWING</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\" style={{padding: '2px 0', backgroundColor: '#f0f0f0'}}>\r\n                <div class=\"col-md-1\">Filter:</div>\r\n\t\t\t\t  <div class=\"col-md-1\">\r\n                  <span class=\"form-group\">\r\n                    <select name=\"team\" class=\"form-control\" \r\n                    style={{height:'24px', padding:0}}>\r\n                      <option selected>Team</option>\r\n                      <option>Team 1</option>\r\n                      <option>Team 2</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n\t\t\t\t  <div class=\"col-md-1\">\r\n          \r\n                  <span class=\"form-group\">\r\n                    <select name=\"criteria\" class=\"form-control\" onChange={this.handleChangeSearch} \r\n                    style={{height:'24px', padding:'0'}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\">\r\n                  <span class=\"form-group\">\r\n                    <select name=\"cluster\" class=\"form-control\"  onChange={this.handleChangeSearch} \r\n                    style={{height:'24px', padding:'0'}}>\r\n                      <option selected>Cluster</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n                <div class=\"col-md-1\"><span class=\"form-group\">\r\n                    <button type=\"submit\" onClick={this.handleSearch} class=\"btn btn-success btn-block btn-xs\">GO </button>\r\n                    </span>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox\" onChange= {(e) => this.setChecked(e)}  id=\"checkbox\"/>\r\n                  <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"119\">Full Name</th>\r\n                  <th width=\"399\">Title</th>\r\n                  <th width=\"141\">Assigned Cluster</th>\r\n                  <th width=\"73\">Cluster</th>\r\n                  <th width=\"86\">Score</th>\r\n                  <th width=\"86\">Gate 2</th>\r\n                </tr>\r\n                {/*console.log(\"this.state.datas1\",this.state.datas)*/}\r\n                { \r\n                  this.state.datas!==undefined?\r\n                this.setData().map((el,i) =>\r\n                {\r\n                  return(\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox2\" id=\"checkbox2\"/>\r\n                  </span></td>\r\n                  <td>{el.empId}</td>\r\n                  <td>{el.fullname}</td>\r\n                  <td>{el.tittle}</td>\r\n                  <td>{el.team}, Criteria {el.criteria}</td>\r\n                  <td>Cluster A</td>\r\n                  <td>{el.score}</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"gate2\" class=\"form-control\" \r\n                      style={{height:'24px', padding:'0'}}>\r\n                        <option selected>Gate 2</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n              )\r\n\r\n            }):null\r\n            }\r\n            \r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            { (this.state.datas!==undefined)?(\r\n            <div class=\"box-footer clearfix\">\r\n              <button type=\"submit\" onClick={this.handleSave} class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Process</button>\r\n              <Pagination\r\n        className=\"pagination pagination-sm no-margin pull-right\"\r\n        currentPage={this.state.currentPage}\r\n        totalCount={this.state.datas.length}\r\n        pageSize={this.state.pageSize}\r\n        onPageChange={page => this.setCurrentPage(page)}\r\n      />\r\n              \r\n            </div>\r\n            ):null}\r\n\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar    ;\r\n\r\n  }\r\n \r\n  \r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n{/*<!-- Content Header (Page header) -->*/}\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Judging</li>\r\n          </ol>\r\n        </section>\r\n\r\n{/*        <!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-hourglass-half\"></i> JUDGING</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox\"/>\r\n                    <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"118\">Full Name</th>\r\n                  <th width=\"320\">Title</th>\r\n                  <th width=\"108\">Reviewed Cluster</th>\r\n                  <th width=\"86\">Assign Council</th>\r\n                  <th width=\"71\">Assign Criteria</th>\r\n                  <th width=\"87\">&nbsp;</th>\r\n                  <th width=\"84\">Judge Rank</th>\r\n                  <th width=\"84\">Gate 3</th>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox2\" id=\"checkbox2\"/>\r\n                  </span></td>\r\n                  <td>0001</td>\r\n                  <td>Agus Pambudi</td>\r\n                  <td>Pemanfaatan Batubara Menjadi Karbon Aktif Dengan Proses Karbonisasi dan Aktivais Menggunakan\r\n                    Reagen Asam Fosfat (H3PO4) dan Ammonium Bikarbonat</td>\r\n                  <td>Team 1, Criteria A</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select2\" class=\"form-control\" style={{height:'24px', fontSize: 'small',\r\n                     padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select3\" class=\"form-control\" \r\n                  style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select12\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i \r\n                  class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select\" class=\"form-control\" style={{height:'24px', \r\n                      padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox3\" id=\"checkbox3\"/>\r\n                  </span></td>\r\n                  <td>0002</td>\r\n                  <td>Budi Rachmat</td>\r\n                  <td>Prospek Penggunaan Teknologi Benih untuk Pembangkit Listrik dengan Bahan Bakar Batubara di\r\n                    Indonesia</td>\r\n                  <td>Team 1, Criteria C</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select4\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select4\" class=\"form-control\" \r\n                  style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select7\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select\" class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox4\" id=\"checkbox4\"/>\r\n                  </span></td>\r\n                  <td>0003</td>\r\n                  <td>Ahmad Munthohar</td>\r\n                  <td>Menyongsong Transformasi Digital dalam Menghadapi Era Industri 4.0</td>\r\n                  <td>Team 2, Criteria B</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select5\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select5\" class=\"form-control\" \r\n                  style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select8\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select9\" class=\"form-control\" style={{height:'24px', \r\n                      padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox5\" id=\"checkbox5\"/>\r\n                  </span></td>\r\n                  <td>0004</td>\r\n                  <td>Faisal Kurniawan</td>\r\n                  <td>Strategi Manajemen Perubahan Perusahaan di Era Transformasi Digital</td>\r\n                  <td>Team 2, Criteria A</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select6\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select6\" class=\"form-control\" \r\n                  style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select11\" class=\"form-control\" \r\n                    style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select10\" class=\"form-control\" \r\n                      style={{height:'24px', padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            <div class=\"box-footer clearfix\">\r\n              <ul class=\"pagination pagination-sm no-margin pull-right\">\r\n                <li><a href=\"#\">&laquo;</a></li>\r\n                <li><a href=\"#\">1</a></li>\r\n                <li><a href=\"#\">2</a></li>\r\n                <li><a href=\"#\">3</a></li>\r\n                <li><a href=\"#\">&raquo;</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaReviewing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar    ;\r\n\r\n  }\r\n \r\n  \r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n{/*<!-- Content Header (Page header) -->*/}\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\"> Judging</li>\r\n          </ol>\r\n        </section>\r\n\r\n        {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-hourglass-half\"></i> JUDGING</h3>\r\n            </div>\r\n            <div class=\"clearfix\">&nbsp;</div>\r\n\r\n            <div class=\"box-body table-responsive no-padding\">\r\n              <table class=\"table with-border\">\r\n                <tr>\r\n                  <th width=\"30\" style={{width: '10px'}}><input type=\"checkbox\" name=\"checkbox\" \r\n                  id=\"checkbox\"/>\r\n                    <label for=\"checkbox\"> </label></th>\r\n                  <th width=\"30\" style={{width: '10px'}}>ID</th>\r\n                  <th width=\"118\">Full Name</th>\r\n                  <th width=\"320\">Title</th>\r\n                  <th width=\"108\">Reviewed Cluster</th>\r\n                  <th width=\"86\">Assign Council</th>\r\n                  <th width=\"71\">Assign Criteria</th>\r\n                  <th width=\"87\">&nbsp;</th>\r\n                  <th width=\"84\">Judge Rank</th>\r\n                  <th width=\"84\">Gate 3</th>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox2\" id=\"checkbox2\"/>\r\n                  </span></td>\r\n                  <td>0001</td>\r\n                  <td>Agus Pambudi</td>\r\n                  <td>Pemanfaatan Batubara Menjadi Karbon Aktif Dengan Proses Karbonisasi dan Aktivais Menggunakan\r\n                    Reagen Asam Fosfat (H3PO4) dan Ammonium Bikarbonat</td>\r\n                  <td>Team 1, Criteria A</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select2\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select3\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select12\" class=\"form-control\" style={{height:'24px', \r\n                    fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select\" class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox3\" id=\"checkbox3\"/>\r\n                  </span></td>\r\n                  <td>0002</td>\r\n                  <td>Budi Rachmat</td>\r\n                  <td>Prospek Penggunaan Teknologi Benih untuk Pembangkit Listrik dengan Bahan Bakar Batubara di\r\n                    Indonesia</td>\r\n                  <td>Team 1, Criteria C</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select4\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select4\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select7\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select\" class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox4\" id=\"checkbox4\"/>\r\n                  </span></td>\r\n                  <td>0003</td>\r\n                  <td>Ahmad Munthohar</td>\r\n                  <td>Menyongsong Transformasi Digital dalam Menghadapi Era Industri 4.0</td>\r\n                  <td>Team 2, Criteria B</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select5\" class=\"form-control\" style={{height:'24px', fontSize: 'small', \r\n                    padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select5\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select8\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select9\" class=\"form-control\" style={{height:'24px', padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><span style={{width: '10px'}}>\r\n                    <input type=\"checkbox\" name=\"checkbox5\" id=\"checkbox5\"/>\r\n                  </span></td>\r\n                  <td>0004</td>\r\n                  <td>Faisal Kurniawan</td>\r\n                  <td>Strategi Manajemen Perubahan Perusahaan di Era Transformasi Digital</td>\r\n                  <td>Team 2, Criteria A</td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select6\" class=\"form-control\" style={{height:'24px' ,\r\n                    fontSize: 'small', padding:0}}>\r\n                      <option selected>Chairman</option>\r\n                      <option>Didik</option>\r\n                      <option>Alief</option>\r\n                      <option>Gugun</option>\r\n                      <option>Faisal</option>\r\n                    </select>\r\n                  </span><span class=\"form-group\">\r\n                  <select name=\"select6\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                    <option selected>Member</option>\r\n                    <option>Didik</option>\r\n                    <option>Alief</option>\r\n                    <option>Gugun</option>\r\n                    <option>Faisal</option>\r\n                  </select>\r\n                  </span></td>\r\n                  <td><span class=\"form-group\">\r\n                    <select name=\"select11\" class=\"form-control\" style={{height:'24px', fontSize: 'small', padding:0}}>\r\n                      <option selected>Criteria</option>\r\n                      <option>A</option>\r\n                      <option>B</option>\r\n                      <option>C</option>\r\n                    </select>\r\n                  </span></td>\r\n                  <td><button type=\"submit\" class=\"btn btn-success btn-xs\"><i class=\"fa fa-thumbs-up\"></i> Judging Process\r\n                    </button></td>\r\n                  <td>&nbsp;</td>\r\n                  <td><span class=\"form-group\">\r\n                      <select name=\"select10\" class=\"form-control\" style={{height:'24px', \r\n                      padding:0}}>\r\n                        <option selected>Gate 3</option>\r\n                        <option>Passed</option>\r\n                        <option>Retained</option>\r\n                      </select>\r\n                    </span></td>\r\n                </tr>\r\n              </table>\r\n            </div>{/*<!-- /.box-body -->*/}\r\n            <div class=\"box-footer clearfix\">\r\n              <ul class=\"pagination pagination-sm no-margin pull-right\">\r\n                <li><a href=\"#\">&laquo;</a></li>\r\n                <li><a href=\"#\">1</a></li>\r\n                <li><a href=\"#\">2</a></li>\r\n                <li><a href=\"#\">3</a></li>\r\n                <li><a href=\"#\">&raquo;</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>{/*<!-- /.box -->*/}\r\n        </section>{/*<!-- /.content -->*/}\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaReviewing","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\nimport '../../assets/css_swal/cssSwal.css';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass MiaDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar    ;\r\n\r\n  }\r\n \r\n  \r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    \r\n\r\n  };\r\n  \r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n\r\n\r\n        <section class=\"content-header\">\r\n          <h1>&nbsp;</h1>\r\n          <ol class=\"breadcrumb\">\r\n            <li><a href=\"home.html\"><i class=\"fa fa-home\"></i> Home</a></li>\r\n            <li><a href=\"#\">MIA</a></li>\r\n            <li class=\"active\">Dashboard</li>\r\n          </ol>\r\n        </section>\r\n\r\n              {/*<!-- Main content -->*/}\r\n        <section class=\"content\">\r\n          <div class=\"box box-default\">\r\n            <div class=\"box-header with-border\">\r\n              <h3 class=\"box-title\"><i class=\"fa fa-pie-chart\"></i> Dashboard</h3>\r\n            </div>\r\n            <div class=\"clearfix\">\r\n              &nbsp;\r\n            </div>\r\n\r\n            <div class=\"box-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-aqua\">\r\n                      <div class=\"inner\">\r\n                        <h3>50</h3>\r\n                        <p>Submitters</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-person\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-green\">\r\n                      <div class=\"inner\">\r\n                        <h3>43<sup style={{fontSize: '20px'}}>%</sup></h3>\r\n                        <p>Reviewed</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-pie-graph\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">\r\n                    {/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-yellow\">\r\n                      <div class=\"inner\">\r\n                        <h3>40</h3>\r\n                        <p>Abstractions</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-document-text-online\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                  <div class=\"col-lg-3 col-xs-6\">{/*<!-- small box -->*/}\r\n                    <div class=\"small-box bg-red\">\r\n                      <div class=\"inner\">\r\n                        <h3>8</h3>\r\n                        <p>Reviewers</p>\r\n                      </div>\r\n                      <div class=\"icon\">\r\n                        <i class=\"ion ion-person-add\"></i>\r\n                      </div>\r\n                      <a href=\"#\" class=\"small-box-footer\">More info <i class=\"fa fa-arrow-circle-right\"></i></a>\r\n                    </div>\r\n                  </div>{/*<!-- ./col -->*/}\r\n                </div>\r\n              </div> {/*<!-- ./box -->*/}\r\n          </div>{/*<!-- ./col -->*/}\r\n          \r\n          \r\n        </section>\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default MiaDashboard","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 0,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"login-box-body\">\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={0}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h8\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\n//import md5 from 'md5'\r\n//import swal from '@sweetalert/with-react';\r\nimport '../../assets/css_swal/cssSwal.css';\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from 'react-slick/lib/slider';\r\n// import { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\nimport { urlPostLogin } from '../../kumpulanUrl'\r\nimport dataUser from '../../common/datajson/user.json';\r\n\r\n//import UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\nimport axios from 'axios';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: '',\r\n      alamat: '',\r\n      formState:{\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n        users:dataUser\r\n      },\r\n      schema : {\r\n        user_name: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          //email: true,\r\n          length: {\r\n            maximum: 64\r\n          }\r\n        },\r\n        password: {\r\n          presence: { allowEmpty: false, message: 'is required' },\r\n          length: {\r\n            maximum: 128\r\n          }\r\n        }\r\n      }\r\n  \r\n    };\r\n    \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n\r\n    this.state.formState.errors=errorsVar\r\n    /*this.setState(prevState => ({\r\n      formState:\r\n      {\r\n          ...prevState.formState, [errors]: errorsVar\r\n      }\r\n    }))*/\r\n\r\n\r\n   \r\n    ;\r\n\r\n    //let errorVar =validate(this.state.formState.values, schema);\r\n    /*this.setState(\r\n    formState.errors=errorVar\r\n    )*/\r\n  }\r\n \r\n  \r\n\r\n\r\n//const SignIn = props => {\r\n //const history  = this.props.history();\r\n  ////const [users, setUsers] = useState([]/*mockDataUser*/);\r\n  //const classes = useStyles();\r\n\r\n/*  \r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n*/\r\n/*\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n*/\r\n  handleChange = event => {\r\n    event.persist();\r\n\r\n    let value=event.target.value;\r\n        let name=event.target.name;\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          [name]: value \r\n        },\r\n        touched:\r\n        {\r\n          ...prevState.formState.touched,\r\n          [event.target.name]: true\r\n        },\r\n        \r\n\r\n  \r\n     }\r\n\r\n      \r\n     \r\n       \r\n    }),()=>{\r\n      const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n      this.setState\r\n      (prevState => ({\r\n        formState:\r\n        {\r\n          ...prevState.formState, \r\n          errors:\r\n          {\r\n            ...prevState.formState.errors,\r\n            'errors': errorsVar \r\n          }, \r\n          isValid:\r\n          {\r\n            ...prevState.formState.isValid,\r\n            'isValid': errorsVar ? false : true, \r\n          }\r\n          \r\n          \r\n        }\r\n      }))\r\n\r\n      //alert(\"hhhh\");\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      newDept:\r\n      {\r\n          ...prevState.newDept, [name]: value\r\n      }\r\n  }))\r\n\r\n  };\r\n  settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  }\r\n\r\n  handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    let users4 = this.state.formState.users.find(user => user.user === this.state.formState.values.user_name\r\n      && user.password === this.state.formState.values.password);\r\n   //console.log(\"users4\",users4)\r\n   if(!users4) \r\n   {\r\n    const errorsVar = validate(this.state.formState.values, this.state.schema);\r\n\r\n    this.setState\r\n    (prevState => ({\r\n      formState:\r\n      {\r\n        ...prevState.formState, \r\n        values:\r\n        {\r\n          ...prevState.formState.values,\r\n          user_name: '',\r\n          password: '' \r\n        },\r\n        errors:\r\n        {\r\n          ...prevState.formState.errors,\r\n          'errors': {} \r\n        }, \r\n        isValid:\r\n        {\r\n          ...prevState.formState.isValid,\r\n          'isValid':  false, \r\n        }\r\n  \r\n      }\r\n    }))\r\n   Swal.fire({\r\n      position: 'center',\r\n      icon: 'error',\r\n      title: 'Login Tidak Sesuai  ',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    })\r\n\r\n   }\r\n    else \r\n   {\r\n    //localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n    //swindow.location = '/beranda';\r\n    const history  = this.props.history;\r\n\r\n    localStorage.setItem('token', users4.user + users4.password);\r\n    localStorage.setItem('level', users4.level);\r\n    localStorage.setItem('username', users4.username);\r\n    localStorage.setItem('job', users4.job);\r\n    localStorage.setItem('dept', users4.dept);\r\n    localStorage.setItem('name', users4.name);\r\n    this.props.history.push('/home');\r\n\r\n\r\n    history.push('/home');\r\n\r\n   } \r\n    \r\n  };\r\n\r\n    render() {\r\n\r\n  \r\n      return (\r\n        <>\r\n        <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Sign in to start your session</p>\r\n        <form\r\n    //    className={classes.form}\r\n        onSubmit={this.handleSignIn}\r\n      >\r\n\r\n             <div className=\"form-group has-feedback\">\r\n                <input name=\"user_name\" type=\"text\" className=\"form-control\" placeholder=\"Username\"\r\n                onChange={ this.handleChange}\r\n                value={this.state.formState.values.user_name}\r\n                />\r\n                <span className=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\r\n              </div>\r\n              <div className=\"form-group has-feedback\">\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" \r\n                value={this.state.formState.values.password}\r\n                placeholder=\"Password\"\r\n                onChange={ this.handleChange}/>\r\n                <span className=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-xs-8\">\r\n                  <div className=\"checkbox icheck\">\r\n                    <label>\r\n                      <input type=\"checkbox\"/> Remember Me\r\n                    </label>\r\n                  </div>\r\n                </div>{\r\n                  /*<!-- /.col -->*/\r\n                  }\r\n                <div className=\"col-xs-4\">\r\n                  <button type=\"submit\" \r\n                  className=\"btn btn-primary btn-block btn-flat\"\r\n                  disabled={!this.state.formState.isValid}\r\n                  >Sign In</button>\r\n                </div>\r\n                \r\n          </div>\r\n\r\n\r\n\r\n        </form>\r\n        </div>\r\n\r\n\r\n        </>\r\n \r\n        ) \r\n    }\r\n};\r\n\r\n\r\nexport default SignIn","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n///import validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\nimport md5 from 'md5'\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nconst schema={\r\n  user_name: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst Signout=props => {\r\n  const { history }=props;\r\n  const [users, setUsers]=useState([]);\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n    history.push('/login');\r\n  }, [formState.values]);\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn=event => {\r\n    //event.preventDefault();\r\n    //users\r\n    //alert(formState.values.password)\r\n\r\n    /**/\r\n\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nSignout.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Signout);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst schema={\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUp=props => {\r\n  const { history }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors=validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp=event => {\r\n    event.preventDefault();\r\n    history.push('/');\r\n  };\r\n\r\n  const hasError=field =>\r\n    formState.touched[field]&&formState.errors[field]? true:false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                they sold out High Life.\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  Manager at inVision\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName')? formState.errors.firstName[0]:null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName')? formState.errors.lastName[0]:null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email')? formState.errors.email[0]:null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password')? formState.errors.password[0]:null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy||false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy')&&(\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddProv, urlEditProv, urlU, urlUbahPassword } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Password\": rowSelect.Password,\r\n      \"confirmPassword\": rowSelect.confirmPassword,\r\n      \"id\": rowSelect.id,\r\n      \"NamaLengkap\": rowSelect.NamaLengkap,\r\n      \"Alamat\": rowSelect.Alamat,\r\n    }\r\n    let url=urlUbahPassword;\r\n    // alert(url)\r\n    varJson.LastModifiedBy = userName;\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n\r\n        return tester.json();\r\n      })/**/\r\n      .then(\r\n        localStorage.setItem(\"NamaLengkap\",rowSelect.NamaLengkap),\r\n        localStorage.setItem(\"Alamat\",rowSelect.Alamat),\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      ).then(window.location.reload())\r\n      .catch((e) => {\r\n\r\n        // alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n  const [open, setOpen]=React.useState(false);\r\nconst handleTutup = () => {\r\n  setOpen(false)\r\n}\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n             <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Alamat')? formState.errors.Alamat[0]:null\r\n                }\r\n\r\n                error={hasError('Alamat')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"NamaLengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                margin=\"dense\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('nama_provinsi')? formState.errors.nama_provinsi[0]:null\r\n                // }\r\n\r\n                // error={hasError('nama_provinsi')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.confirmPassword? rowSelect.confirmPassword:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={rowSelect.Password != rowSelect.confirmPassword}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfileAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProfileAddModi;","import React from \"react\"\r\nimport { ModalComponent } from 'components';\r\nimport ProfileAddModi from \"./components/ProfileAddModi\";\r\nimport Swal from \"sweetalert2\";\r\nimport Popup from 'reactjs-popup'\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n    DialogContent\r\n} from '@material-ui/core';\r\nconst Profile = () => {\r\n\r\n\r\n    const [rowSelect, setRowSelect] = React.useState({})\r\n    rowSelect.id = localStorage.getItem('id')\r\n\r\n    return (\r\n        <div className=\" justify-center text-center mb-96  bg-indigo-700  \">\r\n            <Card>\r\n                <CardHeader\r\n                    subheader=\"\"\r\n                    title={\r\n                        <div className=\"  font-poppins \">\r\n                            <p className=\"text-center\">{localStorage.getItem(\"NamaLengkap\")}</p>\r\n                        </div>\r\n                    }\r\n                />\r\n                <Divider />\r\n                <CardContent className=\"bg-blue-900 sm:text-black lg:text-white\">\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Username : {localStorage.getItem('username')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogContent>\r\n                                Nama Lengkap : {localStorage.getItem('NamaLengkap')}\r\n                            </DialogContent>\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Nomor Induk : {localStorage.getItem('NIK')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            xs={12}\r\n                        >\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Jabatan : {localStorage.getItem('Jabatan')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Alamat : {localStorage.getItem('Alamat')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n\r\n\r\n                            <Popup trigger={<button className=\"btn btn-md bg-green-700 mt-2 \">Ubah Profile</button>}>\r\n                                <ProfileAddModi\r\n                                    rowSelect={rowSelect}\r\n                                    setRowSelect={setRowSelect}\r\n                                />\r\n                            </Popup>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n\r\n\r\n            </Card>\r\n\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-6-lg\">\r\n                    Hi\r\n                </div>\r\n                <div className=\"col-6-lg\">Hi</div>\r\n            </div> */}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport { urlGetVuser } from 'kumpulanUrl';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport counterIcon from '@iconify/icons-mdi/counter';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n// import '../../../../assets_sbmpp_bo/css/bootstrap.css';\r\n// import '../../assets/cssnonlogin/core.css';\r\n// import '../../../../assets_sbmpp_bo/css/components.css';\r\nimport '../../../../assets_sbmpp_bo/css/colors.css';\r\nimport '../../../../assets_sbmpp_bo/css/icons/icomoon/styles.css';\r\n\r\n\r\nconst isClient=typeof window==='object';\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n//const isClient=typeof window==='object';\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nexport default function VisitorUser (props)  {\r\n  const { className, dashboard,\r\n    totalVisitorMobile, totalDailyVisitorMobile, totalUserRegistration,\r\n    totalVisitorWeb, totalDailyVisitorWeb,\r\n    ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(vUsers);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetV=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetV, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVusers(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n  //alert(dashboard.totalVisitorMobile)\r\n  //console.log(dashboard.data.listAccessMenuMobile)\r\n  const classes=useStyles();\r\n\r\n  const [vUsers, setVusers]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [open, setOpen]=React.useState(false);\r\n\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  useEffect(() => {\r\n    getVuser();\r\n  }, [order,orderBy]);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        style={{\r\n          height: windowSize.width<=780? 400:59+\"%\",\r\n\r\n          //width: '100%'\r\n\r\n\r\n        }}\r\n      >\r\n\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: 20+'%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            >\r\n              TOTAL AKSES\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            > <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {\r\n\r\n                totalVisitorMobile? totalVisitorMobile:'0'\r\n                //      dashboard.totalVisitorMobile\r\n              }</b>\r\n              </h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-teal-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n          {\r\n                  totalVisitorWeb? totalVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                }</b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:36+'%'\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              JUMLAH AKSES HARI INI\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {totalDailyVisitorMobile? totalDailyVisitorMobile:'0'//dashboard.totalDailyVisitorMobile\r\n                }</b></h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-pink-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n            {totalDailyVisitorWeb? totalDailyVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                } </b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n          //marginBottom: '0px'\r\n\r\n\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              TOTAL PENDAFTARAN PENGGUNA\r\n          </Grid>\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={12}\r\n              xs={12}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-users4 position-left\"></i> &nbsp;{\r\n                totalUserRegistration? totalUserRegistration:'0'//dashboard.totalUserRegistration\r\n              }\r\n              </b>\r\n              </h3>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nVisitorUser.propTypes={\r\n  className: PropTypes.string\r\n};\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst ProvinsisTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Provinsi ID',\r\n      selector: 'id_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Provinsi',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Provinsi\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Provinsi',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Provinsi\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambahah Provinsi\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Provinsi List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsisTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProvinsisTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddProv, urlEditProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProvinsiAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"nama_provinsi\": rowSelect.nama_provinsi,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    let url=urlAddProv;\r\n    if (rowSelect.id_provinsi===undefined) {\r\n      url=urlAddProv;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditProv;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddProv) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditProv){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title= {rowSelect.id_provinsi === 1 ? \"Edit Provinsi\" : \"Tambah Provinsi\"}\r\n          title={rowSelect.id_provinsi == undefined ? \"Tambah Provinsi\" : \"Ubah Provinsi\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama provinsi\"\r\n                margin=\"dense\"\r\n                name=\"nama_provinsi\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_provinsi')? formState.errors.nama_provinsi[0]:null\r\n                }\r\n\r\n                error={hasError('nama_provinsi')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_provinsi? rowSelect.nama_provinsi:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsiAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProvinsiAddModi;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\nimport PictureAsPdfSharpIcon from '@material-ui/icons/PictureAsPdfSharp';\r\nimport AddIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteSweepOutlined';\r\n// npm install --save-dev @iconify/react @iconify/icons-mdi\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport IconRoom from '@material-ui/icons/Room';\r\n\r\nimport fileExcel from '@iconify/icons-mdi/file-excel';\r\n//import ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n\r\nconst ProvinsisToolbar=props => {\r\n  const { className, handleOpenViewMap, textfind, provinsis, csvData2, csvData, printPdf, deleteProvinsi, ProvinsisTable,\r\n    handleOpen, ...rest }=props;\r\n  //const { className, onChange, style, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n//   <Button\r\n//   color=\"primary\"\r\n//   //variant=\"contained\"\r\n//   style={{ paddingLeft: 0, paddingRight: 0, marginLeft: \"0%\" }}\r\n\r\n//   id=\"Add_Provinsi\"\r\n//   onClick={(e) => handleOpen(e, [], \"Add Provinsi\")}\r\n\r\n// >\r\n//   <AddIcon />\r\n// </Button>\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <span className={classes.spacer} />\r\n\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button color=\"primary\" className={classes.importButton} onClick={(e) => printPdf(e, [])}>\r\n        <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <CSVLink data={csvData()} className={classes.importButton}>\r\n        <img src=\"/img/xls.jpeg\" />\r\n\r\n        </CSVLink>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          //variant=\"contained\"\r\n          style={{ paddingLeft: 0, paddingRight: 0, marginLeft: -4 }}\r\n\r\n          id=\"Lihat_Peta_Povinsi\"\r\n          onClick={(e) => handleOpenViewMap(e, \"Lihat Peta Povinsi\")}\r\n\r\n        >\r\n          <IconRoom />\r\n        </Button>\r\n\r\n\r\n\r\n        &nbsp;\r\n\r\n\r\n\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProvinsisToolbar.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProvinsisToolbar;\r\n","// @flow\r\n\r\nimport hoistNonReactStatics from 'hoist-non-react-statics'\r\nimport React, {\r\n  createContext,\r\n  forwardRef,\r\n  useContext,\r\n  type AbstractComponent,\r\n} from 'react'\r\n\r\nimport type { LeafletContext } from './types'\r\n\r\nconst leafletContext = createContext<LeafletContext>({})\r\n\r\nexport const useLeaflet = (): LeafletContext => useContext(leafletContext)\r\n\r\nexport const LeafletConsumer = leafletContext.Consumer\r\nexport const LeafletProvider = leafletContext.Provider\r\n\r\nexport const withLeaflet = <Config: { leaflet: LeafletContext }, Instance>(\r\n  WrappedComponent: AbstractComponent<Config, Instance>,\r\n): AbstractComponent<$Diff<Config, { leaflet: LeafletContext }>, Instance> => {\r\n  const WithLeafletComponent = (props, ref) => (\r\n    <LeafletConsumer>\r\n      {(leaflet: LeafletContext) => (\r\n        <WrappedComponent {...props} leaflet={leaflet} ref={ref} />\r\n      )}\r\n    </LeafletConsumer>\r\n  )\r\n\r\n  const name = // flowlint-next-line sketchy-null-string:off\r\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\r\n  WithLeafletComponent.displayName = `Leaflet(${name})`\r\n\r\n  const LeafletComponent = forwardRef(WithLeafletComponent)\r\n  hoistNonReactStatics(LeafletComponent, WrappedComponent)\r\n\r\n  return LeafletComponent\r\n}\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\nimport { Component } from 'react'\r\n\r\nimport type { MapControlProps } from './types'\r\n\r\nexport default class MapControl<\r\n  LeafletElement: Control,\r\n  Props: MapControlProps,\r\n> extends Component<Props> {\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(this.props)\r\n  }\r\n\r\n  createLeafletElement(_props: Props): LeafletElement {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props): void {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setPosition(toProps.position)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.leafletElement.addTo(this.props.leaflet.map)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.leafletElement.remove()\r\n  }\r\n\r\n  render(): * {\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement=Control.Attribution\r\ntype Props={\r\n  prefix?: string,\r\n}&MapControlProps\r\n\r\nclass AttributionControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Attribution(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, AttributionControl>(AttributionControl)\r\n","// @flow\r\n\r\nimport type { Evented } from 'leaflet'\r\nimport { Component } from 'react'\r\n\r\nexport const EVENTS_RE = /^on(.+)$/i\r\n\r\ntype EventHandler = (event: Event) => void\r\ntype EventsObject = { [key: string]: EventHandler }\r\n\r\nexport default class MapEvented<\r\n  LeafletElement: Evented,\r\n  Props: Object,\r\n> extends Component<Props> {\r\n  _leafletEvents: EventsObject\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this._leafletEvents = this.extractLeafletEvents(props)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.bindLeafletEvents(this._leafletEvents)\r\n  }\r\n\r\n  componentDidUpdate(_prevProps: Props) {\r\n    this._leafletEvents = this.bindLeafletEvents(\r\n      this.extractLeafletEvents(this.props),\r\n      this._leafletEvents,\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const el = this.leafletElement\r\n    if (!el) return\r\n\r\n    Object.keys(this._leafletEvents).forEach((ev) => {\r\n      el.off(ev, this._leafletEvents[ev])\r\n    })\r\n  }\r\n\r\n  extractLeafletEvents(props: Props): EventsObject {\r\n    return Object.keys(props).reduce((res, prop) => {\r\n      if (EVENTS_RE.test(prop)) {\r\n        if (props[prop] != null) {\r\n          const key = prop.replace(EVENTS_RE, (match, p) => p.toLowerCase())\r\n          res[key] = props[prop]\r\n        }\r\n      }\r\n      return res\r\n    }, {})\r\n  }\r\n\r\n  bindLeafletEvents(\r\n    next: EventsObject = {},\r\n    prev: EventsObject = {},\r\n  ): EventsObject {\r\n    const el = this.leafletElement\r\n    if (el == null || el.on == null) return {}\r\n\r\n    const diff = { ...prev }\r\n    Object.keys(prev).forEach((ev) => {\r\n      if (next[ev] == null || prev[ev] !== next[ev]) {\r\n        delete diff[ev]\r\n        el.off(ev, prev[ev])\r\n      }\r\n    })\r\n\r\n    Object.keys(next).forEach((ev) => {\r\n      if (prev[ev] == null || next[ev] !== prev[ev]) {\r\n        diff[ev] = next[ev]\r\n        el.on(ev, next[ev])\r\n      }\r\n    })\r\n\r\n    return diff\r\n  }\r\n\r\n  fireLeafletEvent(type: string, data: ?any) {\r\n    const el = this.leafletElement\r\n    if (el) el.fire(type, data)\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport MapEvented from './MapEvented'\r\nimport type { MapComponentProps } from './types'\r\n\r\nexport default class MapComponent<\r\n  LeafletElement,\r\n  Props: MapComponentProps,\r\n> extends MapEvented<LeafletElement, Props> {\r\n  getOptions(props: Props): Props {\r\n    if (props.pane != null) {\r\n      return props\r\n    }\r\n    if (props.leaflet != null && props.leaflet.pane != null) {\r\n      return { ...props, pane: props.leaflet.pane }\r\n    }\r\n    return props\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport type { Layer } from 'leaflet'\r\nimport React, { Fragment } from 'react'\r\n\r\nimport { LeafletProvider } from './context'\r\nimport MapComponent from './MapComponent'\r\nimport type { LeafletContext, MapLayerProps } from './types'\r\n\r\nexport default class MapLayer<\r\n  LeafletElement: Layer,\r\n  Props: MapLayerProps,\r\n> extends MapComponent<LeafletElement, Props> {\r\n  contextValue: ?LeafletContext\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  get layerContainer(): Layer {\r\n    return this.props.leaflet.layerContainer || this.props.leaflet.map\r\n  }\r\n\r\n  createLeafletElement(_props: Props): LeafletElement {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(_fromProps: Props, _toProps: Props) {}\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.layerContainer.addLayer(this.leafletElement)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n\r\n    if (this.props.attribution !== prevProps.attribution) {\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map.attributionControl != null) {\r\n        map.attributionControl.removeAttribution(prevProps.attribution)\r\n        map.attributionControl.addAttribution(this.props.attribution)\r\n      }\r\n    }\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n    this.layerContainer.removeLayer(this.leafletElement)\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    if (children == null) {\r\n      return null\r\n    }\r\n    return this.contextValue == null ? (\r\n      <Fragment>{children}</Fragment>\r\n    ) : (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    )\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport type { Path as PathType } from 'leaflet'\r\nimport isEqual from 'fast-deep-equal'\r\n\r\nimport MapLayer from './MapLayer'\r\nimport type { PathOptions, PathProps } from './types'\r\nimport pick from './utils/pick'\r\n\r\nconst OPTIONS = [\r\n  'stroke',\r\n  'color',\r\n  'weight',\r\n  'opacity',\r\n  'lineCap',\r\n  'lineJoin',\r\n  'dashArray',\r\n  'dashOffset',\r\n  'fill',\r\n  'fillColor',\r\n  'fillOpacity',\r\n  'fillRule',\r\n  'bubblingMouseEvents',\r\n  'renderer',\r\n  'className',\r\n  // Interactive Layer\r\n  'interactive',\r\n  // Layer\r\n  'pane',\r\n  'attribution',\r\n]\r\n\r\nexport default class Path<\r\n  LeafletElement: PathType,\r\n  Props: PathProps,\r\n> extends MapLayer<LeafletElement, Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    if (this.contextValue == null) {\r\n      this.contextValue = {\r\n        ...props.leaflet,\r\n        popupContainer: this.leafletElement,\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n    this.setStyleIfChanged(prevProps, this.props)\r\n  }\r\n\r\n  getPathOptions(props: Props): PathOptions {\r\n    return pick(props, OPTIONS)\r\n  }\r\n\r\n  setStyle(options: PathOptions = {}) {\r\n    this.leafletElement.setStyle(options)\r\n  }\r\n\r\n  setStyleIfChanged(fromProps: Props, toProps: Props) {\r\n    const nextStyle = this.getPathOptions(toProps)\r\n    if (!isEqual(nextStyle, this.getPathOptions(fromProps))) {\r\n      this.setStyle(nextStyle)\r\n    }\r\n  }\r\n}\r\n","// @flow\r\n\r\nexport default function pick(object: Object, keys: Array<string>): Object {\r\n  return keys.reduce((obj, key) => {\r\n    if (typeof object[key] !== 'undefined') {\r\n      obj[key] = object[key]\r\n    }\r\n    return obj\r\n  }, {})\r\n}\r\n","// @flow\r\n\r\nimport { DomUtil } from 'leaflet'\r\n\r\nconst splitClassName = (className: string = ''): Array<string> => {\r\n  return className.split(' ').filter(Boolean)\r\n}\r\n\r\nexport const addClassName = (container: HTMLElement, className: string) => {\r\n  splitClassName(className).forEach((cls) => {\r\n    DomUtil.addClass(container, cls)\r\n  })\r\n}\r\n\r\nexport const removeClassName = (container: HTMLElement, className: string) => {\r\n  splitClassName(className).forEach((cls) => {\r\n    DomUtil.removeClass(container, cls)\r\n  })\r\n}\r\n\r\nexport default (\r\n  container: ?HTMLElement,\r\n  prevClassName: ?string,\r\n  nextClassName: ?string,\r\n) => {\r\n  if (container != null && nextClassName !== prevClassName) {\r\n    if (prevClassName != null && prevClassName.length > 0) {\r\n      removeClassName(container, prevClassName)\r\n    }\r\n    if (nextClassName != null && nextClassName.length > 0) {\r\n      addClassName(container, nextClassName)\r\n    }\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { Circle as LeafletCircle } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, MapLayerProps, PathOptions } from './types'\r\n\r\ntype LeafletElement = LeafletCircle\r\ntype Props = {\r\n  center: LatLng,\r\n  radius: number,\r\n} & MapLayerProps &\r\n  PathOptions &\r\n  Object\r\n\r\nclass Circle extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { center, radius, ...options } = props\r\n    return new LeafletCircle(center, radius, this.getOptions(options))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.center !== fromProps.center) {\r\n      this.leafletElement.setLatLng(toProps.center)\r\n    }\r\n    if (toProps.radius !== fromProps.radius) {\r\n      this.leafletElement.setRadius(toProps.radius)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Circle>(Circle)\r\n","// @flow\r\n\r\nimport { CircleMarker as LeafletCircleMarker } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletCircleMarker\r\ntype Props = {\r\n  center: LatLng,\r\n  radius: number,\r\n} & PathProps\r\n\r\nclass CircleMarker extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletCircleMarker(props.center, this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.center !== fromProps.center) {\r\n      this.leafletElement.setLatLng(toProps.center)\r\n    }\r\n    if (toProps.radius !== fromProps.radius) {\r\n      this.leafletElement.setRadius(toProps.radius)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, CircleMarker>(CircleMarker)\r\n","// @flow\r\n\r\nimport { createPortal } from 'react-dom'\r\n\r\nimport MapComponent from './MapComponent'\r\nimport updateClassName from './utils/updateClassName'\r\nimport type { DivOverlayProps } from './types'\r\n\r\ntype DivOverlayTypes = {\r\n  _container: HTMLDivElement,\r\n  _contentNode: HTMLDivElement,\r\n  isOpen: () => boolean,\r\n  update: () => void,\r\n}\r\n\r\nexport default class DivOverlay<\r\n  LeafletElement,\r\n  Props: DivOverlayProps,\r\n> extends MapComponent<LeafletElement & DivOverlayTypes, Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  createLeafletElement(_props: Props) {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(_prevProps: Props, _props: Props) {}\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    updateClassName(\r\n      this.leafletElement._container,\r\n      prevProps.className,\r\n      this.props.className,\r\n    )\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n\r\n    if (this.leafletElement.isOpen()) {\r\n      this.leafletElement.update()\r\n      this.onRender()\r\n    }\r\n  }\r\n\r\n  onClose = () => {\r\n    if (this.props.onClose) {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  onOpen = () => {\r\n    this.forceUpdate() // Re-render now that leafletElement is created\r\n    if (this.props.onOpen) {\r\n      this.props.onOpen()\r\n    }\r\n  }\r\n\r\n  onRender() {}\r\n\r\n  render() {\r\n    if (this.leafletElement._contentNode) {\r\n      return createPortal(this.props.children, this.leafletElement._contentNode)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { GridLayer as LeafletGridLayer } from 'leaflet'\r\n\r\nimport MapLayer from './MapLayer'\r\nimport type { GridLayerProps } from './types'\r\n\r\nexport default class GridLayer<\r\n  LeafletElement: LeafletGridLayer,\r\n  Props: GridLayerProps,\r\n> extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletGridLayer(this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    const { opacity, zIndex } = toProps\r\n    if (opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(opacity)\r\n    }\r\n    if (zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(zIndex)\r\n    }\r\n  }\r\n\r\n  getOptions(props: Props): Props {\r\n    const options = { ...super.getOptions(props) }\r\n    const { map } = props.leaflet\r\n    if (map != null) {\r\n      // $FlowFixMe: Object spread\r\n      if (options.maxZoom == null && map.options.maxZoom != null) {\r\n        // $FlowFixMe: Object spread\r\n        options.maxZoom = map.options.maxZoom\r\n      }\r\n      // $FlowFixMe: Object spread\r\n      if (options.minZoom == null && map.options.minZoom != null) {\r\n        // $FlowFixMe: Object spread\r\n        options.minZoom = map.options.minZoom\r\n      }\r\n    }\r\n    return options\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletFeatureGroup\r\ntype Props = PathProps\r\n\r\nclass FeatureGroup extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletFeatureGroup(this.getOptions(props))\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: el,\r\n      popupContainer: el,\r\n    }\r\n    return el\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.setStyle(this.props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, FeatureGroup>(FeatureGroup)\r\n","// @flow\r\n\r\nimport { GeoJSON as LeafletGeoJSON, type LatLng, type Layer } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletGeoJSON\r\n\r\ntype GeoJSONdata = Object | Array<any>\r\n\r\ntype Props = {\r\n  data: GeoJSONdata,\r\n  pointToLayer?: (point: GeoJSONdata, latlng: LatLng) => Layer,\r\n  style?: (feature: GeoJSONdata) => Object,\r\n  onEachFeature?: (feature: GeoJSONdata, layer: Layer) => void,\r\n  filter?: (feature: GeoJSONdata) => boolean,\r\n  coordsToLatLng?: (coords: GeoJSONdata) => LatLng,\r\n  markersInheritOptions?: boolean,\r\n} & PathProps\r\n\r\nclass GeoJSON extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletGeoJSON(props.data, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (typeof toProps.style === 'function') {\r\n      this.leafletElement.setStyle(toProps.style)\r\n    } else {\r\n      this.setStyleIfChanged(fromProps, toProps)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, GeoJSON>(GeoJSON)\r\n","// @flow\r\n\r\nimport { Control, type Layer } from 'leaflet'\r\nimport React, {\r\n  cloneElement,\r\n  Component,\r\n  Children,\r\n  Fragment,\r\n  type ChildrenArray,\r\n  type Element,\r\n} from 'react'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type {\r\n  AddLayerHandler,\r\n  RemoveLayerHandler,\r\n  LeafletContext,\r\n  MapControlProps,\r\n} from './types'\r\n\r\ntype ControlledLayerProps = {\r\n  addBaseLayer: AddLayerHandler,\r\n  addOverlay: AddLayerHandler,\r\n  checked?: boolean,\r\n  children: Element<*>,\r\n  leaflet: LeafletContext,\r\n  name: string,\r\n  removeLayer: RemoveLayerHandler,\r\n  removeLayerControl: RemoveLayerHandler,\r\n}\r\n\r\n// Abtract class for layer container, extended by BaseLayer and Overlay\r\nexport class ControlledLayer extends Component<ControlledLayerProps> {\r\n  contextValue: LeafletContext\r\n  layer: ?Layer\r\n\r\n  componentDidUpdate({ checked }: ControlledLayerProps) {\r\n    if (this.props.leaflet.map == null) {\r\n      return\r\n    }\r\n    // Handle dynamically (un)checking the layer => adding/removing from the map\r\n    if (this.props.checked === true && (checked == null || checked === false)) {\r\n      this.props.leaflet.map.addLayer(this.layer)\r\n    } else if (\r\n      checked === true &&\r\n      (this.props.checked == null || this.props.checked === false)\r\n    ) {\r\n      this.props.leaflet.map.removeLayer(this.layer)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeLayerControl(this.layer)\r\n  }\r\n\r\n  addLayer() {\r\n    throw new Error('Must be implemented in extending class')\r\n  }\r\n\r\n  removeLayer(layer: Layer) {\r\n    this.props.removeLayer(layer)\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return children ? (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    ) : null\r\n  }\r\n}\r\n\r\nclass BaseLayer extends ControlledLayer {\r\n  constructor(props: ControlledLayerProps) {\r\n    super(props)\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: {\r\n        addLayer: this.addLayer.bind(this),\r\n        removeLayer: this.removeLayer.bind(this),\r\n      },\r\n    }\r\n  }\r\n\r\n  addLayer = (layer: Layer) => {\r\n    this.layer = layer // Keep layer reference to handle dynamic changes of props\r\n    const { addBaseLayer, checked, name } = this.props\r\n    addBaseLayer(layer, name, checked)\r\n  }\r\n}\r\n\r\nclass Overlay extends ControlledLayer {\r\n  constructor(props: ControlledLayerProps) {\r\n    super(props)\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: {\r\n        addLayer: this.addLayer.bind(this),\r\n        removeLayer: this.removeLayer.bind(this),\r\n      },\r\n    }\r\n  }\r\n\r\n  addLayer = (layer: Layer) => {\r\n    this.layer = layer // Keep layer reference to handle dynamic changes of props\r\n    const { addOverlay, checked, name } = this.props\r\n    addOverlay(layer, name, checked)\r\n  }\r\n}\r\n\r\ntype LeafletElement = Control.Layers\r\ntype LayersControlProps = {\r\n  children: ChildrenArray<*>,\r\n  collapsed?: boolean,\r\n} & MapControlProps\r\n\r\nclass LayersControl extends MapControl<LeafletElement, LayersControlProps> {\r\n  controlProps: {\r\n    addBaseLayer: AddLayerHandler,\r\n    addOverlay: AddLayerHandler,\r\n    removeLayer: RemoveLayerHandler,\r\n    removeLayerControl: RemoveLayerHandler,\r\n  }\r\n\r\n  constructor(props: LayersControlProps) {\r\n    super(props)\r\n    this.controlProps = {\r\n      addBaseLayer: this.addBaseLayer.bind(this),\r\n      addOverlay: this.addOverlay.bind(this),\r\n      leaflet: props.leaflet,\r\n      removeLayer: this.removeLayer.bind(this),\r\n      removeLayerControl: this.removeLayerControl.bind(this),\r\n    }\r\n  }\r\n\r\n  createLeafletElement(props: LayersControlProps): LeafletElement {\r\n    const { children: _children, ...options } = props\r\n    return new Control.Layers(undefined, undefined, options)\r\n  }\r\n\r\n  updateLeafletElement(\r\n    fromProps: LayersControlProps,\r\n    toProps: LayersControlProps,\r\n  ) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n    if (toProps.collapsed !== fromProps.collapsed) {\r\n      if (toProps.collapsed === true) {\r\n        this.leafletElement.collapse()\r\n      } else {\r\n        this.leafletElement.expand()\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    setTimeout(() => {\r\n      super.componentWillUnmount()\r\n    }, 0)\r\n  }\r\n\r\n  addBaseLayer(layer: Layer, name: string, checked: boolean = false) {\r\n    if (checked && this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.addLayer(layer)\r\n    }\r\n    this.leafletElement.addBaseLayer(layer, name)\r\n  }\r\n\r\n  addOverlay(layer: Layer, name: string, checked: boolean = false) {\r\n    if (checked && this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.addLayer(layer)\r\n    }\r\n    this.leafletElement.addOverlay(layer, name)\r\n  }\r\n\r\n  removeLayer(layer: Layer) {\r\n    if (this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.removeLayer(layer)\r\n    }\r\n  }\r\n\r\n  removeLayerControl(layer: Layer) {\r\n    this.leafletElement.removeLayer(layer)\r\n  }\r\n\r\n  render() {\r\n    const children = Children.map(this.props.children, (child) => {\r\n      return child ? cloneElement(child, this.controlProps) : null\r\n    })\r\n    return <Fragment>{children}</Fragment>\r\n  }\r\n}\r\n\r\nconst LayersControlExport: Object = withLeaflet(LayersControl)\r\n\r\nLayersControlExport.BaseLayer = BaseLayer\r\nLayersControlExport.Overlay = Overlay\r\n\r\nexport default LayersControlExport\r\n","// @flow\r\n\r\nimport { ImageOverlay as LeafletImageOverlay, latLngBounds } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLngBounds, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletImageOverlay\r\ntype Props = {\r\n  attribution?: string,\r\n  bounds?: LatLngBounds,\r\n  opacity?: number,\r\n  url: string | HTMLImageElement,\r\n  zIndex?: number,\r\n} & MapLayerProps\r\n\r\nclass ImageOverlay extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletImageOverlay(\r\n      props.url,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ImageOverlay>(ImageOverlay)\r\n","// @flow\r\n\r\nimport { LayerGroup as LeafletLayerGroup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletLayerGroup\r\ntype Props = MapLayerProps\r\n\r\nclass LayerGroup extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletLayerGroup([], this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, layerContainer: el }\r\n    return el\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, LayerGroup>(LayerGroup)\r\n","// @flow\r\n\r\nexport default function omit(\r\n  obj: Object,\r\n  ...keysToOmit: Array<string>\r\n): Object {\r\n  return Object.keys(obj).reduce((acc, key) => {\r\n    if (keysToOmit.indexOf(key) === -1) {\r\n      acc[key] = obj[key]\r\n    }\r\n    return acc\r\n  }, {})\r\n}\r\n","// @flow\r\n\r\nimport { type Icon, Marker as LeafletMarker } from 'leaflet'\r\nimport React from 'react'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLng, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletMarker\r\ntype Props = {\r\n  icon?: Icon,\r\n  draggable?: boolean,\r\n  opacity?: number,\r\n  position: LatLng,\r\n  zIndexOffset?: number,\r\n} & MapLayerProps\r\n\r\nclass Marker extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletMarker(props.position, this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setLatLng(toProps.position)\r\n    }\r\n    if (toProps.icon !== fromProps.icon) {\r\n      this.leafletElement.setIcon(toProps.icon)\r\n    }\r\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\r\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset)\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.draggable !== fromProps.draggable) {\r\n      if (toProps.draggable === true) {\r\n        this.leafletElement.dragging.enable()\r\n      } else {\r\n        this.leafletElement.dragging.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return children == null || this.contextValue == null ? null : (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Marker>(Marker)\r\n","// @flow\r\n\r\nimport {\r\n  latLngBounds,\r\n  Map as LeafletMap,\r\n  type CRS,\r\n  type Renderer,\r\n} from 'leaflet'\r\nimport React, { type Node } from 'react'\r\n\r\nimport { LeafletProvider } from './context'\r\nimport MapEvented from './MapEvented'\r\nimport updateClassName from './utils/updateClassName'\r\nimport omit from './utils/omit'\r\nimport type {\r\n  LatLng,\r\n  LatLngBounds,\r\n  LeafletContext,\r\n  Point,\r\n  Viewport,\r\n} from './types'\r\n\r\nconst OTHER_PROPS = [\r\n  'children',\r\n  'className',\r\n  'id',\r\n  'style',\r\n  'useFlyTo',\r\n  'whenReady',\r\n]\r\n\r\nconst normalizeCenter = (pos: LatLng): [number, number] => {\r\n  return Array.isArray(pos)\r\n    ? [pos[0], pos[1]]\r\n    : [pos.lat, pos.lon ? pos.lon : pos.lng]\r\n}\r\n\r\ntype LeafletElement = LeafletMap\r\n\r\ntype ZoomOption = boolean | 'center'\r\ntype Props = {\r\n  [key: string]: any,\r\n  // Leaflet options\r\n  preferCanvas?: boolean,\r\n  attributionControl?: boolean,\r\n  zoomControl?: boolean,\r\n  closePopupOnClick?: boolean,\r\n  zoomSnap?: number,\r\n  zoomDelta?: number,\r\n  trackResize?: boolean,\r\n  boxZoom?: boolean,\r\n  doubleClickZoom?: ZoomOption,\r\n  dragging?: boolean,\r\n  crs?: CRS,\r\n  center?: LatLng,\r\n  zoom?: number,\r\n  minZoom?: number,\r\n  maxZoom?: number,\r\n  maxBounds?: LatLngBounds,\r\n  renderer?: Renderer,\r\n  zoomAnimation?: boolean,\r\n  zoomAnimationThreshold?: number,\r\n  fadeAnimation?: boolean,\r\n  markerZoomAnimation?: boolean,\r\n  transform3DLimit?: number,\r\n  inertia?: boolean,\r\n  inertiaDeceleration?: number,\r\n  inertiaMaxSpeed?: number,\r\n  easeLinearity?: number,\r\n  worldCopyJump?: boolean,\r\n  maxBoundsViscosity?: number,\r\n  keyboard?: boolean,\r\n  keyboardPanDelta?: number,\r\n  scrollWheelZoom?: ZoomOption,\r\n  wheelDebounceTime?: number,\r\n  wheelPxPerZoomLevel?: number,\r\n  tap?: boolean,\r\n  tapTolerance?: number,\r\n  touchZoom?: ZoomOption,\r\n  bounceAtZoomLimits?: boolean,\r\n  // Additional options\r\n  animate?: boolean,\r\n  duration?: number,\r\n  noMoveStart?: boolean,\r\n  bounds?: LatLngBounds,\r\n  boundsOptions?: {|\r\n    paddingTopLeft?: Point,\r\n    paddingBottomRight?: Point,\r\n    padding?: Point,\r\n    maxZoom?: number,\r\n  |},\r\n  children: Node,\r\n  className?: string,\r\n  id?: string,\r\n  style?: Object,\r\n  useFlyTo?: boolean,\r\n  viewport?: Viewport,\r\n  whenReady?: () => void,\r\n}\r\n\r\nexport default class Map extends MapEvented<LeafletElement, Props> {\r\n  className: ?string\r\n  contextValue: ?LeafletContext\r\n  container: ?HTMLDivElement\r\n  viewport: Viewport = {\r\n    center: undefined,\r\n    zoom: undefined,\r\n  }\r\n\r\n  _ready: boolean = false\r\n  _updating: boolean = false\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.className = props.className\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { viewport, ...options } = props\r\n    if (viewport) {\r\n      if (viewport.center) {\r\n        options.center = viewport.center\r\n      }\r\n      if (typeof viewport.zoom === 'number') {\r\n        options.zoom = viewport.zoom\r\n      }\r\n    }\r\n    return new LeafletMap(this.container, options)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    this._updating = true\r\n\r\n    const {\r\n      bounds,\r\n      boundsOptions,\r\n      boxZoom,\r\n      center,\r\n      className,\r\n      doubleClickZoom,\r\n      dragging,\r\n      keyboard,\r\n      maxBounds,\r\n      scrollWheelZoom,\r\n      tap,\r\n      touchZoom,\r\n      useFlyTo,\r\n      viewport,\r\n      zoom,\r\n    } = toProps\r\n\r\n    updateClassName(this.container, fromProps.className, className)\r\n\r\n    if (viewport && viewport !== fromProps.viewport) {\r\n      const c = viewport.center ? viewport.center : center\r\n      const z = viewport.zoom == null ? zoom : viewport.zoom\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyTo(c, z, this.getZoomPanOptions(toProps))\r\n      } else {\r\n        this.leafletElement.setView(c, z, this.getZoomPanOptions(toProps))\r\n      }\r\n    } else if (center && this.shouldUpdateCenter(center, fromProps.center)) {\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyTo(center, zoom, this.getZoomPanOptions(toProps))\r\n      } else {\r\n        this.leafletElement.setView(\r\n          center,\r\n          zoom,\r\n          this.getZoomPanOptions(toProps),\r\n        )\r\n      }\r\n    } else if (typeof zoom === 'number' && zoom !== fromProps.zoom) {\r\n      if (fromProps.zoom == null) {\r\n        this.leafletElement.setView(\r\n          center,\r\n          zoom,\r\n          this.getZoomPanOptions(toProps),\r\n        )\r\n      } else {\r\n        this.leafletElement.setZoom(zoom, this.getZoomPanOptions(toProps))\r\n      }\r\n    }\r\n\r\n    if (maxBounds && this.shouldUpdateBounds(maxBounds, fromProps.maxBounds)) {\r\n      this.leafletElement.setMaxBounds(maxBounds)\r\n    }\r\n\r\n    if (\r\n      bounds &&\r\n      (this.shouldUpdateBounds(bounds, fromProps.bounds) ||\r\n        boundsOptions !== fromProps.boundsOptions)\r\n    ) {\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyToBounds(\r\n          bounds,\r\n          this.getFitBoundsOptions(toProps),\r\n        )\r\n      } else {\r\n        this.leafletElement.fitBounds(bounds, this.getFitBoundsOptions(toProps))\r\n      }\r\n    }\r\n\r\n    if (boxZoom !== fromProps.boxZoom) {\r\n      if (boxZoom === true) {\r\n        this.leafletElement.boxZoom.enable()\r\n      } else {\r\n        this.leafletElement.boxZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (doubleClickZoom !== fromProps.doubleClickZoom) {\r\n      if (doubleClickZoom === true || typeof doubleClickZoom === 'string') {\r\n        this.leafletElement.options.doubleClickZoom = doubleClickZoom\r\n        this.leafletElement.doubleClickZoom.enable()\r\n      } else {\r\n        this.leafletElement.doubleClickZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (dragging !== fromProps.dragging) {\r\n      if (dragging === true) {\r\n        this.leafletElement.dragging.enable()\r\n      } else {\r\n        this.leafletElement.dragging.disable()\r\n      }\r\n    }\r\n\r\n    if (keyboard !== fromProps.keyboard) {\r\n      if (keyboard === true) {\r\n        this.leafletElement.keyboard.enable()\r\n      } else {\r\n        this.leafletElement.keyboard.disable()\r\n      }\r\n    }\r\n\r\n    if (scrollWheelZoom !== fromProps.scrollWheelZoom) {\r\n      if (scrollWheelZoom === true || typeof scrollWheelZoom === 'string') {\r\n        this.leafletElement.options.scrollWheelZoom = scrollWheelZoom\r\n        this.leafletElement.scrollWheelZoom.enable()\r\n      } else {\r\n        this.leafletElement.scrollWheelZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (tap !== fromProps.tap) {\r\n      if (tap === true) {\r\n        this.leafletElement.tap.enable()\r\n      } else {\r\n        this.leafletElement.tap.disable()\r\n      }\r\n    }\r\n\r\n    if (touchZoom !== fromProps.touchZoom) {\r\n      if (touchZoom === true || typeof touchZoom === 'string') {\r\n        this.leafletElement.options.touchZoom = touchZoom\r\n        this.leafletElement.touchZoom.enable()\r\n      } else {\r\n        this.leafletElement.touchZoom.disable()\r\n      }\r\n    }\r\n\r\n    this._updating = false\r\n  }\r\n\r\n  getZoomPanOptions(props: Props) {\r\n    const { animate, duration, easeLinearity, noMoveStart } = props\r\n    return {\r\n      animate,\r\n      duration,\r\n      easeLinearity,\r\n      noMoveStart,\r\n    }\r\n  }\r\n\r\n  getFitBoundsOptions(props: Props) {\r\n    const zoomPanOptions = this.getZoomPanOptions(props)\r\n    return {\r\n      ...zoomPanOptions,\r\n      ...props.boundsOptions,\r\n    }\r\n  }\r\n\r\n  onViewportChange = () => {\r\n    const center = this.leafletElement.getCenter()\r\n    this.viewport = {\r\n      center: center ? [center.lat, center.lng] : undefined,\r\n      zoom: this.leafletElement.getZoom(),\r\n    }\r\n    if (this.props.onViewportChange && !this._updating) {\r\n      this.props.onViewportChange(this.viewport)\r\n    }\r\n  }\r\n\r\n  onViewportChanged = () => {\r\n    if (this.props.onViewportChanged && !this._updating) {\r\n      this.props.onViewportChanged(this.viewport)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const props = omit(this.props, ...OTHER_PROPS)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n\r\n    this.leafletElement.on('move', this.onViewportChange)\r\n    this.leafletElement.on('moveend', this.onViewportChanged)\r\n\r\n    if (props.bounds != null) {\r\n      this.leafletElement.fitBounds(\r\n        props.bounds,\r\n        this.getFitBoundsOptions(props),\r\n      )\r\n    }\r\n\r\n    this.contextValue = {\r\n      layerContainer: this.leafletElement,\r\n      map: this.leafletElement,\r\n    }\r\n\r\n    super.componentDidMount()\r\n    this.forceUpdate() // Re-render now that leafletElement is created\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this._ready === false) {\r\n      this._ready = true\r\n      if (this.props.whenReady) {\r\n        this.leafletElement.whenReady(this.props.whenReady)\r\n      }\r\n    }\r\n\r\n    super.componentDidUpdate(prevProps)\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n\r\n    this.leafletElement.off('move', this.onViewportChange)\r\n    this.leafletElement.off('moveend', this.onViewportChanged)\r\n\r\n    // The canvas renderer uses requestAnimationFrame, making a deferred call to a deleted object\r\n    // When preferCanvas is set, use simpler teardown logic\r\n    if (this.props.preferCanvas === true) {\r\n      this.leafletElement._initEvents(true)\r\n      this.leafletElement._stop()\r\n    } else {\r\n      this.leafletElement.remove()\r\n    }\r\n  }\r\n\r\n  bindContainer = (container: ?HTMLDivElement): void => {\r\n    this.container = container\r\n  }\r\n\r\n  shouldUpdateCenter(next: LatLng, prev: LatLng) {\r\n    if (!prev) return true\r\n    next = normalizeCenter(next)\r\n    prev = normalizeCenter(prev)\r\n    return next[0] !== prev[0] || next[1] !== prev[1]\r\n  }\r\n\r\n  shouldUpdateBounds(next: LatLngBounds, prev: LatLngBounds) {\r\n    return prev ? !latLngBounds(next).equals(latLngBounds(prev)) : true\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.className}\r\n        id={this.props.id}\r\n        ref={this.bindContainer}\r\n        style={this.props.style}>\r\n        {this.contextValue ? (\r\n          <LeafletProvider value={this.contextValue}>\r\n            {this.props.children}\r\n          </LeafletProvider>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// @flow\r\n// flowlint sketchy-null-string:off\r\n\r\nimport React, { Component, type Node } from 'react'\r\nimport warning from 'warning'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport type { LeafletContext } from './types'\r\nimport { addClassName, removeClassName } from './utils/updateClassName'\r\nimport omit from './utils/omit'\r\n\r\nlet idCounter = 0\r\nconst uniqueId = () => ++idCounter\r\n\r\nconst LEAFLET_PANES = [\r\n  'tile',\r\n  'shadow',\r\n  'overlay',\r\n  'map',\r\n  'marker',\r\n  'tooltip',\r\n  'popup',\r\n]\r\n\r\nconst PANE_RE = /-*pane/gi\r\n\r\nconst isLeafletPane = (name: string): boolean => {\r\n  return LEAFLET_PANES.indexOf(name.replace(PANE_RE, '')) !== -1\r\n}\r\n\r\nconst paneStyles = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  left: 0,\r\n}\r\n\r\ntype Props = {\r\n  children: Node,\r\n  className?: string,\r\n  leaflet: LeafletContext,\r\n  name?: string,\r\n  pane?: string,\r\n  style?: Object,\r\n}\r\n\r\ntype State = {\r\n  name: ?string,\r\n  context: ?LeafletContext,\r\n}\r\n\r\nclass Pane extends Component<Props, State> {\r\n  state = {\r\n    name: undefined,\r\n    context: undefined,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createPane(this.props)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (!this.state.name) {\r\n      // Do nothing if this.state.name is undefined due to errors or\r\n      // an invalid props.name value\r\n      return\r\n    }\r\n\r\n    // If the 'name' prop has changed the current pane is unmounted and a new\r\n    // pane is created.\r\n    if (this.props.name !== prevProps.name) {\r\n      this.removePane()\r\n      this.createPane(this.props)\r\n    } else {\r\n      // Remove the previous css class name from the pane if it has changed.\r\n      // setStyle() will take care of adding in the updated className\r\n      if (prevProps.className && this.props.className !== prevProps.className) {\r\n        const pane = this.getPane(this.state.name)\r\n        if (pane != null && prevProps.className != null) {\r\n          removeClassName(pane, prevProps.className)\r\n        }\r\n      }\r\n\r\n      // Update the pane's DOM node style and class\r\n      this.setStyle(this.props)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removePane()\r\n  }\r\n\r\n  createPane(props: Props) {\r\n    const { map } = props.leaflet\r\n    const name = props.name || `pane-${uniqueId()}`\r\n\r\n    if (map != null && map.createPane != null) {\r\n      const isDefault = isLeafletPane(name)\r\n      const existing = isDefault || this.getPane(name)\r\n\r\n      if (existing == null) {\r\n        map.createPane(name, this.getParentPane())\r\n      } else {\r\n        const message = isDefault\r\n          ? `You must use a unique name for a pane that is not a default leaflet pane (${name})`\r\n          : `A pane with this name already exists. (${name})`\r\n        warning(false, message)\r\n      }\r\n\r\n      this.setState(\r\n        { name, context: { ...props.leaflet, pane: name } },\r\n        this.setStyle,\r\n      )\r\n    }\r\n  }\r\n\r\n  removePane() {\r\n    // Remove the created pane\r\n    const { name } = this.state\r\n    if (name != null) {\r\n      const pane = this.getPane(name)\r\n      if (pane != null && pane.remove) pane.remove()\r\n\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map._panes != null) {\r\n        map._panes = omit(map._panes, name)\r\n        map._paneRenderers = omit(map._paneRenderers, name)\r\n      }\r\n    }\r\n  }\r\n\r\n  setStyle = ({ style, className }: Props = this.props) => {\r\n    const pane = this.getPane(this.state.name)\r\n    if (pane) {\r\n      if (className) {\r\n        addClassName(pane, className)\r\n      }\r\n      if (style) {\r\n        // Without the cast, Flow throws this error:\r\n        //   Cannot assign style[key] to pane.style[key] because string\r\n        //   is incompatible with number.\r\n        Object.keys(style).forEach((key: any) => {\r\n          pane.style[key] = style[key]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  getParentPane(): ?HTMLElement {\r\n    return this.getPane(this.props.pane || this.props.leaflet.pane)\r\n  }\r\n\r\n  getPane(name: ?string): ?HTMLElement {\r\n    if (name != null && this.props.leaflet.map != null) {\r\n      return this.props.leaflet.map.getPane(name)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { context } = this.state\r\n    return context ? (\r\n      <LeafletProvider value={context}>\r\n        <div style={paneStyles}>{this.props.children}</div>\r\n      </LeafletProvider>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Pane>(Pane)\r\n","// @flow\r\n\r\nimport { Popup as LeafletPopup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport DivOverlay from './DivOverlay'\r\nimport type { LatLng, DivOverlayProps } from './types'\r\n\r\ntype LeafletElement = LeafletPopup\r\ntype Props = {\r\n  autoPan?: boolean,\r\n  position?: LatLng,\r\n} & DivOverlayProps\r\n\r\nclass Popup extends DivOverlay<LeafletElement, Props> {\r\n  static defaultProps = {\r\n    pane: 'popupPane',\r\n  }\r\n\r\n  getOptions(props: Props): Props {\r\n    return {\r\n      ...super.getOptions(props),\r\n      autoPan: false,\r\n    }\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const options = this.getOptions(props)\r\n    options.autoPan = props.autoPan !== false\r\n    return new LeafletPopup(options, props.leaflet.popupContainer)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setLatLng(toProps.position)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { position } = this.props\r\n    const { map, popupContainer } = this.props.leaflet\r\n    const el = this.leafletElement\r\n\r\n    if (map != null) {\r\n      map.on({\r\n        popupopen: this.onPopupOpen,\r\n        popupclose: this.onPopupClose,\r\n      })\r\n    }\r\n\r\n    if (popupContainer) {\r\n      // Attach to container component\r\n      popupContainer.bindPopup(el)\r\n    } else {\r\n      // Attach to a Map\r\n      if (position) {\r\n        el.setLatLng(position)\r\n      }\r\n      el.openOn(map)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { map } = this.props.leaflet\r\n\r\n    if (map != null) {\r\n      map.off({\r\n        popupopen: this.onPopupOpen,\r\n        popupclose: this.onPopupClose,\r\n      })\r\n      map.removeLayer(this.leafletElement)\r\n    }\r\n\r\n    super.componentWillUnmount()\r\n  }\r\n\r\n  onPopupOpen = ({ popup }: { popup: LeafletElement }) => {\r\n    if (popup === this.leafletElement) {\r\n      this.onOpen()\r\n    }\r\n  }\r\n\r\n  onPopupClose = ({ popup }: { popup: LeafletElement }) => {\r\n    if (popup === this.leafletElement) {\r\n      this.onClose()\r\n    }\r\n  }\r\n\r\n  onRender = () => {\r\n    if (this.props.autoPan !== false && this.leafletElement.isOpen()) {\r\n      if (this.leafletElement._map && this.leafletElement._map._panAnim) {\r\n        this.leafletElement._map._panAnim = undefined\r\n      }\r\n      this.leafletElement._adjustPan()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Popup>(Popup)\r\n","// @flow\r\n\r\nimport { Polygon as LeafletPolygon } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletPolygon\r\ntype Props = {\r\n  positions: LatLng[] | LatLng[][] | LatLng[][][],\r\n} & PathProps\r\n\r\nclass Polygon extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletPolygon(props.positions, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.positions !== fromProps.positions) {\r\n      this.leafletElement.setLatLngs(toProps.positions)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Polygon>(Polygon)\r\n","// @flow\r\n\r\nimport { Polyline as LeafletPolyline } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletPolyline\r\ntype Props = {\r\n  positions: LatLng[] | LatLng[][],\r\n} & PathProps\r\n\r\nclass Polyline extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletPolyline(props.positions, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.positions !== fromProps.positions) {\r\n      this.leafletElement.setLatLngs(toProps.positions)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Polyline>(Polyline)\r\n","// @flow\r\n\r\nimport { Rectangle as LeafletRectangle } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLngBounds, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletRectangle\r\ntype Props = { bounds: LatLngBounds } & PathProps\r\n\r\nclass Rectangle extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletRectangle(props.bounds, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(toProps.bounds)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Rectangle>(Rectangle)\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement = Control.Scale\r\ntype Props = {\r\n  imperial?: boolean,\r\n  maxWidth?: number,\r\n  metric?: boolean,\r\n  updateWhenIdle?: boolean,\r\n} & MapControlProps\r\n\r\nclass ScaleControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Scale(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ScaleControl>(ScaleControl)\r\n","// @flow\r\n\r\nimport { Layer, SVGOverlay as LeafletSVGOverlay } from 'leaflet'\r\nimport { createPortal } from 'react-dom'\r\n\r\nimport type { SVGOverlayProps } from './types'\r\nimport { withLeaflet } from './context'\r\nimport MapComponent from './MapComponent'\r\n\r\ntype LeafletElement = LeafletSVGOverlay\r\ntype Props = SVGOverlayProps\r\n\r\nfunction setAttribute(el: Element, name: string, value: ?string): void {\r\n  if (value != null) {\r\n    el.setAttribute(name, value)\r\n  } else {\r\n    el.removeAttribute(name)\r\n  }\r\n}\r\n\r\nclass SVGOverlay extends MapComponent<LeafletElement, Props> {\r\n  leafletElement: LeafletElement\r\n  container: ?Element\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  get layerContainer(): Layer {\r\n    return this.props.leaflet.layerContainer || this.props.leaflet.map\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const container = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'svg',\r\n    )\r\n    setAttribute(container, 'xmlns', 'http://www.w3.org/2000/svg')\r\n    setAttribute(container, 'preserveAspectRatio', props.preserveAspectRatio)\r\n    setAttribute(container, 'viewBox', props.viewBox)\r\n\r\n    this.container = container\r\n    return new LeafletSVGOverlay(\r\n      container,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(toProps.bounds)\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (\r\n      this.container &&\r\n      toProps.preserveAspectRatio !== fromProps.preserveAspectRatio\r\n    ) {\r\n      setAttribute(\r\n        this.container,\r\n        'preserveAspectRatio',\r\n        toProps.preserveAspectRatio,\r\n      )\r\n    }\r\n    if (this.container && toProps.viewBox !== fromProps.viewBox) {\r\n      setAttribute(this.container, 'viewBox', toProps.viewBox)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.layerContainer.addLayer(this.leafletElement)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n\r\n    if (this.props.attribution !== prevProps.attribution) {\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map.attributionControl != null) {\r\n        map.attributionControl.removeAttribution(prevProps.attribution)\r\n        map.attributionControl.addAttribution(this.props.attribution)\r\n      }\r\n    }\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n    this.layerContainer.removeLayer(this.leafletElement)\r\n    this.container = null\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    if (children == null || this.container == null) {\r\n      return null\r\n    }\r\n\r\n    return createPortal(children, this.container)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, SVGOverlay>(SVGOverlay)\r\n","// @flow\r\n\r\nimport { TileLayer as LeafletTileLayer } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport GridLayer from './GridLayer'\r\nimport type { GridLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletTileLayer\r\ntype Props = { url: string } & GridLayerProps\r\n\r\nclass TileLayer extends GridLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletTileLayer(props.url, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, TileLayer>(TileLayer)\r\n","// @flow\r\n\r\nimport { Tooltip as LeafletTooltip } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport DivOverlay from './DivOverlay'\r\nimport type { DivOverlayProps } from './types'\r\n\r\ntype LeafletElement = LeafletTooltip\r\ntype Props = DivOverlayProps\r\n\r\nclass Tooltip extends DivOverlay<LeafletElement, Props> {\r\n  static defaultProps = {\r\n    pane: 'tooltipPane',\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletTooltip(\r\n      this.getOptions(props),\r\n      props.leaflet.popupContainer,\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { popupContainer } = this.props.leaflet\r\n    if (popupContainer == null) return\r\n\r\n    popupContainer.on({\r\n      tooltipopen: this.onTooltipOpen,\r\n      tooltipclose: this.onTooltipClose,\r\n    })\r\n    popupContainer.bindTooltip(this.leafletElement)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { popupContainer } = this.props.leaflet\r\n    if (popupContainer == null) return\r\n\r\n    popupContainer.off({\r\n      tooltipopen: this.onTooltipOpen,\r\n      tooltipclose: this.onTooltipClose,\r\n    })\r\n    if (popupContainer._map != null) {\r\n      popupContainer.unbindTooltip(this.leafletElement)\r\n    }\r\n  }\r\n\r\n  onTooltipOpen = ({ tooltip }: { tooltip: LeafletElement }) => {\r\n    if (tooltip === this.leafletElement) {\r\n      this.onOpen()\r\n    }\r\n  }\r\n\r\n  onTooltipClose = ({ tooltip }: { tooltip: LeafletElement }) => {\r\n    if (tooltip === this.leafletElement) {\r\n      this.onClose()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Tooltip>(Tooltip)\r\n","// @flow\r\n\r\nimport { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLngBounds, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletVideoOverlay\r\ntype Props = {\r\n  attribution?: string,\r\n  bounds: LatLngBounds,\r\n  opacity?: number,\r\n  play?: boolean,\r\n  url: string | string[] | HTMLVideoElement,\r\n  zIndex?: number,\r\n} & MapLayerProps\r\n\r\nclass VideoOverlay extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletVideoOverlay(\r\n      props.url,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    if (this.props.play === true) {\r\n      this.leafletElement.getElement().play()\r\n    }\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n    // flowlint-next-line sketchy-null-bool:off\r\n    if (toProps.play === true && !fromProps.play) {\r\n      this.leafletElement.getElement().play()\r\n      // flowlint-next-line sketchy-null-bool:off\r\n    } else if (!toProps.play && fromProps.play === true) {\r\n      this.leafletElement.getElement().pause()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, VideoOverlay>(VideoOverlay)\r\n","// @flow\r\n\r\nimport { TileLayer } from 'leaflet'\r\nimport isEqual from 'fast-deep-equal'\r\n\r\nimport { withLeaflet } from './context'\r\nimport GridLayer from './GridLayer'\r\nimport { EVENTS_RE } from './MapEvented'\r\nimport type { GridLayerProps } from './types'\r\n\r\ntype LeafletElement = TileLayer.WMS\r\ntype Props = { url: string } & GridLayerProps\r\n\r\nclass WMSTileLayer extends GridLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { url, ...params } = props\r\n    const { leaflet: _l, ...options } = this.getOptions(params)\r\n    return new TileLayer.WMS(url, options)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n\r\n    const { url: prevUrl, opacity: _po, zIndex: _pz, ...prevProps } = fromProps\r\n    const { leaflet: _pl, ...prevParams } = this.getOptions(prevProps)\r\n    const { url, opacity: _o, zIndex: _z, ...props } = toProps\r\n    const { leaflet: _l, ...params } = this.getOptions(props)\r\n\r\n    if (url !== prevUrl) {\r\n      this.leafletElement.setUrl(url)\r\n    }\r\n    if (!isEqual(params, prevParams)) {\r\n      this.leafletElement.setParams(params)\r\n    }\r\n  }\r\n\r\n  getOptions(params: Object): Object {\r\n    const superOptions = super.getOptions(params)\r\n    return Object.keys(superOptions).reduce((options, key) => {\r\n      if (!EVENTS_RE.test(key)) {\r\n        options[key] = superOptions[key]\r\n      }\r\n      return options\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, WMSTileLayer>(WMSTileLayer)\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement = Control.Zoom\r\ntype Props = {\r\n  zoomInText?: string,\r\n  zoomInTitle?: string,\r\n  zoomOutText?: string,\r\n  zoomOutTitle?: string,\r\n} & MapControlProps\r\n\r\nclass ZoomControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Zoom(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ZoomControl>(ZoomControl)\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    \"keyId\": \"1\",\r\n    \"kdProvinsi\": \"01\",\r\n    \"nmProvinsi\": \"DKI JAKARTA\",\r\n    \"latitude\": \"-6.597376952336214\",\r\n    \"longitude\": \"106.90771704354137\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"2\",\r\n    \"kdProvinsi\": \"02\",\r\n    \"nmProvinsi\": \"JAWA BARAT\",\r\n    \"latitude\": \"-6.922222\",\r\n    \"longitude\": \"107.606944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"3\",\r\n    \"kdProvinsi\": \"03\",\r\n    \"nmProvinsi\": \"JAWA TENGAH\",\r\n    \"latitude\": \"-6.993056\",\r\n    \"longitude\": \"110.420833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"4\",\r\n    \"kdProvinsi\": \"04\",\r\n    \"nmProvinsi\": \"DI YOGYAKARTA\",\r\n    \"latitude\": \"-7.801389\",\r\n    \"longitude\": \"110.364722\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"5\",\r\n    \"kdProvinsi\": \"05\",\r\n    \"nmProvinsi\": \"JAWA TIMUR\",\r\n    \"latitude\": \"-7.249167\",\r\n    \"longitude\": \"112.750833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"6\",\r\n    \"kdProvinsi\": \"06\",\r\n    \"nmProvinsi\": \"ACEH\",\r\n    \"latitude\": \"5.541667\",\r\n    \"longitude\": \"95.333333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"7\",\r\n    \"kdProvinsi\": \"07\",\r\n    \"nmProvinsi\": \"SUMATERA UTARA\",\r\n    \"latitude\": \"1.48218\",\r\n    \"longitude\": \"124.848922\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"8\",\r\n    \"kdProvinsi\": \"08\",\r\n    \"nmProvinsi\": \"SUMATERA BARAT\",\r\n    \"latitude\": \"-0.941667\",\r\n    \"longitude\": \"100.375\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"9\",\r\n    \"kdProvinsi\": \"09\",\r\n    \"nmProvinsi\": \"RIAU\",\r\n    \"latitude\": \"0.516667\",\r\n    \"longitude\": \"101.441667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"10\",\r\n    \"kdProvinsi\": \"10\",\r\n    \"nmProvinsi\": \"JAMBI\",\r\n    \"latitude\": \"-1.620152\",\r\n    \"longitude\": \"103.611373\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"11\",\r\n    \"kdProvinsi\": \"11\",\r\n    \"nmProvinsi\": \"SUMATERA SELATAN\",\r\n    \"latitude\": \"-2.976389\",\r\n    \"longitude\": \"104.75\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"12\",\r\n    \"kdProvinsi\": \"12\",\r\n    \"nmProvinsi\": \"LAMPUNG\",\r\n    \"latitude\": \"-5.429167\",\r\n    \"longitude\": \"105.261111\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"13\",\r\n    \"kdProvinsi\": \"13\",\r\n    \"nmProvinsi\": \"KALIMANTAN BARAT\",\r\n    \"latitude\": \"-0.031944\",\r\n    \"longitude\": \"109.325\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"14\",\r\n    \"kdProvinsi\": \"14\",\r\n    \"nmProvinsi\": \"KALIMANTAN TENGAH\",\r\n    \"latitude\": \"-2.208333\",\r\n    \"longitude\": \"113.916667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"15\",\r\n    \"kdProvinsi\": \"15\",\r\n    \"nmProvinsi\": \"KALIMANTAN SELATAN\",\r\n    \"latitude\": \"-3.323611\",\r\n    \"longitude\": \"114.588889\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"16\",\r\n    \"kdProvinsi\": \"16\",\r\n    \"nmProvinsi\": \"KALIMANTAN TIMUR\",\r\n    \"latitude\": \"-0.491667\",\r\n    \"longitude\": \"117.145833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"17\",\r\n    \"kdProvinsi\": \"17\",\r\n    \"nmProvinsi\": \"SULAWESI UTARA\",\r\n    \"latitude\": \"3.583333\",\r\n    \"longitude\": \"98.666667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"18\",\r\n    \"kdProvinsi\": \"18\",\r\n    \"nmProvinsi\": \"SULAWESI TENGAH\",\r\n    \"latitude\": \"-0.908333\",\r\n    \"longitude\": \"119.870833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"19\",\r\n    \"kdProvinsi\": \"19\",\r\n    \"nmProvinsi\": \"SULAWESI SELATAN\",\r\n    \"latitude\": \"-5.148611\",\r\n    \"longitude\": \"119.431944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"20\",\r\n    \"kdProvinsi\": \"20\",\r\n    \"nmProvinsi\": \"SULAWESI TENGGARA\",\r\n    \"latitude\": \"-3.975\",\r\n    \"longitude\": \"122.516667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"21\",\r\n    \"kdProvinsi\": \"21\",\r\n    \"nmProvinsi\": \"MALUKU\",\r\n    \"latitude\": \"-3.695833\",\r\n    \"longitude\": \"128.183333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"22\",\r\n    \"kdProvinsi\": \"22\",\r\n    \"nmProvinsi\": \"BALI\",\r\n    \"latitude\": \"-8.65\",\r\n    \"longitude\": \"115.216667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"23\",\r\n    \"kdProvinsi\": \"23\",\r\n    \"nmProvinsi\": \"NUSA TENGGARA BARAT\",\r\n    \"latitude\": \"-8.583333\",\r\n    \"longitude\": \"116.116667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"24\",\r\n    \"kdProvinsi\": \"24\",\r\n    \"nmProvinsi\": \"NUSA TENGGARA TIMUR\",\r\n    \"latitude\": \"-10.170833\",\r\n    \"longitude\": \"123.606944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"25\",\r\n    \"kdProvinsi\": \"25\",\r\n    \"nmProvinsi\": \"PAPUA\",\r\n    \"latitude\": \"-2.534722\",\r\n    \"longitude\": \"140.705556\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"26\",\r\n    \"kdProvinsi\": \"26\",\r\n    \"nmProvinsi\": \"BENGKULU\",\r\n    \"latitude\": \"-3.8125\",\r\n    \"longitude\": \"102.2875\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"27\",\r\n    \"kdProvinsi\": \"28\",\r\n    \"nmProvinsi\": \"MALUKU UTARA\",\r\n    \"latitude\": \"0.737287\",\r\n    \"longitude\": \"127.558801\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"28\",\r\n    \"kdProvinsi\": \"29\",\r\n    \"nmProvinsi\": \"BANTEN\",\r\n    \"latitude\": \"-6.115278\",\r\n    \"longitude\": \"106.154167\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"29\",\r\n    \"kdProvinsi\": \"30\",\r\n    \"nmProvinsi\": \"KEPULAUAN BANGKA BELITUNG\",\r\n    \"latitude\": \"-2.120833\",\r\n    \"longitude\": \"106.1125\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"30\",\r\n    \"kdProvinsi\": \"31\",\r\n    \"nmProvinsi\": \"GORONTALO\",\r\n    \"latitude\": \"0.5375\",\r\n    \"longitude\": \"123.0625\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"31\",\r\n    \"kdProvinsi\": \"32\",\r\n    \"nmProvinsi\": \"KEPULAUAN RIAU\",\r\n    \"latitude\": \"0.916667\",\r\n    \"longitude\": \"104.458333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"32\",\r\n    \"kdProvinsi\": \"33\",\r\n    \"nmProvinsi\": \"PAPUA BARAT\",\r\n    \"latitude\": \"-0.861111\",\r\n    \"longitude\": \"134.0625\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"33\",\r\n    \"kdProvinsi\": \"34\",\r\n    \"nmProvinsi\": \"SULAWESI BARAT\",\r\n    \"latitude\": \"-2.680556\",\r\n    \"longitude\": \"118.886111\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"34\",\r\n    \"kdProvinsi\": \"35\",\r\n    \"nmProvinsi\": \"KALIMANTAN UTARA\",\r\n    \"latitude\": \"2.8375\",\r\n    \"longitude\": \"117.365278\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"35\",\r\n    \"kdProvinsi\": \"50\",\r\n    \"nmProvinsi\": \"PERWAKILAN RI DI LUAR NEGERI\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"36\",\r\n    \"kdProvinsi\": \"51\",\r\n    \"nmProvinsi\": \"AMERIKA UTARA\",\r\n    \"latitude\": \"-6.878256654394346\",\r\n    \"longitude\": \"107.94358932830704\",\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"37\",\r\n    \"kdProvinsi\": \"52\",\r\n    \"nmProvinsi\": \"AMERIKA SELATAN\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"38\",\r\n    \"kdProvinsi\": \"53\",\r\n    \"nmProvinsi\": \"EROPA TIMUR DAN UTARA\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"39\",\r\n    \"kdProvinsi\": \"54\",\r\n    \"nmProvinsi\": \"EROPA BARAT\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"40\",\r\n    \"kdProvinsi\": \"55\",\r\n    \"nmProvinsi\": \"AFRIKA\",\r\n    \"latitude\": \"0.93923\",\r\n    \"longitude\": \"0.838333\",\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"41\",\r\n    \"kdProvinsi\": \"56\",\r\n    \"nmProvinsi\": \"ASIA TENGAH DAN TIMUR\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"42\",\r\n    \"kdProvinsi\": \"57\",\r\n    \"nmProvinsi\": \"ASIA PASIFIK\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"43\",\r\n    \"kdProvinsi\": \"58\",\r\n    \"nmProvinsi\": \"ASIA TENGGARA\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"44\",\r\n    \"kdProvinsi\": \"59\",\r\n    \"nmProvinsi\": \"TIMUR TENGAH\",\r\n    \"latitude\": \"33.59708164557022\",\r\n    \"longitude\": \"132.30468705296516\",\r\n    \"status\": \"ACTIVE\"\r\n  }\r\n]\r\n  ;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nconst useStyles=makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nexport const pointerIcon=new L.Icon({\r\n  iconUrl: '/assets/mapmarker.svg',\r\n  iconRetinaUrl: '/assets/mapmarker.svg',\r\n  iconAnchor: [5, 15],\r\n  //popupAnchor: [10, 10],\r\n  iconSize: [28, 28],\r\n  //shadowUrl: '/assets/marker-icon-2x.png',\r\n  //shadowSize: [68, 45],\r\n  //shadowAnchor: [20, 42],\r\n})\r\nconst ViewMap=props => {\r\n  const { className, datas2, handleClose, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({\r\n    firstName: 'Shen',\r\n    lastName: 'Zhi',\r\n    email: 'shen.zhi@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n\r\n  const [map, setMap]=useState({});\r\n  const [currentLocation, setCurrentLocation]=useState({\r\n    lat: 1.6406296,\r\n    lng: 116.419389,\r\n    zoom: 5,\r\n  });\r\n\r\n  /*\r\n    const handleChange=event => {\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n  */\r\n  const handleMapLoad=map => {\r\n    setMap(map)\r\n  }\r\n\r\n  const status=[\r\n    {\r\n      value: 'A',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: 'I',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const position=[currentLocation.lat, currentLocation.lng]\r\n  return (\r\n    <>\r\n\r\n      <Card\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={title}\r\n        />\r\n\r\n        <CardContent className={classes.content} style={{ height: '100%', width: '100%', marginTop: '-1%' }}\r\n        >\r\n          <Map center={position} zoom={currentLocation.zoom}\r\n            style={{ height: '80%' }} >\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            {datas2.map((headCell) => (\r\n              headCell.latitude!=null? (\r\n\r\n                <Marker position={[headCell.latitude, headCell.longitude]} icon={pointerIcon}>\r\n                  <Popup>\r\n                    Propinsi {headCell.nmProvinsi}\r\n                  </Popup>\r\n                  <Tooltip>Propinsi {headCell.nmProvinsi}</Tooltip>\r\n                </Marker>\r\n              ):''\r\n            ))}\r\n          </Map>\r\n          <br />\r\n          <Button color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Close</Button>\r\n\r\n\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nViewMap.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ViewMap;\r\n","//import uuid from 'uuid/v1';\r\n\r\nexport default\r\n  {\r\n    TitleModule: \"Daftar Provinsi\",\r\n    HeaderData:\r\n      [\r\n        // { id: 'keyId', label: 'Propinsi ID', flagDisplay: 1 },\r\n        // { id: 'kdProvinsi', label: 'Kode Propinsi', flagDisplay: 1 },\r\n        { id: 'nmProvinsi', label: 'Nama Provinsi', flagDisplay: 1 },\r\n        { id: 'latitude', label: 'Latitude', flagDisplay: 1 },\r\n        { id: 'longitude', label: 'Longitude', flagDisplay: 1 },\r\n        { id: 'status', label: 'Status', flagDisplay: 1 },\r\n      ],\r\n  }\r\n;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { ProvinsisToolbar, ProvinsisTable, ProvinsiAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport mockDataSettingProvinsi from './dataSettingprovinsi';\r\nimport { urlProv,urlDeleteProv } from 'kumpulanUrl';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst ProvinsiList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getProv() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id_provinsi) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_provinsi: id_provinsi\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        getProv()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteProvinsi=async (e, id) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Provinsi Di Indonesia\";\r\n    const headers = [[\"Provinsi ID\", \"KodeDepdagri\", \"Nama Provinsi\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.id_provinsi, elt.KodeDepdagri, elt.nama_provinsi, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"prov.pdf\")\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const SettingProvinsi=useState(mockDataSettingProvinsi);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsisSelect) => {\r\n    deleteProv(rowProvinsisSelect.id_provinsi).then(Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getProv}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowProvinsisSelect} rowSelect={rowProvinsisSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Provinsi</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ProvinsisTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          provinsis = {provinsis}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteProvinsi={deleteProvinsi}\r\n          SettingProvinsi={SettingProvinsi}\r\n          provinsisExport={provinsisExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(ProvinsiAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ProvinsiList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport { urlDeleteKel } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n// import { array } from 'yargs';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelurahansTable =props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,\r\n    handleDelete,\r\n    textfind,\r\n    order, orderBy, SettingKelurahan,\r\n    provinsisExport, filteredItems, handleOpen, selectedKelurahans,\r\n    setSelectedKelurahans,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\nconst deleteKel = async (e,selectedKelurahans) => {\r\n  let url = urlDeleteKel;\r\n  let response = axios.delete(url + `/${selectedKelurahans.id_kelurahan}`)\r\n  console.log(selectedKelurahans.id_kelurahan)\r\n\r\n  if (response === 200) {\r\n    thisClickedFunda.closest(columns).remove();\r\n    console.log(response.data.data)\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name:'Nama Provinsi',\r\n      selector:'nama_provinsi',\r\n      sortable:true,\r\n    },    {\r\n      name:'Nama Kabupaten',\r\n      selector:'nama_kabupaten',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name:'Nama Kecamatan',\r\n      selector:'nama_kecamatan',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true, \r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"edit\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelurahan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"delete\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kelurahan\")}  ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button className=\"btn btn-sm btn-primary\" id=\"add\" onClick={(e) => handleOpen(e,[], \"Tambah Kelurahan\")}>\r\n        <AddIcon />\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelurahan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedKelurahans_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedKelurahans_var=provinsis.map(provinsi => id);\r\n    } else {\r\n      selectedKelurahans_var=[];\r\n    }\r\n\r\n    setSelectedKelurahans(selectedKelurahans_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedKelurahans.indexOf(id);\r\n    let newSelectedKelurahans=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(1));\r\n    } else if (selectedIndex===selectedKelurahans.length-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(\r\n        selectedKelurahans.slice(0, selectedIndex),\r\n        selectedKelurahans.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedKelurahans(newSelectedKelurahans);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelurahan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahansTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelurahansTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKab, urlKec, urlProv, urlShowKab,urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate, { async } from 'validate.js';\r\nimport Swal from 'sweetalert2'\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema = {\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kelurahan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelurahanAddModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n   const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\nasync function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n     \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n    showKecamatan(rowSelect.id_kabupaten)\r\n    showKab(rowSelect.id_provinsi)\r\n    // getKab()\r\n    // getKec()\r\n\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors = validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    const userName = localStorage.getItem('username');\r\n    let url = urlAddKel;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"nama_kelurahan\": rowSelect.nama_kelurahan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n      \r\n    }\r\n    if (rowSelect.id_kelurahan === undefined) {\r\n      url = urlAddKel;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url = urlEditKel;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n    // console.log(varJson)\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      return tester.json();\r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester.message)\r\n      getDataBackend();\r\n      if (url == urlAddKel) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKel){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      then(\r\n        handleClose()\r\n        )\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n    .catch((e) => {\r\n        // alert(e.message)\r\n      return false;\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kelurahan== undefined ? \"Tambah Kelurahan\" : \"Ubah Kelurahan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri') ? formState.errors.KodeDepdagri[0] : null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect && rowSelect.KodeDepdagri ? rowSelect.KodeDepdagri : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              \r\n             \r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelurahan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelurahan') ? formState.errors.nama_kelurahan[0] : null\r\n                }\r\n\r\n                error={hasError('nama_kelurahan')}\r\n\r\n                defaultValue={rowSelect && rowSelect.nama_kelurahan ? rowSelect.nama_kelurahan : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect && rowSelect.IsActive ? rowSelect.IsActive : ''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahanAddModi.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelurahanAddModi;","//import uuid from 'uuid/v1';\r\n\r\nexport default\r\n  {\r\n    TitleModule: \"Daftar Kelurahan\",\r\n    HeaderData:\r\n      [\r\n        // { id: 'keyId', label: 'Propinsi ID', flagDisplay: 1 },\r\n        // { id: 'kdProvinsi', label: 'Kode Propinsi', flagDisplay: 1 },\r\n        { id: 'nmKelurahan', label: 'Kelurahan', flagDisplay: 1 },\r\n        { id: 'latitude', label: 'Latitude', flagDisplay: 1 },\r\n        { id: 'longitude', label: 'Longitude', flagDisplay: 1 },\r\n        { id: 'status', label: 'Status', flagDisplay: 1 },\r\n      ],\r\n  }\r\n;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { ProvinsisToolbar, KelurahansTable, KelurahanAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport mockDataSettingKelurahan from './dataSettingkelurahan';\r\nimport { urlKel, urlAddKel, urlEditKel, urlDeleteKel} from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport { get } from 'underscore';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelurahanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahans);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKel = async (id_kelurahan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kelurahan: id_kelurahan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        getKel()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingKelurahan[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setKelurahansExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingKelurahan[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingKelurahan[0].TitleModule).length)/2\r\n      doc.text(SettingKelurahan[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('kelurahan.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setKelurahanfind(e.target.value)\r\n      let kelurahans4=kelurahans.filter(function (entry) {\r\n        return entry&&entry.nama_kelurahan&&\r\n          ((entry.nama_kelurahan!==null? entry.nama_kelurahan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kelurahans4)? kelurahans4:[kelurahans4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kelurahans);\r\n    }\r\n    setKelurahanfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kec.pdf\")\r\n  }\r\n\r\n\r\n  const [kelurahans, setKelurahans]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowKelurahansSelect, setRowKelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedKelurahans, setSelectedKelurahans]=useState([]);\r\n  const [kelurahansExport, setKelurahansExport]=useState([]);\r\n  const [kelurahanfind, setKelurahanfind]=useState([]);\r\n\r\n  const SettingKelurahan=useState(mockDataSettingKelurahan);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedKelurahans({\r\n      ...setSelectedKelurahans,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmKelurahan, kdKelurahan, status, keyId) => {\r\n    setRowKelurahanSelect({\r\n      ...selectedKelurahans,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdKelurahan']: kdKelurahan,\r\n      ['nmKelurahan']: nmKelurahan,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKelurahan, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowKelurahanSelect(rowKelurahan);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowKelurahanSelect(rowKelurahan);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e, rowKelurahansSelect)=>{\r\n    deleteKel(rowKelurahansSelect.id_kelurahan)\r\n    \r\n  }\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowKelurahanSelect} rowSelect={rowKelurahansSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose}\r\n        ComponenAddModi={componenPopup}></ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelurahan</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kelurahanfind} deleteKelurahan={deleteKelurahan}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kelurahans={kelurahans}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelurahansTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          kelurahans = {kelurahans}\r\n          onChange={onChangefind}\r\n          handleDelete={handleDelete}\r\n          SettingKelurahan={SettingKelurahan}\r\n          kelurahansExport={kelurahansExport}\r\n          filteredItems={filteredItems}\r\n          selectedKelurahans={selectedKelurahans} \r\n          handleOpen={handleOpen}\r\n          setSelectedKelurahans={setSelectedKelurahans}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n        {popupComponen(KelurahanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelurahanList;","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily: {\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKabupatenTable = props => {\r\n  const {\r\n    kab,\r\n    setKab,\r\n    className, handleDelete,\r\n    textfind, kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export, ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest } = props;\r\n\r\n\r\n  const [filterText, setFilterText] = React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [laporKab, setLaporKab] = useState([])\r\n  const [prov, setProv] = useState([]);\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n\r\n\r\n  const handleSearch = (event) => {\r\n    const userId = localStorage.getItem('user_id');\r\n    let url = urlAddKec;\r\n    if (rowSelect.id_kecamatan === undefined) {\r\n      url = urlShowKab;\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n        \"id_kecamatan\": rowSelect.id_kecamatan,\r\n        \"id_kabupaten\": rowSelect.id_kabupaten,\r\n        \"nama_kabupaten\": rowSelect.nama_kabupaten,\r\n        \"IsActive\": rowSelect.IsActive,\r\n      })\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    alert(url);\r\n    const response = fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })/**/\r\n\r\n      .then(res => {\r\n        //console.log(res)\r\n        //console.log(res.data)\r\n        alert(res.message)\r\n\r\n        handleClose();\r\n        getDataBackend();\r\n        //alert(\"Sukses\")\r\n        const data = res;\r\n      })\r\n      .catch((e) => {\r\n\r\n        swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const customStyles = {\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    alert('kabupaten')\r\n    showKab(event.target.value)\r\n  }\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    // showKab(event.target.value)\r\n  }\r\n\r\n\r\n  async function getLaporanKab() {\r\n    const requestOptions = {\r\n      method: 'get',\r\n      // mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setLaporKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(e);\r\n        setLaporKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Network Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getProv()\r\n    // alert('ini prov')\r\n  }, [rowSelect])\r\n  const columns = [\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Kabupaten',\r\n      selector: 'Nama_Kabupaten',\r\n      font: 'Poppins',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Rw',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    }, {\r\n      name: 'Jumlah Rt',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll = event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var = provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var = [];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n\r\n    const selectedIndex = selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex === 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex === selectedkabupaten.length - 1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Jumlah Wilayah\" : \"Jumlah Wilayah Di \" + rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKabupatenTable.propTypes = {\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKabupatenTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  // KodeDepdagri: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   length: {\r\n  //     maximum: 200\r\n  //   }\r\n  // },\r\n  // nama_kecamatan: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   length: {\r\n  //     maximum: 200\r\n  //   }\r\n  // },\r\n  // IsActive: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   /* length: {\r\n  //      maximum: 1\r\n  //    }*/\r\n  // },\r\n  // /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(prov,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Provinsi =\", prov)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    getDataBackend(rowSelect)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  const pencarian = (paramProv, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramProv.filter((entry) => {\r\n      return entry&&entry.id_provinsi &&(entry.id_provinsi === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_provinsi)\r\n    // alert(\"result = \" + result[0].nama_provinsi)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah Kabupaten\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanAddModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KabupatenSearchModi, LaporanKabupatenTable} from '../LaporanKabupaten/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKabupaten=props => {\r\n\r\n\r\n  async function showKab(rowkabupatenSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    // setFilteredItems(kabupaten);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_provinsi\": rowkabupatenSelect.id_provinsi,\r\n          // \"id_kabupaten\": rowkabupatenSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKab=urlShowsKab\r\n    // console.log(urlgetKab)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKab, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKabupaten=(e) => {\r\n    const selectedkabupaten_string=selectedkabupaten.join(\"<batas></batas>\");\r\n    let kabupaten3=kabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkabupaten_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kabupaten3)\r\n    setkabupaten(kabupaten3)\r\n    setkabupatenfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkabupatenExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kabupatenExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setkabupatenfind(e.target.value)\r\n      let kabupaten4=kabupaten.filter(function (entry) {\r\n        return entry&&entry.Nama_Kabupaten&&\r\n          ((entry.Nama_Kabupaten!==null? entry.Nama_Kabupaten:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kabupaten4)? kabupaten4:[kabupaten4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kabupaten);\r\n    }\r\n    setkabupatenfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Kabupaten\";\r\n    const headers = [[\"Nama Kabupaten\", \"Jumlah Kecamatan\", \"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Kabupaten, elt.Jumlah_Kecamatan, elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkabupatenSelect, setRowkabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkabupaten, setSelectedkabupaten]=useState([]);\r\n  const [kabupatenExport, setkabupatenExport]=useState([]);\r\n  const [kabupatenfind, setkabupatenfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkabupaten({\r\n      ...setSelectedkabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkabupatenSelect({\r\n      ...selectedkabupaten,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('kabupaten =',data.data)\r\n  //       setkabupaten(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setkabupaten([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowKabupaten, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkabupatenSelect(rowKabupaten);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowKabupaten, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkabupatenSelect(rowKabupaten);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkabupatenSelect(rowKabupaten);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent \r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Kabupaten</h5>\r\n      {/*}\r\n      <kabupatenToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kabupaten={kabupaten}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KabupatenSearchModi\r\n        getDataBackend={showKab}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        />\r\n        <LaporanKabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowkabupatenSelect}\r\n          kabupaten={kabupaten}\r\n          kab={kab}\r\n          setKab={setKab}\r\n          handleDelete={handleDelete}\r\n        // textfind={kabupatenfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          kabupatenExport={kabupatenExport}\r\n          kabupatenfind={kabupatenfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n          selectedkabupaten={selectedkabupaten} \r\n          kabupatenfind={kabupatenfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkabupaten={setSelectedkabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n      {popupComponen(KabupatenSearchModi)}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKabupaten;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanPerKabupatenTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerKabupatenTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Jumlah Wilayah Kab/Kota\" : \"Jumlah Wilayah Kab/Kota \" +rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerKabupatenTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerKabupatenTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab, urlLaporanPerKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema = {\r\n\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKabupatenSearchModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, setKab, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n  const [perKabupaten, setPerKabupaten] = useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n// Menggunakan ShowKab Biasa\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKab([]);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showPerKab(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlLaporanPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setPerKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setPerKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll = urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setPerKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()  \r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kabupaten,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kabupaten =\", kabupaten)\r\n    }\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kabupaten &&(entry.id_kabupaten === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kabupaten)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKabupatenSearchModi.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKabupatenSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanPerKabupatenTable, PerKabupatenSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKec,urlLaporanPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKabupaten=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKab() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKabupaten);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKab(rowPerKabupatenSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKabupaten);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kabupaten\": rowPerKabupatenSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n// Menggunakan Having Clause Di Back-end\r\n    let urlgetKec=urlLaporanPerKab\r\n    // console.log(urlgetKec)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedkecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKabupaten(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKabupaten.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKabupaten);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan PerKabupaten\";\r\n    const headers = [[\"Jumlah Kecamatan\", \"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Jumlah_Kecamatan, elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [perKabupaten, setPerKabupaten]=useState([]);\r\n  const [kab,setKab] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKabupatenSelect, setRowPerKabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKab();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKabupatenSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKabupatenSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKabupatenSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKabupatenSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKab}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKabupatenSelect} rowSelect={rowPerKabupatenSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKabupaten={perKabupaten}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKabupatenSearchModi\r\n          getDataBackend={showPerKab}\r\n          setKab={setKab}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKabupatenSelect} rowSelect={rowPerKabupatenSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanPerKabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKab={setKab}\r\n          kab={kab}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKabupatenSelect} \r\n          rowSelect={rowPerKabupatenSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKabupatenSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKabupaten;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanPerKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kecamatan == undefined ? \"Jumlah Wilayah di Kecamatan\" : \"Jumlah Wilayah di Kecamatan \" +rowSelect.nama_kecamatan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab,urlLaporanPerKab,urlShowPerKec, urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350', \r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKecamatanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title,setKec, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [perKabupaten, setPerKabupaten]=useState([]);\r\n  const [kabupaten, setKabupaten]=useState([]);\r\n  const [perKecamatan,setPerKecamatan]=useState([])\r\n  const [kecamatan,setKecamatan]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setKec(data.data);\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKec([]);\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKec(data.data);\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKec([]);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showPerKec(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowPerKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Kecamatan =',data.data)\r\n        setPerKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setPerKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  // async function getKab() {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'get',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //   };\r\n\r\n  //   let urlGetKabAll=urlKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlGetKabAll, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       setPerKabupaten(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setPerKabupaten([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()  \r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kecamatan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kecamatan,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_kec) => {\r\n    let value = id_kec\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n      return entry&&entry.id_kecamatan &&(entry.id_kecamatan === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kecamatan\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n        \r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKecamatanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanPerKecamatanTable, PerKecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKec,urlLaporanPerKab,urlShowPerKec } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKec(rowPerKecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerKecamatanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowPerKec\r\n    // console.log(url)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedPerKecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan PerKecamatan\";\r\n    const headers = [[\"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [perKecamatan, setPerKecamatan]=useState([]);\r\n  const [kec,setKec] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKecamatanSelect, setRowPerKecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerKecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKecamatanSelect({\r\n      ...selectedPerKecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKecamatan={perKecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKecamatanSearchModi\r\n          getDataBackend={showPerKec}\r\n          setKec={setKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanPerKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKec={setKec}\r\n          kec={kec}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKecamatanSelect} \r\n          rowSelect={rowPerKecamatanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerKecamatan={selectedPerKecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    rowSelect,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'Nama_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        {/* <Button onClick={(e) => handleOpen(e, [],)}>\r\n          <SearchIcon/>\r\n        </Button> */}\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        {/* <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kecamatan\"\r\n          textfind={textfind}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Jumlah Wilayah\" : \"Laporan Jumlah Wilayah \" + rowSelect.nama_kabupaten }\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kecamatan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kabupaten,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kabupaten =\", kabupaten)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    // console.log(\"Rs =\".rowSelect)\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  \r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kabupaten &&(entry.id_kabupaten === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kabupaten)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n        \r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKecamatanTable, KecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKecs } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      // mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKec(rowkecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kabupaten\": rowkecamatanSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlShowKecs\r\n    // console.log(urlgetKec)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedkecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=kecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setkecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=kecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Kecamatan\";\r\n    const headers = [[\"Nama Kecamatan\", \"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Kecamatan, elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkecamatanSelect, setRowkecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedkecamatan]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkecamatan({\r\n      ...setSelectedkecamatan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkecamatanSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kecamatan</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kecamatan={kecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KecamatanSearchModi\r\n          getDataBackend={showKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowkecamatanSelect}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkecamatan={setSelectedkecamatan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanKelurahanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kelurahanfind,\r\n    order, orderBy,\r\n    kelurahanExport, filteredItems, handleOpen, selectedkelurahan,\r\n    setselectedkelurahan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'Nama_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        {/* <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelurahan\"\r\n          textfind={textfind}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkelurahan_var=[];\r\n    }\r\n\r\n    setselectedkelurahan(selectedkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkelurahan.indexOf(id);\r\n    let newselectedkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedkelurahan.length-1) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(\r\n        selectedkelurahan.slice(0, selectedIndex),\r\n        selectedkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkelurahan(newselectedkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Jumlah Wilayah Kelurahan\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelurahanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userId=localStorage.getItem('user_id');\r\n    let url=urlAddKel;\r\n    if (rowSelect.id_kelurahan===undefined) {\r\n      url=urlAddKel;\r\n    } else {\r\n      url=urlEditKel;\r\n    }\r\n\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n\r\n    // const requestOptions={\r\n    //   method: 'POST',\r\n    //   mode: \"cors\",\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({\r\n    //     \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n    //     \"id_kelurahan\": rowSelect.id_kelurahan,\r\n    //     \"id_kabupaten\": rowSelect.id_kabupaten,\r\n    //     \"nama_kelurahan\": rowSelect.nama_kelurahan,\r\n    //     \"IsActive\": rowSelect.IsActive,\r\n    //   })\r\n    // };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // const response=fetch(url,)\r\n    //   .then(res => {\r\n    //     return res.json();\r\n    //   })/**/\r\n\r\n    //   .then(res => {\r\n    //     //console.log(res)\r\n    //     //console.log(res.data)\r\n    //     alert(res.message)\r\n\r\n    //     handleClose();\r\n    //     getDataBackend();\r\n    //     //alert(\"Sukses\")\r\n    //     const data=res;\r\n    //   })\r\n    //   .catch((e) => {\r\n\r\n    //     swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n    //     return false;\r\n\r\n\r\n    //   });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKelurahanTable, KelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlLaporanKel,urlShowKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      // mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowkelurahanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanKel\r\n    // alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKelurahan=(e) => {\r\n    const selectedkelurahan_string=selectedkelurahan.join(\"<batas></batas>\");\r\n    let kelurahan3=kelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kelurahan3)\r\n    setkelurahan(kelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kelurahan4=kelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kelurahan4)? kelurahan4:[kelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan kelurahan\";\r\n    const headers = [[\"Nama Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [kelurahan, setkelurahan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkelurahanSelect, setRowkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkelurahan, setSelectedkelurahan]=useState([]);\r\n  const [kelurahanExport, setkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkelurahan({\r\n      ...setSelectedkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkelurahanSelect({\r\n      ...selectedkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkelurahanSelect} rowSelect={rowkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelurahan</h5>\r\n      {/*}\r\n      <kelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kelurahan={kelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowkelurahanSelect} rowSelect={rowkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kelurahanExport={kelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkelurahan={selectedkelurahan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkelurahan={setSelectedkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import PerKelurahanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst PerKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Perkelurahanfind,\r\n    order, orderBy,\r\n    PerkelurahanExport, filteredItems, handleOpen, selectedPerkelurahan,\r\n    rowSelect,setRowSelect,\r\n    setselectedPerkelurahan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKel,\r\n    kel\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[   \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedPerkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedPerkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedPerkelurahan_var=[];\r\n    }\r\n\r\n    setselectedPerkelurahan(selectedPerkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedPerkelurahan.indexOf(id);\r\n    let newselectedPerkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedPerkelurahan.length-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(\r\n        selectedPerkelurahan.slice(0, selectedIndex),\r\n        selectedPerkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedPerkelurahan(newselectedPerkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kelurahan == undefined ? \"Jumlah Wilayah Kelurahan\" : \"Jumlah Wilayah Kelurahan \" +rowSelect.nama_kelurahan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PerKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKelurahanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelurahan, setkelurahan]=useState([]);\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setkelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kelurahan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kelurahan,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kelurahan =\", kelurahan)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kel) => {\r\n    let value = id_kel\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kelurahan &&(entry.id_kelurahan === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kelurahan)\r\n    // alert(\"result = \" + result[0].nama_kelurahan)\r\n    return result[0].nama_kelurahan\r\n  }\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map(option => (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKelurahanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { PerKelurahanTable, PerKelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlLaporanPerKel,urlShowKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanPerKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowPerkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerkelurahanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanPerKel\r\n    alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletePerKelurahan=(e) => {\r\n    const selectedPerkelurahan_string=selectedPerkelurahan.join(\"<batas></batas>\");\r\n    let Perkelurahan3=Perkelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedPerkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(Perkelurahan3)\r\n    setPerkelurahan(Perkelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setPerkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#PerkelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let Perkelurahan4=Perkelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Perkelurahan4)? Perkelurahan4:[Perkelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Perkelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Perkelurahan\";\r\n    const headers = [[\"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [Perkelurahan, setPerkelurahan]=useState([]);\r\n  const [kel,setKel] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerkelurahanSelect, setRowPerkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerkelurahan, setSelectedPerkelurahan]=useState([]);\r\n  const [PerkelurahanExport, setPerkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerkelurahan({\r\n      ...setSelectedPerkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerkelurahanSelect({\r\n      ...selectedPerkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>PerKelurahan</h5>\r\n      {/*}\r\n      <PerkelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Perkelurahan={Perkelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          setKel={setKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <PerKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKel={setKel}\r\n          kel={kel}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          PerkelurahanExport={PerkelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerkelurahanSelect} \r\n          rowSelect={rowPerkelurahanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerkelurahan={selectedPerkelurahan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerkelurahan={setSelectedPerkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SensusKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Perkelurahanfind,\r\n    order, orderBy,\r\n    PerkelurahanExport, filteredItems, handleOpen, selectedPerkelurahan,\r\n    rowSelect,setRowSelect,\r\n    setselectedPerkelurahan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKel,\r\n    kel\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[   \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'jumRW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'jumRT',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedPerkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedPerkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedPerkelurahan_var=[];\r\n    }\r\n\r\n    setselectedPerkelurahan(selectedPerkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedPerkelurahan.indexOf(id);\r\n    let newselectedPerkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedPerkelurahan.length-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(\r\n        selectedPerkelurahan.slice(0, selectedIndex),\r\n        selectedPerkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedPerkelurahan(newselectedPerkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kelurahan == undefined ? \"Laporan Target Sensus di Kelurahan\" : \"Laporan Target Sensus di Kelurahan \" +rowSelect.nama_kelurahan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SensusKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel,urlShowTargetKkPerProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from '../../../../components';\r\nconst schema = {\r\n\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SensusPerKelurahanSearchModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const schema={\r\n    id_kelurahan: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  }\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n  const [kelurahan, setkelurahan] = useState([]);\r\n  const [kecamatan, setkecamatan] = useState([]);\r\n  const [kabupaten, setkabupaten] = useState([]);\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kelurahan =', data.data)\r\n        setkelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangePeriode = event => {\r\n      handleChange(event)\r\n      showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten = event => {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan = event => {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kelurahan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kelurahan, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kelurahan =\", kelurahan)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kel) => {\r\n    let value = id_kel\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kelurahan && (entry.id_kelurahan === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kelurahan)\r\n    // alert(\"result = \" + result[0].nama_kelurahan)\r\n    return result[0].nama_kelurahan\r\n  }\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChangePeriode}\r\n                rowSelect={rowSelect}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map(option => (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusPerKelurahanSearchModi.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SensusPerKelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { SensusKelurahanTable, SensusPerKelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlShowLaporanSensusPerKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlShowLaporanSensusPerKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowPerkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowPerkelurahanSelect.Periode_Sensus,\r\n          \"id_kelurahan\": rowPerkelurahanSelect.id_kelurahan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlShowLaporanSensusPerKel\r\n    // alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletePerKelurahan=(e) => {\r\n    const selectedPerkelurahan_string=selectedPerkelurahan.join(\"<batas></batas>\");\r\n    let Perkelurahan3=Perkelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedPerkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(Perkelurahan3)\r\n    setPerkelurahan(Perkelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setPerkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#PerkelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let Perkelurahan4=Perkelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Perkelurahan4)? Perkelurahan4:[Perkelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Perkelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Sensus PerKelurahan\";\r\n    const headers = [[\"Target KK\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KK, elt.jumRW, elt.jumRT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [Perkelurahan, setPerkelurahan]=useState([]);\r\n  const [kel,setKel] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerkelurahanSelect, setRowPerkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerkelurahan, setSelectedPerkelurahan]=useState([]);\r\n  const [PerkelurahanExport, setPerkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerkelurahan({\r\n      ...setSelectedPerkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerkelurahanSelect({\r\n      ...selectedPerkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>PerKelurahan</h5>\r\n      {/*}\r\n      <PerkelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Perkelurahan={Perkelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <SensusPerKelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          setKel={setKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <SensusKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKel={setKel}\r\n          kel={kel}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          PerkelurahanExport={PerkelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerkelurahanSelect} \r\n          rowSelect={rowPerkelurahanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerkelurahan={selectedPerkelurahan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerkelurahan={setSelectedPerkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SensusPerKelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import SensusKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SensusKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kecamatan == undefined ? \"Laporan Target Sensus di Kecamatan\" : \"laporan Target Sensus di Kecamatan \" +rowSelect.nama_kecamatan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SensusKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowTargetKkPerProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from '../../../../components';\r\nconst schema = {\r\n    id_kecamatan: {\r\n        presence: { allowEmpty: false, message: 'harus diisi' },\r\n      },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green,\r\n        '&:hover': {\r\n            backgroundColor: '#4caf50',\r\n            borderColor: '#66bb6a',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n    buttonCancel: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.red,\r\n        '&:hover': {\r\n            backgroundColor: '#f44336',\r\n            borderColor: '#ef5350',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SensusPerKecamatanSearchModi = props => {\r\n    const { className, setData, getDataBackend, setRowSelect, rowSelect, title, setKec, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [getStatus, setStatus] = useState([]);\r\n    const [getKeyId, setKeyId] = useState([]);\r\n    const [perKabupaten, setPerKabupaten] = useState([]);\r\n    const [kabupaten, setKabupaten] = useState([]);\r\n    const [perKecamatan, setPerKecamatan] = useState([])\r\n    const [kecamatan, setKecamatan] = useState([]);\r\n    const [prov, setProv] = useState([]);\r\n\r\n    const status = [\r\n        {\r\n            value: '1',\r\n            label: 'Active'\r\n        },\r\n        {\r\n            value: '0',\r\n            label: 'Inactive'\r\n        }\r\n\r\n\r\n    ];\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n\r\n    async function showKec(id_kabupaten) {\r\n        /* */\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            //mode: \"cors\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"id_kabupaten\": id_kabupaten,\r\n            })\r\n        };\r\n\r\n        let urlShow = urlShowKec\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n\r\n            .then(resJson => {\r\n                const data = resJson;\r\n                // console.log('kecamatan =', data.data)\r\n                setKec(data.data);\r\n                setKecamatan(data.data);\r\n                //return false;\r\n            })\r\n            .catch(e => {\r\n                //console.log(e);\r\n                // alert(\"err\");\r\n                setKec([]);\r\n                setKecamatan([]);\r\n                //this.setState({ ...this.state, isFetching: false });\r\n            });\r\n    }\r\n\r\n    async function showKab(id_provinsi) {\r\n        /* */\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            //mode: \"cors\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"id_provinsi\": id_provinsi,\r\n            })\r\n        };\r\n\r\n        let urlShow = urlShowKab\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n\r\n            .then(resJson => {\r\n                const data = resJson;\r\n                // console.log('kabupaten =', data.data)\r\n                setKec(data.data);\r\n                setKabupaten(data.data);\r\n                //return false;\r\n            })\r\n            .catch(e => {\r\n                //console.log(e);\r\n                // alert(\"err\");\r\n                setKec([]);\r\n                setKabupaten([]);\r\n                //this.setState({ ...this.state, isFetching: false });\r\n            });\r\n    }\r\n\r\n    async function showTargetKkPerProv(Periode_Sensus) {\r\n        /* */\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          mode: \"cors\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            \"Periode_Sensus\": Periode_Sensus,\r\n          })\r\n        };\r\n    \r\n        let urlShow = urlShowTargetKkPerProv\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n    \r\n          .then(resJson => {\r\n            const data = resJson;\r\n            setProv(data.data);\r\n            //return false;\r\n          })\r\n          .catch(e => {\r\n            //console.log(e);\r\n    \r\n            setProv([]);\r\n            //this.setState({ ...this.state, isFetching: false });\r\n          });\r\n      }\r\n\r\n    // async function getKab() {\r\n    //   /* */\r\n    //   const requestOptions={\r\n    //     method: 'get',\r\n    //     //mode: \"cors\",\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //   };\r\n\r\n    //   let urlGetKabAll=urlKab\r\n    //   // eslint-disable-next-line no-useless-concat\r\n    //   const response=await fetch(urlGetKabAll, requestOptions)\r\n    //     .then(res => {\r\n    //       return res.json();\r\n    //     })\r\n\r\n    //     .then(resJson => {\r\n    //       const data=resJson;\r\n    //       setPerKabupaten(data.data);\r\n    //       //return false;\r\n    //     })\r\n    //     .catch(e => {\r\n    //       //console.log(e);\r\n    //       alert(\"Nextwork Error\");\r\n    //       setPerKabupaten([]);\r\n    //       //this.setState({ ...this.state, isFetching: false });\r\n    //     });\r\n    // }\r\n\r\n\r\n    ///  const mapRef=createRef();\r\n\r\n    useEffect(() => {\r\n        const errors = validate(rowSelect, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n        // console.log(\"formState\", formState)\r\n\r\n\r\n        //   alert(setOpen)\r\n    }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n    const handleChangePeriode = event => {\r\n        handleChange(event)\r\n        showTargetKkPerProv(event.target.value)\r\n    }\r\n    const handleChangeProvinsi = event => {\r\n        handleChange(event)\r\n        showKab(event.target.value)\r\n    }\r\n    const handleChangeKabupaten = event => {\r\n        handleChange(event)\r\n        showKec(event.target.value)\r\n    }\r\n\r\n    const handleChange = event => {\r\n\r\n        //    event.persist();\r\n\r\n        // const errors=validate(rowSelect, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            // isValid: errors? false:true,\r\n            // errors: errors||{}\r\n        }));\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [event.target.name]: event.target.value\r\n        });\r\n        let nama = event.target.name.replace(\"id\", \"nama\")\r\n        if (event.target.name == \"id_kecamatan\") {\r\n            setRowSelect({\r\n                ...rowSelect,\r\n                [nama]: pencarian(kecamatan, event.target.value),\r\n                [event.target.name]: event.target.value,\r\n            });\r\n            // console.log(\"Ket kecamatan =\", kecamatan)\r\n        }\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        getDataBackend();\r\n    }\r\n\r\n    const handleSave = (event) => {\r\n        getDataBackend(rowSelect)\r\n    }\r\n\r\n    const pencarian = (paramKec, id_kec) => {\r\n        let value = id_kec\r\n        let result = [];\r\n        // alert(value)\r\n        result = paramKec.filter((entry) => {\r\n            return entry && entry.id_kecamatan && (entry.id_kecamatan === value)\r\n        });\r\n        // console.log(\"result =\", result[0].nama_kecamatan)\r\n        // alert(\"result = \" + result[0].nama_kecamatan)\r\n        return result[0].nama_kecamatan\r\n    }\r\n\r\n\r\n    //  const position=[currentLocation.lat, currentLocation.lng]\r\n    const hasError = field => {\r\n        return formState && formState.errors && formState.errors[field] ? true : false;\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n            >\r\n                <CardHeader\r\n\r\n                    subheader=\"\"\r\n                    title=\"Search Laporan Sensus\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                    >\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <LapPeriode\r\n                                onChange={handleChangePeriode}\r\n                                rowSelect={rowSelect}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Provinsi\"\r\n                                margin=\"dense\"\r\n                                name=\"id_provinsi\"\r\n                                onChange={handleChangeProvinsi}\r\n                                select\r\n                                value={rowSelect.id_provinsi}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {prov.map(option => (\r\n                                    <option\r\n                                        key={option.id_provinsi}\r\n                                        value={option.id_provinsi}\r\n                                    >\r\n                                        {option.nama_provinsi}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Kabupaten\"\r\n                                margin=\"dense\"\r\n                                name=\"id_kabupaten\"\r\n                                onChange={handleChangeKabupaten}\r\n                                select\r\n                                value={rowSelect.id_kabupaten}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {kabupaten.map(option => (\r\n                                    <option\r\n                                        key={option.id_kabupaten}\r\n                                        value={option.id_kabupaten}\r\n                                    >\r\n                                        {option.nama_kabupaten}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Kecamatan\"\r\n                                margin=\"dense\"\r\n                                name=\"id_kecamatan\"\r\n                                onChange={handleChange}\r\n                                select\r\n                                value={rowSelect.id_kecamatan}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {kecamatan.map(option => (\r\n                                    <option\r\n                                        key={option.id_kecamatan}\r\n                                        value={option.id_kecamatan}\r\n                                    >\r\n                                        {option.nama_kecamatan}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions>\r\n                    {!formState.isValid}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={classes.buttonSuccess}\r\n                        variant=\"contained\"\r\n                        onClick={handleSave}\r\n                        disabled={!formState.isValid}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n\r\n                </CardActions>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSensusPerKecamatanSearchModi.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SensusPerKecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { SensusKecamatanTable, SensusPerKecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlShowLaporanSensusPerKec, } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlShowLaporanSensusPerKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKec(rowPerKecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerKecamatanSelect.id_kecamatan,\r\n          \"Periode_Sensus\": rowPerKecamatanSelect.Periode_Sensus,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerKec\r\n    // console.log(url)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedPerKecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Sensus PerKecamatan\";\r\n    const headers = [[\"Nama kelurahan\", \"Target KK\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kelurahan, elt.KK]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [perKecamatan, setPerKecamatan]=useState([]);\r\n  const [kec,setKec] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKecamatanSelect, setRowPerKecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerKecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKecamatanSelect({\r\n      ...selectedPerKecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKecamatan={perKecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <SensusPerKecamatanSearchModi\r\n          getDataBackend={showPerKec}\r\n          setKec={setKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n      <div className={classes.content}>\r\n        <SensusKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKec={setKec}\r\n          kec={kec}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKecamatanSelect} \r\n          rowSelect={rowPerKecamatanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerKecamatan={selectedPerKecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SensusPerKecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    setselectedkecamatan,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kecamatan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kecamatan\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kecamatan\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kecamatan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kecamatan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kecamatan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KecamatanTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kecamatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi)\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddKec;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"nama_kecamatan\": rowSelect.nama_kecamatan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    if (rowSelect.id_kecamatan===undefined) {\r\n      url=urlAddKec;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKec;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKec) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKec){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n          // alert(e.message)\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kecamatan == undefined ? \"Tambah Kecamatan\" : \"Ubah Kecamatan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kecamatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kecamatan')? formState.errors.nama_kecamatan[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kecamatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kecamatan? rowSelect.nama_kecamatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KecamatanTable, KecamatanAddModi } from '../KecamatanList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlDeleteKec } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KecamatanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKec = async (id_kecamatan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kecamatan: id_kecamatan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        getKec()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=kecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_kecamatan&&\r\n          ((entry.nama_kecamatan!==null? entry.nama_kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten,elt.nama_kecamatan, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kec.pdf\")\r\n  }\r\n\r\n\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkecamatanSelect, setRowkecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedkecamatan]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKec();\r\n    //   alert(setOpen) \r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkecamatan({\r\n      ...setSelectedkecamatan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkecamatanSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkecamatanSelect) => {\r\n    deleteKec(rowkecamatanSelect.id_kecamatan)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kecamatan</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kecamatan={kecamatan}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          handleOpen={handleOpen}\r\n          setSelectedkecamatan={setSelectedkecamatan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KecamatanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KecamatanList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KabupatenTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kabupaten\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kabupaten\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kabupaten List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KabupatenTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKab, urlEditKab, urlKab, urlProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport Swal from 'sweetalert2';\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kabupaten: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  id_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KabupatenAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [prov, setProv] = useState([])\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"nama_kabupaten\": rowSelect.nama_kabupaten,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    let url=urlAddKab;\r\n    if (rowSelect.id_kabupaten===undefined) {\r\n      url=urlAddKab;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKab;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKab) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKab){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kabupaten == undefined ? \"Tambah Kabupaten\" : \"Ubah Kabupaten\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange\r\n                \r\n                }\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"nama_kabupaten\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kabupaten')? formState.errors.nama_kabupaten[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kabupaten')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kabupaten? rowSelect.nama_kabupaten:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KabupatenAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KabupatenTable, KabupatenAddModi } from '../KabupatenList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteKab, urlKab,urlProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KabupatenList=props => {\r\n\r\n  async function getKab() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kabupaten);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKab=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKab, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKab = async (id_kabupaten) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kabupaten: id_kabupaten\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        getKab()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKabupaten=(e) => {\r\n    const selectedkabupaten_string=selectedkabupaten.join(\"<batas></batas>\");\r\n    let kabupaten3=kabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkabupaten_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kabupaten3)\r\n    setkabupaten(kabupaten3)\r\n    setkabupatenfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkabupatenExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kabupatenExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setkabupatenfind(e.target.value)\r\n      let kabupaten4=kabupaten.filter(function (entry) {\r\n        return entry&&entry.nama_kabupaten&&\r\n          ((entry.nama_kabupaten!==null? entry.nama_kabupaten:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kabupaten4)? kabupaten4:[kabupaten4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kabupaten);\r\n    }\r\n    setkabupatenfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"kab.pdf\")\r\n  }\r\n\r\n\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkabupatenSelect, setRowkabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkabupaten, setSelectedkabupaten]=useState([]);\r\n  const [kabupatenExport, setkabupatenExport]=useState([]);\r\n  const [kabupatenfind, setkabupatenfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkabupaten({\r\n      ...setSelectedkabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkabupatenSelect({\r\n      ...selectedkabupaten,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKabupaten, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkabupatenSelect(rowKabupaten);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkabupatenSelect) => {\r\n    deleteKab(rowkabupatenSelect.id_kabupaten)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkabupatenSelect(rowKabupaten);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKab}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Kabupaten</h5>\r\n      {/*}\r\n      <kabupatenToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kabupatenfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kabupaten={kabupaten}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kabupatenExport={kabupatenExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          kabupatenfind={kabupatenfind}\r\n          filteredItems={filteredItems}\r\n          selectedkabupaten={selectedkabupaten} \r\n          kabupatenfind={kabupatenfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkabupaten={setSelectedkabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KabupatenAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KabupatenList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst ProvinsiIDTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'Nama_Provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kabupaten/Kota',\r\n      selector: 'Jumlah_Kabupaten_Kota',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Laporan Jumlah Wilayah Provinsi di Indonesia\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsiIDTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProvinsiIDTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {ProvinsiIDTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst laporanProvID=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getProv() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetProv=urlLaporanProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Provinsi\";\r\n    const headers = [[\"Nama Provinsi\", \"Jumlah Kabupaten/Kota\", \"Jumlah Kecamatan\", \"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Provinsi, elt.Jumlah_Kabupaten_Kota, elt.Jumlah_Kecamatan, elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Indonesia</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ProvinsiIDTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default laporanProvID\r\n","import React, { useState, useEffect } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlProv, urlLaporanPerProv} from '../../../../kumpulanUrl'\r\nimport validate, { async } from 'validate.js';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerProvTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    deleteProv,\r\n    data,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    dataProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Jumlah Kabupaten/Kota',\r\n      selector: 'Jumlah_Kabupaten_Kota',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_provinsi == undefined ? 'Laporan Wilayah di ' : `Laporan Wilayah di `+ rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerProvTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlLaporanPerProv, urlLaporanProv, urlProv  } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate, { async } from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green,\r\n        '&:hover': {\r\n            backgroundColor: '#4caf50',\r\n            borderColor: '#66bb6a',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n    buttonCancel: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.red,\r\n        '&:hover': {\r\n            backgroundColor: '#f44336',\r\n            borderColor: '#ef5350',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst ComboProv = props => {\r\n    const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [getStatus, setStatus] = useState([]);\r\n    const [kabupaten, setKabupaten] = useState([]);\r\n    const [prov, setProv] = useState([]);\r\n    const [getKeyId, setKeyId] = useState([]);\r\n\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n    ///  const mapRef=createRef();\r\n    async function getProv() {\r\n        /* */\r\n        const requestOptions={\r\n          method: 'get',\r\n          //mode: \"cors\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n        };\r\n    \r\n        let url=urlProv\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response=await fetch(url, requestOptions)\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n    \r\n          .then(resJson => {\r\n            const data=resJson;\r\n            setProv(data.data);\r\n            //return false;\r\n          })\r\n          .catch(e => {\r\n            //console.log(e);\r\n            alert(\"Nextwork Error\");\r\n            setProv([]);\r\n            //this.setState({ ...this.state, isFetching: false });\r\n          });\r\n      }\r\n\r\n    // async function showKab(id_provinsi) {\r\n    //     /* */\r\n    //     const requestOptions={\r\n    //       method: 'POST',\r\n    //     //   mode: \"cors\",\r\n    //       headers: { 'Content-Type': 'application/json' },\r\n    //       body: JSON.stringify({\r\n    //           'id_provinsi': id_provinsi\r\n    //       })\r\n    //     };\r\n    \r\n    //     let url=urlLaporanPerProv\r\n    //     // eslint-disable-next-line no-useless-concat\r\n    //     const response=await fetch(url, requestOptions)\r\n    //       .then(res => {\r\n    //         return res.json();\r\n    //       })\r\n    \r\n    //       .then(resJson => {\r\n    //         const data=resJson;\r\n    //         setKabupaten(data.data);\r\n    //         //return false;\r\n    //       })\r\n    //       .catch(e => {\r\n    //         //console.log(e);\r\n    //         alert(\"Nextwork Error\");\r\n    //         setKabupaten([]);\r\n    //         //this.setState({ ...this.state, isFetching: false });\r\n    //       });\r\n    //   }\r\n\r\n\r\n    useEffect(() => {\r\n        getProv()\r\n        const errors = validate(rowSelect);\r\n        // console.log(errors)\r\n        // console.log(\"rowSelect\", rowSelect)\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n        // console.log(\"formState\", formState)\r\n\r\n\r\n        //   alert(setOpen)\r\n    }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n    const handleChange = event => {\r\n\r\n        //    event.persist();\r\n\r\n        const errors = validate(rowSelect);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n\r\n\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let nama = event.target.name.replace(\"id\",\"nama\")\r\n        if (event.target.name == \"id_provinsi\") {\r\n          setRowSelect({\r\n            ...rowSelect,\r\n             [nama]:pencarian(prov,event.target.value),\r\n             [event.target.name]: event.target.value,\r\n          });\r\n        //   console.log(\"Ket Provinsi =\", prov)\r\n        }\r\n    }\r\n\r\n    // const handleChangeProvinsi=(event)=> {\r\n    //     handleChange(event)\r\n    //     showKab(event.target.value)\r\n    // }\r\n\r\n    const handleCari = () => {   \r\n        getDataBackend(rowSelect)\r\n        // console.log('rs',rowSelect)\r\n    }\r\n\r\n    //  const position=[currentLocation.lat, currentLocation.lng]\r\n    const hasError = field => {\r\n        return formState && formState.errors && formState.errors[field] ? true : false;\r\n    }\r\n\r\n    const pencarian = (paramKab, id_prov) => {\r\n        let value = id_prov\r\n        let result = [];\r\n        result = paramKab.filter((entry) => {\r\n          return entry&&entry.id_provinsi &&(entry.id_provinsi === value) \r\n        });\r\n        // console.log(\"result =\",result[0].nama_provinsi)\r\n        return result[0].nama_provinsi\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n            >\r\n                <CardHeader\r\n                    subheader=\"\"\r\n                    title=\"Pilih Provinsi\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n\r\n                    <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                    >\r\n                        <Grid\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Provinsi\"\r\n                                margin=\"dense\"\r\n                                name=\"id_provinsi\"\r\n                                onChange={handleChange}\r\n                                //required\r\n                                select\r\n                                // eslint-disable-next-line react/jsx-sort-props\r\n                                //SelectProps={{ native: true }}\r\n\r\n                                //defaultValue={rowSelect.IsActive}\r\n                                value={rowSelect.id_provinsi}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {prov.map(option => (\r\n                                    <option\r\n                                        key={option.id_provinsi}\r\n                                        value={option.id_provinsi}\r\n                                    >\r\n                                        {option.nama_provinsi}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions>\r\n                    {!formState.isValid}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={classes.buttonSuccess}\r\n                        variant=\"contained\"\r\n                        onClick={handleCari}\r\n                        disabled={!formState.isValid}\r\n\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </CardActions>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nComboProv.propTypes = {\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default ComboProv;","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanPerProvTable, ComboProv} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanPerProv, urlLaporanProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerProvList=props => {\r\n\r\n  async function showKab(rowProvinsisSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: \"cors\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            \"id_provinsi\": rowProvinsisSelect.id_provinsi,\r\n        })\r\n    };\r\n\r\n    let urlget=urlLaporanPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlget, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan PerProvinsi\";\r\n    const headers = [[\"Jumlah Kabupaten/Kota\", \"Jumlah Kecamatan\", \"Jumlah Kelurahan\", \"Jumlah RW\", \"Jumlah RT\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Jumlah_Kabupaten_Kota, elt.Jumlah_Kecamatan, elt.Jumlah_Kelurahan, elt.Jumlah_RW, elt.Jumlah_RT]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Provinsi</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ComboProv  handleChange={handleChange} setData={setData} getDataBackend={showKab}\r\n        open={open} setRowSelect={setRowProvinsisSelect} rowSelect={rowProvinsisSelect}\r\n        title={title} datas={filteredItems}>\r\n        </ComboProv>\r\n        <LaporanPerProvTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          setRowSelect={setRowProvinsisSelect}\r\n          dataProv={prov}\r\n          rowSelect={rowProvinsisSelect}\r\n          provinsisExport={provinsisExport}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          data={provinsis}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerProvList\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst RtTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,rtfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedrt,\r\n    setselectedrt,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten/Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rt',\r\n      selector: 'nama_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Kode RT',\r\n      selector: 'KodeRT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Rt',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Rt\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Rt',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Rt\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Rt\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Rt\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedrt_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedrt_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedrt_var=[];\r\n    }\r\n\r\n    setselectedrt(selectedrt_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedrt.indexOf(id);\r\n    let newselectedrt=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedrt=newselectedrt.concat(selectedrt, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedrt=newselectedrt.concat(selectedrt.slice(1));\r\n    } else if (selectedIndex===selectedrt.length-1) {\r\n      newselectedrt=newselectedrt.concat(selectedrt.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedrt=newselectedrt.concat(\r\n        selectedrt.slice(0, selectedIndex),\r\n        selectedrt.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedrt(newselectedrt);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Rt List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_rt\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRtTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default RtTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddRt, urlEditRt, urlRt, urlRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel, urlShowRw } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst schema={\r\n  KodeRT: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_rt: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RtAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [rw, setRw]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kel, setKel]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getRw() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n\r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddRt;\r\n    let varJson = {\r\n      \"KodeRT\": rowSelect.KodeRT,\r\n      \"id_rt\": rowSelect.id_rt,\r\n      \"nama_rt\": rowSelect.nama_rt,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"IsActive\": rowSelect.IsActive,\r\n\r\n    }\r\n    if (rowSelect.id_rt===undefined) {\r\n      url=urlAddRt;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditRt;\r\n      varJson.LastModifiedBy = userName\r\n\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      return tester.json();\r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester.message)\r\n      getDataBackend();\r\n      if (url == urlAddRt) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditRt){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      then(\r\n        handleClose()\r\n        )\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n      .catch((e) => {\r\n\r\n        swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_rt == undefined ? \"Tambah Rt\" : \"Ubah Rt\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {rw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode RT\"\r\n                margin=\"dense\"\r\n                name=\"KodeRT\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeRT')? formState.errors.KodeRT[0]:null\r\n                }\r\n\r\n                error={hasError('KodeRT')}\r\n                defaultValue={rowSelect&&rowSelect.KodeRT? rowSelect.KodeRT:''}\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            \r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama RT\"\r\n                margin=\"dense\"\r\n                name=\"nama_rt\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_rt')? formState.errors.nama_rt[0]:null\r\n                }\r\n\r\n                error={hasError('nama_rt')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_rt? rowSelect.nama_rt:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRtAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RtAddModi;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { RtTable, RtAddModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteRt, urlRt,urlShowRt } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst RtList=props => {\r\n\r\n  async function getRt() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(rt);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetRt=urlRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetRt, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrt(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrt([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteRt = async (id_rt) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rt: id_rt\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrt(data.data);\r\n        setFilteredItems(data.data);\r\n        getRt()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrt([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setrtExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#rtExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=1) {\r\n      setrtfind(e.target.value)\r\n      let rt4=rt.filter(function (entry) {\r\n        return entry&&entry.nama_rt&&\r\n          ((entry.nama_rt!==null? entry.nama_rt:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(rt4)? rt4:[rt4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(rt);\r\n    }\r\n    setrtfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Nama Rw\", \"Nama Rt\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.nama_rw, elt.nama_rt, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"rt.pdf\")\r\n  }\r\n\r\n\r\n  const [rt, setrt]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowrtSelect, setRowrtSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedrt, setSelectedrt]=useState([]);\r\n  const [rtExport, setrtExport]=useState([]);\r\n  const [rtfind, setrtfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getRt()\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedrt({\r\n      ...setSelectedrt,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowrtSelect({\r\n      ...selectedrt,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowrtSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowrtSelect) => {\r\n    deleteRt(rowrtSelect.id_rt)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowrtSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getRt}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowrtSelect} rowSelect={rowrtSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>rt</h5>\r\n      {/*}\r\n      <rtToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={rtfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        rt={rt}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <RtTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          rtExport={rtExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          rtfind={rtfind}\r\n          filteredItems={filteredItems}\r\n          selectedrt={selectedrt} \r\n          handleOpen={handleOpen}\r\n          setSelectedrt={setSelectedrt}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(RtAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default RtList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst RwTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,rwfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedrw,\r\n    setselectedrw,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten/Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Rw',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Rw\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Rw',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Rw\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Rw\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Rw\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedrw_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedrw_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedrw_var=[];\r\n    }\r\n\r\n    setselectedrw(selectedrw_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedrw.indexOf(id);\r\n    let newselectedrw=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedrw=newselectedrw.concat(selectedrw, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedrw=newselectedrw.concat(selectedrw.slice(1));\r\n    } else if (selectedIndex===selectedrw.length-1) {\r\n      newselectedrw=newselectedrw.concat(selectedrw.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedrw=newselectedrw.concat(\r\n        selectedrw.slice(0, selectedIndex),\r\n        selectedrw.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedrw(newselectedrw);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Rw List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_rw\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRwTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default RwTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddRw, urlEditRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_rw: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RwAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kelurahan, setKelurahan]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKel() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKelAll=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKelAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    \r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddRw;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"nama_rw\": rowSelect.nama_rw,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    if (rowSelect.id_rw === undefined) {\r\n      url=urlAddRw;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditRw;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n    \r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddRw) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditRw){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_rw == undefined ? \"Tambah Rw\" : \"Ubah Rw\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Rw\"\r\n                margin=\"dense\"\r\n                name=\"nama_rw\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_rw')? formState.errors.nama_rw[0]:null\r\n                }\r\n\r\n                error={hasError('nama_rw')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_rw? rowSelect.nama_rw:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRwAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RwAddModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { RwTable, RwAddModi } from '../RwList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteRw, urlRw,urlshowRw } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst RwList=props => {\r\n  \r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getRw() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(rw);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetRw=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetRw, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrw(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrw([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteRw = async (id_rw) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rw: id_rw\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrw(data.data);\r\n        setFilteredItems(data.data);\r\n        getRw()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrw([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingRw[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setrwExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingRw[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#rwExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingRw[0].TitleModule).length)/2\r\n      doc.text(SettingRw[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('rw.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=1) {\r\n      setrwfind(e.target.value)\r\n      let rw4=rw.filter(function (entry) {\r\n        return entry&&entry.nama_rw&&\r\n          ((entry.nama_rw!==null? entry.nama_rw:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(rw4)? rw4:[rw4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(rw);\r\n    }\r\n    setrwfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Kabupaten Di Indonesia\";\r\n    const headers = [[\"KodeDepdagri\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Nama Rw\", \"Keterangan\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.KodeDepdagri, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.nama_rw, elt.Keterangan, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"rw.pdf\")\r\n  }\r\n\r\n\r\n  const [rw, setrw]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowrwSelect, setRowrwSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedrw, setSelectedrw]=useState([]);\r\n  const [rwExport, setrwExport]=useState([]);\r\n  const [rwfind, setrwfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getRw();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedrw({\r\n      ...setSelectedrw,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmRw, kdRw, status, keyId) => {\r\n    setRowrwSelect({\r\n      ...selectedrw,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdRw']: kdRw,\r\n      ['nmRw']: nmRw,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowRw, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowrwSelect(rowRw);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowrwSelect) => {\r\n    deleteRw(rowrwSelect.id_rw)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowrwSelect(rowRw);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getRw}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowrwSelect} rowSelect={rowrwSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>rw</h5>\r\n      {/*}\r\n      <rwToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={rwfind} deleteRw={deleteRw}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        rw={rw}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <RwTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          RwExport={rwExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteRw={deleteRw}\r\n          rwfind={rwfind}\r\n          filteredItems={filteredItems}\r\n          selectedrw={selectedrw} \r\n          handleOpen={handleOpen}\r\n          setSelectedrw={setSelectedrw}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(RwAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default RwList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst VuserTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Vuser ID',\r\n      selector: 'id',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'UserName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Lengkap',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Email',\r\n      selector: 'Email',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Alamat',\r\n      selector: 'Alamat',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'NIK',\r\n      selector: 'NIK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created At',\r\n      selector: 'CreatedDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Modified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jabatan',\r\n      selector: 'Jabatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Vuser\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Delete Vuser\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Vuser\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Vuser List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default VuserTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddVuser, urlEditVuser } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  UserName: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  NamaLengkap: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Jabatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Password: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst VuserAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userId=localStorage.getItem('user_id');\r\n    let url=urlAddVuser;\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddVuser;\r\n    } else {\r\n      url=urlEditVuser;\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"UserName\": rowSelect.UserName,\r\n        \"id\": rowSelect.id,\r\n        \"NamaLengkap\": rowSelect.NamaLengkap,\r\n        \"NIK\": rowSelect.NIK,\r\n        \"Alamat\": rowSelect.Alamat,\r\n        \"Jabatan\": rowSelect.Jabatan,\r\n        \"Password\": rowSelect.Password,\r\n        \"Email\": rowSelect.Email,\r\n        \"Title Email\": localStorage.getItem('Title Email'),\r\n        \"body\": localStorage.getItem('body'),\r\n        \"url\": localStorage.getItem('url'),\r\n      })\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n       handleClose();\r\n          return res.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(res => {\r\n        // console.log(res)\r\n        getDataBackend();\r\n        if (url == urlAddVuser) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditVuser){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n\r\n\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n    \r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title= {title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Pengguna\"\r\n                margin=\"dense\"\r\n                name=\"UserName\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('UserName')? formState.errors.UserName[0]:null\r\n                }\r\n\r\n                error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.UserName? rowSelect.UserName:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nomor Induk\"\r\n                margin=\"dense\"\r\n                name=\"NIK\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.NIK? rowSelect.NIK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Lengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Jabatan\"\r\n                margin=\"dense\"\r\n                name=\"Jabatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Jabatan')? formState.errors.Jabatan[0]:null\r\n                }\r\n\r\n                error={hasError('Jabatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.Jabatan? rowSelect.Jabatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                margin=\"dense\"\r\n                name=\"Email\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Email')? formState.errors.Email[0]:null\r\n                }\r\n                error={hasError('Email')}\r\n                defaultValue={rowSelect&&rowSelect.Email? rowSelect.Email:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n                         \r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n              disabled={title == 'Ubah Vuser'}\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default VuserAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, VuserTable, VuserAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser, urlEditVuser, urlDeleteUser } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetVuser=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetVuser, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUser = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getVuser()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Admin Bkkbn\";\r\n    const headers = [[\"Vuser ID\", \"Nama User\", \"Nama Provinsi\", \"Nama Lengkap\", \"Email\", \"Alamat\", \"NIK\", \"Jabatan\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.id, elt.UserName, elt.nama_provinsi, elt.NamaLengkap, elt.Email, elt.Alamat, elt.NIK, elt.Jabatan, elt.CreatedDate, elt.LastModified]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Vuser.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getVuser();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteUser(rowVuserSelect.id).then(Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getVuser}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Vuser</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <VuserTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(VuserAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SettingTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama',\r\n      selector: 'nama',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Value Setting',\r\n      selector: 'value_setting',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    \r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Setting\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Setting\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Setting\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Setting List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSettingTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SettingTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddSetting, urlEditSetting,urlGetKelompokData,urlShowKelompokData } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  nama: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SettingAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelompokData,setKelompokData]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  \r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function getKelData() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelompokData(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelompokData([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getKelData()\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"nama\": rowSelect.nama,\r\n      \"value_setting\": rowSelect.value_setting,\r\n      \"id_setting\":rowSelect.id_setting,\r\n      \"Id_kelompok_data\": rowSelect.Id_kelompok_data,\r\n    }\r\n    let url=urlAddSetting;\r\n    if (rowSelect.id_setting===undefined) {\r\n      url=urlAddSetting;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditSetting;\r\n      // console.log(\"ide =\",rowSelect.id_setting)\r\n\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      if (tester.status === 200) {\r\n        // alert('berhasil')\r\n     handleClose();\r\n        return tester.json();\r\n      }\r\n     \r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester)\r\n      getDataBackend();\r\n      if (url == urlAddSetting) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditSetting){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n    .catch((e) => {\r\n\r\n      // alert(e)\r\n      // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n      return false;\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama\"\r\n                margin=\"dense\"\r\n                name=\"nama\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama')? formState.errors.nama[0]:null\r\n                }\r\n\r\n                error={hasError('nama')}\r\n                defaultValue={rowSelect&&rowSelect.nama? rowSelect.nama:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Value Setting\"\r\n                margin=\"dense\"\r\n                name=\"value_setting\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('value_setting')? formState.errors.value_setting[0]:null\r\n                }\r\n                error={hasError('value_setting')}\r\n                defaultValue={rowSelect&&rowSelect.value_setting? rowSelect.value_setting:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n            <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelompok\"\r\n                margin=\"dense\"\r\n                name=\"Id_kelompok_data\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.Id_kelompok_data}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelompokData.map(option =>(\r\n                  <option value={option.Id_kelompok_data}>\r\n                    {option.nama_kelompok_data}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSettingAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SettingAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, SettingTable, SettingAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetSetting, urlDeleteSetting } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { async } from 'validate.js';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>Setting</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getSetting() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetSetting\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function deleteSetting(id_setting) {\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        id_setting: id_setting\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteSetting\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getSetting()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Setting Bkkbn\";\r\n    const headers = [[\"Nama\", \"KodeDepdagri\", \"Value Setting\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama, elt.value_setting, elt.nama_provinsi, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"setting.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getSetting();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteSetting(rowVuserSelect.id_setting).then(  Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',  \r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getSetting}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 className=\"font-poppins align-middle font-medium\" style={{ color: 'black' }}>Setting</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <SettingTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SettingAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelompokDataTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Vuser ID',\r\n    //   selector: 'id',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kelompok Data',\r\n      selector: 'nama_kelompok_data',\r\n      sortable: true,\r\n    },\r\n\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelompok Data\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kelompok Data\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelompok Data\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelompok Data List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelompokDataTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKelompokData, urlEditKelompokData } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  nama_kelompok_data: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n// const Swal = require('sweetalert2')\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelompokDataAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"nama_kelompok_data\":rowSelect.nama_kelompok_data,\r\n      \"Id_kelompok_data\":rowSelect.Id_kelompok_data,\r\n    }\r\n    let url=urlAddKelompokData;\r\n    if (title=='Tambah Kelompok Data') {\r\n      url=urlAddKelompokData;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKelompokData;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();if (url == urlAddKelompokData) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKelompokData){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelompok Data\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelompok_data\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelompok_data')? formState.errors.nama_kelompok_data[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kelompok_data')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kelompok_data? rowSelect.nama_kelompok_data:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelompokDataAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, KelompokDataTable, KelompokDataAddModi, V, KelompokDataAddModiiewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetKelompokData, urlDeleteKelompokData } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelompokDataList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKelompokData() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  async function deleteKelompokData(Id_kelompok_data) {\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        Id_kelompok_data: Id_kelompok_data\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getKelompokData()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"kelompok Data\";\r\n    const headers = [[\"Nama Kelompok Data\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kelompok_data, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Kelompok.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKelompokData();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteKelompokData(rowVuserSelect.Id_kelompok_data).then( Swal.fire( {position: 'center',\r\n    icon: 'success',\r\n    title: 'Sukses Menambah Data',\r\n    showConfirmButton: false,\r\n    timer: 1000}))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKelompokData}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelompok Data</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelompokDataTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KelompokDataAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelompokDataList;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusID=props => {\r\n  const {\r\n    sensusID,\r\n    setSensusID,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kab/Kota',\r\n      selector: 'jumKab',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'jumKec',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={'Search Laporan Target Sensus'}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensusID}\r\n              keyField=\"Periode_Sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusID.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusID;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowTargetKk } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst PencarianLaporan = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    // Periode_Sensus: {\r\n    //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n    // },\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // rowSelect.Periode_Sensus = localStorage.getItem(\"Periode Sensus\")\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n  // const pencarian = (paramProv, id_set) => {\r\n  //   let value = id_set\r\n  //   let result = [];\r\n  //   // alert(value)\r\n  //   result = paramProv.filter((entry) => {\r\n  //     return entry&&entry.id_setting &&(entry.id_setting === value) \r\n  //   });\r\n  //   // alert(\"result = \" + result[0].value_setting)\r\n  //   return result[0].value_setting\r\n  // }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    // let nama = event.target.name.replace(\"id\",\"nama\")\r\n    // if (event.target.name == \"id_setting\") {\r\n    //   setRowSelect({\r\n    //     ...rowSelect,\r\n    //      [nama]:pencarian(Setting,event.target.value),\r\n    //      [event.target.name]: event.target.value,\r\n    //   });\r\n    //   // console.log(\"Ket Setting =\", Setting)\r\n    // }\r\n  }\r\n\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {PeriodeSensus,LaporanSensusIDTable, PencarianLaporan} from '../LaporanSensusID/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlShowLaporanSensusID, urlShowTargetKk } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusID=props => {\r\n\r\n\r\n  async function showTargetKK(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensusID(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setSensusID([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensusID=(e) => {\r\n    const selectedsensusID_string=selectedsensusID.join(\"<batas></batas>\");\r\n    let sensusID3=sensusID.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensusID_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensusID3)\r\n    setSensusID(sensusID3)\r\n    setSensusIDfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusIDExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusIDExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusIDfind(e.target.value)\r\n      let sensusID4=sensusID.filter(function (entry) {\r\n        return entry&&entry.Nama_sensusID&&\r\n          ((entry.Nama_sensusID!==null? entry.Nama_sensusID:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensusID4)? sensusID4:[sensusID4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensusID);\r\n    }\r\n    setSensusIDfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Sensus Indonesia\";\r\n    const headers = [[\"Nama Provinsi\", \"Target KK\", \"Jumlah Kab/Kota\", \"Jumlah Kecamatan\", \"Jumlah Kelurahan\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_provinsi, elt.KK, elt.jumKab, elt.jumKec, elt.jumKel]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensusID, setSensusID]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusIDSelect, setRowsensusIDSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensusID, setSelectedsensusID]=useState([]);\r\n  const [sensusIDExport, setSensusIDExport]=useState([]);\r\n  const [sensusIDfind, setSensusIDfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensusID({\r\n      ...setSelectedsensusID,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusIDSelect({\r\n      ...selectedsensusID,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensusID =',data.data)\r\n  //       setSensusID(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensusID([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensusID, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusIDSelect(rowsensusID);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusIDSelect(rowsensusID);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Laporan Sensus di Indonesia</h5>\r\n      {/*}\r\n      <sensusIDToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensusID={sensusID}\r\n\r\n      />\r\n  {*/}\r\n      <PencarianLaporan\r\n         getDataBackend={showTargetKK}\r\n         setSensusID={setSensusID}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusIDSelect} \r\n         rowSelect={rowsensusIDSelect}\r\n         title={title} datas={filteredItems}>\r\n      </PencarianLaporan>\r\n      <div className={classes.content}>\r\n        <LaporanSensusIDTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusIDSelect}\r\n          sensusID={sensusID}\r\n          getDataBackend={showTargetKK}\r\n        // textfind={sensusIDfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusIDExport={sensusIDExport}\r\n          sensusIDfind={sensusIDfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusIDSelect} rowSelect={rowsensusIDSelect}\r\n          selectedsensusID={selectedsensusID} \r\n          sensusIDfind={sensusIDfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensusID={setSelectedsensusID}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusID;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst TargetKkTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rt',\r\n      selector: 'nama_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n      \r\n    },\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    \r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n        disabled={row.Periode_Sensus <= localStorage.getItem('Periode Sensus')}//={row.Periode_Sensus <= localStorage.getItem('Periode Sensus') ? \"true\" : \"false\"}\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Target Kk \") }  > {row.Periode_Sensus < parseInt(localStorage.getItem('Periode Sensus'))}<EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Target Kk\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Target KK\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TargetKkTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddTargetKk, \r\n  urlEditTargetKk, \r\nurlRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel, urlShowRw,urlShowRt\r\n\r\n} from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  Target_KK: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    // length: {\r\n    //   maximum: 200\r\n    // }\r\n  },\r\n  /**/\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TargetKkAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelompokData,setKelompokData]=useState([]);\r\n  const [rw, setRw]=useState([]);\r\n  const [rt, setRt]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kel, setKel]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  \r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rt =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKel() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getRw() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n\r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    if (title!='Tambah Target Kk' && rowSelect.id_rt_old===undefined) {\r\n      rowSelect.id_rt_old=rowSelect.id_rt;\r\n      rowSelect.Periode_Sensus_old=rowSelect.Periode_Sensus;\r\n      // console.log('rs = ',rowSelect)\r\n    }\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n      \"Target_KK\": rowSelect.Target_KK,\r\n      \"id_rt\":rowSelect.id_rt,\r\n      \"id_rt_old\":rowSelect.id_rt_old,\r\n      \"Periode_Sensus_old\":rowSelect.Periode_Sensus_old,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n    }\r\n    let url \r\n    if (title=='Tambah Target Kk') {\r\n      url=urlAddTargetKk;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditTargetKk;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();\r\n      if (url == urlAddTargetKk) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditTargetKk){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        // alert(e)\r\n        // console.log(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = parseInt(localStorage.getItem(\"Periode Sensus\"));\r\n      for (var option = periode_sensus; option <= periode_sensus + 5; option++)\r\n       {tmp.push({\"option\" : option});}\r\n      // console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Target KK\"\r\n                margin=\"dense\"\r\n                name=\"Target_KK\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Target_KK')? formState.errors.Target_KK[0]:null\r\n                }\r\n                error={hasError('Target_KK')}\r\n                defaultValue={rowSelect&&rowSelect.Target_KK? rowSelect.Target_KK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {rw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {rt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TargetKkAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, TargetKkTable, TargetKkAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetTargetKk, urlDeleteTargetkk } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getTargetKk() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetTargetKk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteTargetKk = async (id_rt) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rt: id_rt\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteTargetkk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getTargetKk()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"TargetKK Di Indonesia\";\r\n    const headers = [[\"Periode Sensus\", \"Nama Provinsi\", \"Nama kabupaten\", \"Nama Kecamatan\", \"Nama Kelurahan\", \"Nama Rw\", \"Nama Rt\", \"Target KK\", \"Dibuat oleh\", \"Dibuat tanggal\", \"Terakhir diedit tanggal\", \"Terakhir diedit oleh\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Periode_Sensus, elt.nama_provinsi, elt.nama_kabupaten, elt.nama_kecamatan, elt.nama_kelurahan, elt.nama_rw, elt.nama_rt, elt.KK, elt.CreatedBy, elt.Created, elt.LastModified, elt.LastModifiedBy]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"rt.pdf\")\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getTargetKk();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    // alert(MessageButton)\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,RowVuserSelect) => {\r\n    deleteTargetKk(RowVuserSelect.id_rt).then( Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getTargetKk}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <TargetKkTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowVuserSelect}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(TargetKkAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily: {\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab = props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className, handleDelete,\r\n    textfind, kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest } = props;\r\n\r\n\r\n  const [filterText, setFilterText] = React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [laporKab, setLaporKab] = useState([])\r\n  const [prov, setProv] = useState([]);\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles = {\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      font: 'Poppins',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll = event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var = provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var = [];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n\r\n    const selectedIndex = selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex === 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex === selectedkabupaten.length - 1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten\" : \"Laporan Target Sensus di Kabupaten \" + rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes = {\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst PencarianLaporan = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanSensusPerKabTable} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlShowLaporanSensusPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport PencarianLaporan from './components/PencarianLaporan';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_sensus&&\r\n          ((entry.Nama_sensus!==null? entry.Nama_sensus:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Sensus PerKabupaten\";\r\n    const headers = [[\"Nama kecamatan\", \"Target KK\",\"Jumlah Kelurahan\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kecamatan, elt.KK,elt.jumKel]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Laporan Target Sensus Per Kabupaten</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<PencarianLaporan\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanSensusPerKabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'jumKec',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Target Sensus di Provinsi\" : \"laporan Target Sensus di Provinsi \" +rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead  \r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerProvTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst PencarianLaporan=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanSensusPerProvTable, PencarianLaporan} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlShowLaporanSensusPerProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerProv=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_sensus&&\r\n          ((entry.Nama_sensus!==null? entry.Nama_sensus:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Sensus PerProvinsi\";\r\n    const headers = [[\"Nama kabupaten\", \"Target KK\",\"Jumlah Kecamatan\", \"Jumlah Kelurahan\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kabupaten, elt.KK, elt.jumKec, elt.jumKel]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">sensus</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <PencarianLaporan\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </PencarianLaporan>\r\n      <div className={classes.content}>\r\n        <LaporanSensusPerProvTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerProv;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst UserAccessSurveyTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Provinsi',\r\n      selector: 'id_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kabupaten',\r\n      selector: 'id_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kecamatan',\r\n      selector: 'id_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID kelurahan',\r\n      selector: 'id_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rw',\r\n      selector: 'id_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rt',\r\n      selector: 'id_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Password',\r\n      selector: 'Password',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah User Access Survey\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search User Access Survey\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"User Access Survey List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UserAccessSurveyTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport {  \r\n  urlAddUserAccessSurvey, \r\n  urlEditKab, \r\n  urlEditUserAccessSurvey, \r\n  urlGetVuser, \r\n  urlProv, \r\n  urlShowRt,\r\n  urlShowKab,\r\n  urlShowKec,\r\n  urlShowKel,\r\n  urlShowRw\r\n } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  id_rt: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  Periode_Sensus: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  id_user: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserAccessSurveyModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [getProv, setProv]=useState([]);\r\n  const [getKab, setKab]=useState([]);\r\n  const [getKec, setKec]=useState([]);\r\n  const [getKel, setKel]=useState([]);\r\n  const [getRw, setRw]=useState([]);\r\n  const [getRt, setRt]=useState([]);\r\n  const [getUser, setUser]=useState([]);\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKec(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKec([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProvinsi() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getVuser() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setUser(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setUser([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProvinsi()\r\n    getVuser()\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let url;\r\n    let varJson = {\r\n      \"id\": rowSelect.id,\r\n      \"id_user\": rowSelect.id_user,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"id_rt\": rowSelect.id_rt,\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n    }\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddUserAccessSurvey;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditUserAccessSurvey;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })/**/\r\n\r\n      .then(res => {\r\n        //console.log(res)\r\n        //console.log(res.data)\r\n        // alert(res.message)\r\n\r\n        swal(\"Berhasil Tambah data\", \"berhasil\", \"success\").then(\r\n          handleClose()\r\n          )\r\n        getDataBackend();\r\n        //alert(\"Sukses\")\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id == undefined ? \"Tambah User Access Survey\" : \"Ubah User Access Survey\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n                <TextField\r\n                fullWidth\r\n                label=\"Pilih User\"\r\n                margin=\"dense\"\r\n                name=\"id_user\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_user}\r\n                variant=\"outlined\"\r\n              >\r\n                {getUser.map((option)=> (\r\n                  <option\r\n                    key={option.id}\r\n                    value={option.id}\r\n                  >\r\n                    {option.NamaLengkap}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {getProv.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKec.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.Periode_Sensus}\r\n                variant=\"outlined\"\r\n              >\r\n               {handling()}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserAccessSurveyModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { UserAccessSurveyModi, UserAccessSurveyTable } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteUserAccessSurvey, urlGetUserAccessSurvey } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst UserAccessSurveyList=props => {\r\n\r\n  async function getUAS() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(uas);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUAS = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        getUAS()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteuas=(e) => {\r\n    const selecteduas_string=selecteduas.join(\"<batas></batas>\");\r\n    let uas3=uas.filter(function (entry) {\r\n      return entry&&entry.id&&selecteduas_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(uas3)\r\n    setUAS(uas3)\r\n    setUASfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setUASExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#uasExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setUASfind(e.target.value)\r\n      let uas4=uas.filter(function (entry) {\r\n        return entry&&entry.nama_uas&&\r\n          ((entry.nama_uas!==null? entry.nama_uas:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(uas4)? uas4:[uas4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(uas);\r\n    }\r\n    setUASfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [uas, setUAS]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getUAS());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowuasSelect, setRowuasSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selecteduas, setSelecteduas]=useState([]);\r\n  const [uasExport, setUASExport]=useState([]);\r\n  const [uasfind, setUASfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getUAS();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelecteduas({\r\n      ...setSelecteduas,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowuasSelect({\r\n      ...selecteduas,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowuas, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowuasSelect(rowuas);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowuasSelect) => {\r\n    deleteUAS(rowuasSelect.id)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowuasSelect(rowuas);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getUAS}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowuasSelect} rowSelect={rowuasSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">uas</h5>\r\n      {/*}\r\n      <uasToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={uasfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        uas={uas}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <UserAccessSurveyTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          uasExport={uasExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          uasfind={uasfind}\r\n          filteredItems={filteredItems}\r\n          selecteduas={selecteduas} \r\n          uasfind={uasfind}\r\n          handleOpen={handleOpen}\r\n          setSelecteduas={setSelecteduas}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(UserAccessSurveyModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default UserAccessSurveyList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanTargetTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,Periode,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'Nama_Provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n            <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={\"Laporan Target Dan Realisasi Sensus Di Indonesia tahun \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanTargetTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanTargetTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv, urlshowRealisasiID } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiID=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function showRealisasiID() {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": Periode,\r\n          // \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlshowRealisasiID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target Realisasi Indonesia\";\r\n    const headers = [[\"Nama Provinsi\", \"Jumlah KK\", \"Jumlah Realisasi\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Provinsi, elt.Jumlah_KK, elt.Jumlah_Realisasi]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    showRealisasiID();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Indonesia</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <LaporanTargetTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          // getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiID\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LaporanTargetSearch=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanTargetPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,Periode,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Kabupaten Kota',\r\n      selector: 'Nama_Kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n          <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Target Sensus di Provinsi \"+ Periode : \"laporan Target Sensus di Provinsi \" +rowSelect.nama_provinsi +\" \"+ Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanTargetPerProvTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanTargetPerprovTable, LaporanTargetSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlRealisasiPerprov } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiPerprov=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target Realisasi PerProvinsi\";\r\n    const headers = [[\"Nama Kabupaten Kota\", \"Jumlah KK\", \"Jumlah Realisasi\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Kabupaten, elt.Jumlah_KK, elt.Jumlah_Realisasi]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <LaporanTargetSearch\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </LaporanTargetSearch>\r\n      <div className={classes.content}>\r\n        <LaporanTargetPerprovTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiPerprov;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst LaporanTargetSearch = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\nimport { SearchInput } from 'components';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab=props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind,\r\n    onChange\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const[laporKab,setLaporKab]=useState([])\r\n  const [prov, setProv]=useState([]);\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'Nama_Kecamatan',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten\" : \"laporan Target Sensus di Kabupaten \" +rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanTargetPerkabTable, LaporanTargetSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlRealisasiPerkab, urlShowLaporanSensusPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiPerkab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiPerkab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Kecamatan&&\r\n          ((entry.Nama_Kecamatan!==null? entry.Nama_Kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target Realisasi PerKabupaten\";\r\n    const headers = [[\"Nama Kecamatan\", \"Jumlah KK\", \"Jumlah Realisasi\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.Nama_Kecamatan, elt.Jumlah_KK, elt.Jumlah_Realisasi]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<LaporanTargetSearch\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanTargetPerkabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiPerkab;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKbIdTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,Periode,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row =>   {\r\n        return alatKB[row.alat_kb].nama  \r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n              <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={\"Laporan Penggunaan Alat Kontrasepsi di Indonesia Tahun \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbIdTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKbIdTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanKbIdTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv, urlshowRealisasiID,urlRealisasiKBID } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbId=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function showRealisasiID() {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": Periode,\r\n          // \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target KB Indonesia\";\r\n    const headers = [[\"Nama provinsi\", \"Alat Kontrasepsi\", \"Jumlah Pemakaian\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_provinsi, elt.alat_kb, elt.Jumlah_Pemakai]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    showRealisasiID();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <LaporanKbIdTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          // getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbId\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlshowKKPerprov, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LaporanKbSearch=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlshowKKPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbSearch.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanKbSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKbPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,Periode,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Kabupaten Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row => {\r\n        return alatKB[row.alat_kb].nama\r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n                <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Kb  di Provinsi Tahun \"+ Periode : \"Laporan Kb di Provinsi Tahun \" +rowSelect.nama_provinsi + \" \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKbPerProvTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKbPerprovTable, LaporanKbSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlRealisasiPerprov,urlRealisasiKBPerProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbPerProv=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target KB PerProvinsi\";\r\n    const headers = [[\"Nama Kabupaten Kota\", \"Alat Kontrasepsi\", \"Jumlah Pemakaian\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kabupaten, elt.alat_kb, elt.Jumlah_Pemakai]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <LaporanKbSearch\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </LaporanKbSearch>\r\n      <div className={classes.content}>\r\n        <LaporanKbPerprovTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbPerProv;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlshowKKPerprov, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst LaporanTargetSearch = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlshowKKPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\nimport { SearchInput } from 'components';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab=props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,ExportPDF,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind,\r\n    onChange\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const[laporKab,setLaporKab]=useState([])\r\n  const [prov, setProv]=useState([]);\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row =>   {\r\n        return alatKB[row.alat_kb].nama  \r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={() => ExportPDF()}>\r\n          <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten tahun \" + localStorage.getItem(\"Periode Sensus\") : \"Laporan Target Sensus di Kabupaten \" + rowSelect.nama_kabupaten + \" Tahun \" + localStorage.getItem(\"Periode Sensus\") }\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKbPerkabTable, LaporanKbSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlRealisasiPerkab, urlShowLaporanSensusPerKab,urlRealisasiKBPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbPerKab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Kecamatan&&\r\n          ((entry.Nama_Kecamatan!==null? entry.Nama_Kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n  const ExportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title = \"Laporan Target KB Perkabupaten\";\r\n    const headers = [[\"Nama Kecamatan\", \"Alat Kontrasepsi\", \"Jumlah Pemakaian\"]];\r\n\r\n    const data = filteredItems.map(elt=> [elt.nama_kecamatan, elt.alat_kb, elt.Jumlah_Pemakai]);\r\n\r\n    let content = {\r\n      startY: 50,\r\n      head: headers,\r\n      body: data\r\n    };\r\n\r\n    doc.text(title, marginLeft, 40);\r\n    doc.autoTable(content);\r\n    doc.save(\"Laporan.pdf\")\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\"></h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<LaporanKbSearch\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanKbPerkabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          ExportPDF={ExportPDF}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbPerKab;\r\n","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport {\r\n  Main as MainLayout,\r\n  Minimal as MinimalLayout,\r\n  MinimalUser as MinimalUserLayout,\r\n} from './layouts';\r\n\r\nimport {\r\n  Team as TeamView,\r\n  ContactUs as ContactUsView,\r\n  Portfolio as PortfolioView,\r\n  Services as ServicesView,\r\n  AboutUs as AboutUsView,\r\n  //Dashboard as DashboardView,\r\n  Home as HomeView,\r\n  MiaCluster as MiaClusterView,\r\n  MiaSubmittion as MiaSubmittionView,   \r\n  MiaReviewing as MiaReviewingView, \r\n  MiaJudging as MiaJudgingView,\r\n  MiaAward as MiaAwardView,\r\n  MiaDashboard as MiaDashboardView,\r\n\r\n  KabKotaList as KabKotaListView,\r\n  ProductList as ProductListView,\r\n  GroupList as GroupListView,\r\n  Typography as TypographyView,\r\n  Icons as IconsView,\r\n  VisitorUser as VisitorUsers,\r\n  Settings as SettingsView,\r\n  SignUp as SignUpView,\r\n  SignIn as SignInView,\r\n  Signout as SignoutView,\r\n  NotFound as NotFoundView,\r\n  KelurahanList as KelurahanListView,\r\n  KabupatenList as KabupatenListView,\r\n  LaporanKabupaten as LaporanKabupatenView,\r\n  KecamatanList as KecamatanListView,\r\n  ProvinsiList as ProvinsiListView,\r\n  RtList as RtListView,\r\n  RwList as RwListView,\r\n  VuserList as VuserListView,\r\n  LaporanKecamatan as LaporanKecamatanView,\r\n  LaporanPerKabupaten as LaporanPerKabupatenView,\r\n  LaporanPerKecamatan as LaporanPerKecamatanView,\r\n  LaporanProvID as LaporanProvIDView,\r\n  LaporanPerProv as LaporanPerProvView,\r\n  LaporanKelurahan as LaporanKelurahanView,\r\n  LaporanPerKelurahan as LaporanPerKelurahanView,\r\n  LaporanSensusPerKelurahan as LaporanSensusPerKelurahanView,\r\n  LaporanSensusPerKecamatan as LaporanSensusPerKecamatanView,\r\n  SettingList as SettingListView,\r\n  KelompokDataList as KelompokDataListView,\r\n  LaporanSensusIDList as LaporanSensusIDView,\r\n  TargetKkList as TargetKkListView,\r\n  LaporanSensusPerKab as LaporanSensusPerKabVIew,\r\n  LaporanSensusPerProv as LaporanSensusPerProvView,\r\n\r\n\r\n  Profile as ProfileView,\r\n  UserAccessSurveyList as UserAccessSurveyListView,\r\n  LaporanTargetRealisasiID as LaporanTargetRealisasiIDView,\r\n  LaporanTargetRealisasiPerprov as LaporanTargetRealisasiPerprovView,\r\n  LaporanTargetRealisasiPerkab as LaporanTargetRealisasiPerkabView,\r\n  LaporanKbId as LaporanKbIdView,\r\n  LaporanKbPerProv as LaporanKbProvView,\r\n  LaporanKbPerkab as LaporanKbKabView,\r\n\r\n\r\n\r\n} from './views';\r\n\r\nconst Routes = () => {\r\n//alert(localStorage.getItem(\"Username\"))\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/beranda\"\r\n      /> */}\r\n\r\n      {localStorage.getItem(\"username\")/*1===1/**/ ? <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/home\"\r\n      /> : <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/login\"\r\n      />}\r\n\r\n\r\n      <RouteWithLayout\r\n        component={SettingListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/setting\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={MiaClusterView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/clustering\"\r\n      />\r\n      <RouteWithLayout\r\n        component={MiaSubmittionView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/submission\"\r\n      />\r\n      <RouteWithLayout\r\n        component={MiaReviewingView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/reviewing\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={MiaDashboardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/dashboard\"\r\n      />\r\n\r\n\r\n      <RouteWithLayout\r\n        component={MiaJudgingView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/judging\"\r\n      />\r\n\r\n    <RouteWithLayout\r\n        component={MiaAwardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/award\"\r\n      />\r\n\r\n        <RouteWithLayout\r\n        component={MiaAwardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/mia/award\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={ProfileView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/profile\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n      <RouteWithLayout\r\n        component={KelompokDataListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelompok-data\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={HomeView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/home\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SettingListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/setting\"\r\n      />\r\n      <RouteWithLayout\r\n        component={KelompokDataListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelompok-data\"\r\n      />\r\n      <RouteWithLayout\r\n        component={TargetKkListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-kk\"\r\n      />\r\n\r\n\r\n      {/* Beginning Of Input Data */}\r\n      <RouteWithLayout\r\n        component={VuserListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/vusertable\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={ProvinsiListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/provinsi\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={KabupatenListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kabupaten\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={KecamatanListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kecamatan\"\r\n      />\r\n\r\n\r\n      <RouteWithLayout\r\n        component={KelurahanListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={RtListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/rt\"\r\n      />\r\n      <RouteWithLayout\r\n        component={RwListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/rw\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserAccessSurveyListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/user-access-survey\"\r\n      />\r\n\r\n      {/*End Of Input Data  */}\r\n\r\n\r\n      {/* Beginning of Laporan */}\r\n\r\n      <RouteWithLayout\r\n        component={LaporanProvIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan/provinsiID\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={LaporanPerProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan/perProvTable\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKabupatenView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kabupaten\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKabupatenView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-per-kabupaten\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-per-kecamatan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kecamatan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-perkelurahan\"\r\n      />\r\n\r\n      {/* Ending */}\r\n\r\n      {/* Beginning Laporan Sensus */}\r\n      <RouteWithLayout\r\n        component={LaporanSensusIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-indonesia\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKabVIew}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkab\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perprov\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkecamatan\"\r\n      />\r\n      {/* Ending */}\r\n\r\n      {/* Beginning Target Realisasi */}\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-id\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiPerprovView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-perprov\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiPerkabView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-perkab\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={LaporanKbIdView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-id\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKbProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-prov\"\r\n      />\r\n        <RouteWithLayout\r\n        component={LaporanKbKabView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-kab\"\r\n      />\r\n\r\n      {/* Ending */}\r\n\r\n      {/* <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserSignInView}\r\n        exact\r\n        layout={MinimalUserLayout}\r\n        path=\"/login-user\"\r\n      /> */}\r\n      <RouteWithLayout\r\n        component={SignoutView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/logout\"\r\n      />\r\n      <RouteWithLayout\r\n        component={NotFoundView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/not-found\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst browserHistory=createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators={\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport {createStore} from 'redux'\r\nimport { Provider } from 'react-redux';\r\n\r\nconst globalState={\r\n    orgData:[],\r\n}\r\nconst rootReducer=(state=globalState,action)=>{\r\n    //return state;\r\n  \r\n    switch(action.type)\r\n    {\r\n            case 'UBAH_DATA' :\r\n                alert(action.type)\r\n                return{\r\n                    ... state,                   //\r\n                     orgData:action.newValue\r\n                     //salary:action.newValue\r\n \r\n                    \r\n                }\r\n                default :\r\n                return state;\r\n        \r\n    } \r\n}\r\n//    const storeRedux=createStore(rootReducer)\r\n    const storeRedux=createStore(rootReducer)\r\n\r\nReactDOM.render(<Provider store={storeRedux}><App /></Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}